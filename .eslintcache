[{"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/index.js":"1","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/App.js":"2","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/reportWebVitals.js":"3","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/actionTypes.js":"4","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/utility.js":"5","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/axios-order.js":"6","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/UI/Spinner/Spinner.js":"7","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/getRequests.js":"8","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/BudgetItem/BudgetItem.js":"9","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/reducers/initBudget.js":"10","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/initBudget.js":"11","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/UI/Button/Button.js":"12","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/UI/Dropdown/Dropdown.js":"13","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/data/map_district_one.js":"14","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/reducers/calculateSubsets.js":"15","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/index.js":"16","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/calculateSubsets.js":"17","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/reducers/setMap.js":"18","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/setMap.js":"19","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/containers/ControlsManager/ControlsManager.js":"20","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/containers/BudgetItemVisualization/BudgetItemVisualization.js":"21","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/UI/MapMarker/MapMarker.js":"22","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/Map/Map.js":"23","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/UI/MapPinIcon/MapPinIcon.js":"24","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/util/translateCategory.js":"25","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/containers/BudgetMap/BudgetMap.js":"26","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/UI/MapMarker/mapMarkerImgs.js":"27","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/UI/Input/Input.js":"28","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/containers/LegendManager/LegendManager.js":"29","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/UI/Legend/Legend.js":"30","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/containers/HomePage/HomePage.js":"31","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/containers/ParticipatoryBudgetMap/ParticipatoryBudgetMap.js":"32"},{"size":1155,"mtime":1612845055717,"results":"33","hashOfConfig":"34"},{"size":270,"mtime":1613017745816,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1611196435849,"results":"36","hashOfConfig":"34"},{"size":1203,"mtime":1612924716262,"results":"37","hashOfConfig":"34"},{"size":127,"mtime":1611282656988,"results":"38","hashOfConfig":"34"},{"size":134,"mtime":1611282433921,"results":"39","hashOfConfig":"34"},{"size":174,"mtime":1611283269158,"results":"40","hashOfConfig":"34"},{"size":218,"mtime":1611633196185,"results":"41","hashOfConfig":"34"},{"size":1677,"mtime":1612840030698,"results":"42","hashOfConfig":"34"},{"size":5436,"mtime":1613010310735,"results":"43","hashOfConfig":"34"},{"size":3378,"mtime":1612195480323,"results":"44","hashOfConfig":"34"},{"size":214,"mtime":1611429488562,"results":"45","hashOfConfig":"34"},{"size":527,"mtime":1612661434153,"results":"46","hashOfConfig":"34"},{"size":408775,"mtime":1611627566833,"results":"47","hashOfConfig":"34"},{"size":3446,"mtime":1613011265168,"results":"48","hashOfConfig":"34"},{"size":311,"mtime":1612924724291,"results":"49","hashOfConfig":"34"},{"size":1052,"mtime":1613010351820,"results":"50","hashOfConfig":"34"},{"size":2033,"mtime":1612928079181,"results":"51","hashOfConfig":"34"},{"size":1957,"mtime":1612927732533,"results":"52","hashOfConfig":"34"},{"size":6938,"mtime":1613011408348,"results":"53","hashOfConfig":"34"},{"size":2213,"mtime":1612845942482,"results":"54","hashOfConfig":"34"},{"size":1281,"mtime":1612635308620,"results":"55","hashOfConfig":"34"},{"size":3461,"mtime":1612927330448,"results":"56","hashOfConfig":"34"},{"size":486,"mtime":1612446027500,"results":"57","hashOfConfig":"34"},{"size":2200,"mtime":1612496121950,"results":"58","hashOfConfig":"34"},{"size":4688,"mtime":1612928224639,"results":"59","hashOfConfig":"34"},{"size":2412,"mtime":1612627463758,"results":"60","hashOfConfig":"34"},{"size":422,"mtime":1613010725997,"results":"61","hashOfConfig":"34"},{"size":713,"mtime":1612839807522,"results":"62","hashOfConfig":"34"},{"size":631,"mtime":1612845832886,"results":"63","hashOfConfig":"34"},{"size":290,"mtime":1613017732148,"results":"64","hashOfConfig":"34"},{"size":1217,"mtime":1613017716405,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"sve5og",{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"68"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/index.js",[],["145","146"],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/App.js",["147"],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/reportWebVitals.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/actionTypes.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/utility.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/axios-order.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/UI/Spinner/Spinner.js",["148"],"import react from 'react'\nimport classes from './Spinner.module.css'\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/getRequests.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/BudgetItem/BudgetItem.js",["149","150"],"import React, {Component} from 'react';\nimport classes from './BudgetItem.module.css'\n\nvar priceFormatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',      \n});\n\nvar numberFormatter = (num) => {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nconst budgetItem = (props) => {\n\n    return (\n        <div className={classes.BudgetItem} onClick={props.clicked}>\n                <strong>Name:</strong> {props.title}<br></br>\n                <strong>Description:</strong> {props.description}<br></br>\n                <strong>Cost:</strong> {priceFormatter.format(props.cost)}<br></br>\n                {props.votes ? <React.Fragment><strong>Votes:</strong> {numberFormatter(props.votes)}<br></br></React.Fragment>:null}\n                <strong>Year:</strong> {props.vote_year}<br></br>\n                <strong>Category:</strong> {props.category}<br></br>\n                <strong>Council District:</strong> {props.council_district}<br></br>\n\n                {props.councilMember.length > 0 ?\n                    <React.Fragment>\n                        <strong>Borough:</strong> {props.councilMember[0].borough}<br></br>\n                        <strong>Current Council Member:</strong> {props.councilMember[0].name}, {props.councilMember[0].political_party}<br></br>\n                    </React.Fragment>\n                : null}                    \n                {props.longitude && props.latitude ?\n                    <React.Fragment>\n                        <a href = '#'>Click to focus</a>\n                    </React.Fragment>\n                    :''\n                }\n        </div>\n    );    \n}\n\nexport default budgetItem;","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/reducers/initBudget.js",["151","152","153","154","155","156","157","158"],"import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\nimport { similarSubstring } from 'similar-substring';\n\nconst initialState = {    \n    currItem: null,\n    participatoryBudget: null,\n    loading: false,\n    councilMemberLoading: false,\n    error: false,\n    councilMembers: null,\n    councilMembersList: null,\n    districts: null,\n    districtsLoading: false,\n    itemCategories: null,\n    itemYears: null,\n    itemDistricts: null,\n    selectedDistricts: null,\n\n    loaded: false,\n}\n\nconst initCategory = (participatoryBudget) => {\n    let categories = [];\n    var keys = Object.keys(participatoryBudget);\n    keys.forEach(function(key){\n        categories.push(participatoryBudget[key].category);\n    });    \n\n    return categories.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n\nconst initYear = (participatoryBudget) => {\n    let years = [];\n    var keys = Object.keys(participatoryBudget);\n    keys.forEach(function(key){\n        years.push(participatoryBudget[key].vote_year);\n    });    \n    return years.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n\nconst initDistricts = (participatoryBudget) => {\n    let years = [];\n    var keys = Object.keys(participatoryBudget);\n    keys.forEach(function(key){\n        years.push(participatoryBudget[key].council_district);\n    });    \n    return years.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n\nconst findMax = (key, data, councilMembers) => {    \n    \n    var maxProp = null;\n    var maxValue = -1;\n    for (var prop in data) {\n        var curr = data[prop];        \n        var value = curr[key];\n        if (value > maxValue) {\n            maxProp = curr\n            maxValue = value\n        }\n    }\n    \n    var councilMember = councilMembers.filter(item => item.district === maxProp.council_district)[0];    \n    const updatedMaxProp = {...maxProp, councilMember: councilMember}    \n    return {...updatedMaxProp};\n}\n\nconst loadBudgetSuccess = (state, participatoryBudget) => {\n\n    return updateObject(state, \n        {\n            loading: false, \n            participatoryBudget: JSON.parse(participatoryBudget), \n            itemCategories: initCategory(JSON.parse(participatoryBudget)),\n            itemYears: initYear(JSON.parse(participatoryBudget)),\n            itemDistricts: initDistricts(JSON.parse(participatoryBudget))\n        })\n}\n\nconst sortByYear = (participatoryBudget, year) =>{\n    //console.log(participatoryBudget.filter(item => item.vote_year === year))\n    let transformed = [];\n    Object.keys(JSON.parse(participatoryBudget)).map(key => {\n        // console.log('year', year)\n        \n        if(JSON.parse(participatoryBudget)[key].vote_year === year)\n            transformed.push(JSON.parse(participatoryBudget)[key])\n    })\n\n    return transformed;\n}\n\nconst sortByDistrict = (participatoryBudget, district) =>{\n    //console.log(participatoryBudget.filter(item => item.vote_year === year))\n    let transformed = [];\n    Object.keys(JSON.parse(participatoryBudget)).map(key => {\n        // console.log('year', year)\n        \n        if(JSON.parse(participatoryBudget)[key].council_district === district)\n            transformed.push(JSON.parse(participatoryBudget)[key])\n    })\n\n    return transformed;\n}\n\nconst sortByCategory = (participatoryBudget, category) =>{\n    //console.log(participatoryBudget.filter(item => item.vote_year === year))\n    let transformed = [];\n    Object.keys(JSON.parse(participatoryBudget)).map(key => {\n        // console.log('year', year)\n        \n        if(JSON.parse(participatoryBudget)[key].category === category)\n            transformed.push(JSON.parse(participatoryBudget)[key])\n    })\n\n    return transformed;\n}\n\nconst fetchCouncilMembers = (councilMembers) => {\n    let outputCouncilMembers = JSON.parse(councilMembers);    \n    let outputCouncilMembersList = [];\n    outputCouncilMembers.forEach(value => outputCouncilMembersList.push(value.name));    \n\n    return {\n        councilMemberLoading: false,\n        councilMembers: outputCouncilMembers,\n        councilMembersList: outputCouncilMembersList,\n    }\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.FETCH_COUNCIL_MEMBER_START: return updateObject(state, {councilMemberLoading: true})\n        case actionTypes.FETCH_COUNCIL_MEMBER_SUCCESS: return updateObject(state, fetchCouncilMembers(action.councilMembers))            \n        case actionTypes.FETCH_COUNCIL_MEMBER_FAIL: return updateObject(state, {error: action.error, councilMemberLoading: false})\n        \n        case actionTypes.FETCH_PARTICIPATORY_BUDGET_ITEM_START: return updateObject(state, {loading: true})\n        case actionTypes.FETCH_PARTICIPATORY_BUDGET_ITEM_SUCCESS: return updateObject(state, loadBudgetSuccess(state,action.data))            \n        case actionTypes.FETCH_PARTICIPATORY_BUDGET_ITEM_FAIL: return updateObject(state, {error: action.error, loading: false})    \n        \n        case actionTypes.FETCH_DISTRICTS_START: return updateObject(state, {districtsLoading: true})\n        case actionTypes.FETCH_DISTRICTS_SUCCESS: return updateObject(state, {districtsLoading: false, districts: JSON.parse(action.districts), loaded: true})            \n        case actionTypes.FETCH_DISTRICTS_FAIL: return updateObject(state, {error: action.error, districtsLoading: false})\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/initBudget.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/UI/Button/Button.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/UI/Dropdown/Dropdown.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/data/map_district_one.js",[],["159","160"],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/reducers/calculateSubsets.js",["161","162","163","164","165","166","167","168","169","170","171","172","173"],"import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {            \n    selectedBudgetItems: null,\n    selectedDistricts: null,\n    action: {},\n}\n\nconst sortByCategory = (participatoryBudget, category) =>{\n    let transformed = [];\n    console.log('category', category)\n    Object.keys(participatoryBudget).map(key => {\n        if(participatoryBudget[key].category === category)\n            transformed.push(participatoryBudget[key])\n    })    \n    return transformed;\n}\n\nconst sortByDistrict = (participatoryBudget, district) =>{    \n    let transformed = [];\n    Object.keys(participatoryBudget).map(key => {                \n        if(participatoryBudget[key].council_district === district)\n            transformed.push(participatoryBudget[key])\n    })\n    return transformed;\n}\n\nconst sortByYear = (participatoryBudget, year) =>{\n    \n    let transformed = [];    \n    Object.keys(participatoryBudget).map(key => {        \n        if(participatoryBudget[key].vote_year === year)\n            transformed.push(participatoryBudget[key])\n    })    \n    return transformed;    \n}\n\nconst filterBudget = (participatoryBudget, councilMembers, category, year, district, minCost, maxCost, minVotes, maxVotes, councilMember) => {\n    let newBudget = [];\n    let newCouncil = [];\n    Object.keys(participatoryBudget).map(key => {\n        newBudget.push(participatoryBudget[key])\n    })\n\n    Object.keys(councilMembers).map(key => {\n        newCouncil.push(councilMembers[key])\n    })\n\n    if(year != '')\n        newBudget = newBudget.filter(item => item.year === year);\n    if(category != '')\n        newBudget = newBudget.filter(item => item.category === category);\n    if(district != '')\n        newBudget = newBudget.filter(item => item.council_district === district);\n    if(minCost != '')\n        newBudget = newBudget.filter(item => Number(item.cost) >= Number(minCost));\n    if(maxCost != '')\n        newBudget = newBudget.filter(item => Number(item.cost) <= Number(maxCost));\n    if(minVotes != '')\n        newBudget = newBudget.filter(item => Number(item.votes) >= Number(minVotes));\n    if(maxVotes != '')\n        newBudget = newBudget.filter(item => Number(item.votes) <= Number(maxVotes));\n    if(councilMember != ''){        \n        var currDistrict = newCouncil.filter(member => member.name === councilMember)[[0]].district;        \n        newBudget = newBudget.filter(item => item.council_district === currDistrict);\n    }\n\n    console.log(\"calculate Subsets reducers\",newBudget)\n\n    return newBudget;\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.BUDGET_FILTER: return updateObject(state, {selectedBudgetItems: filterBudget(action.budget, action.councilMembers, action.category, action.year, action.district, action.minCost, action.maxCost, action.minVotes, action.maxVotes, action.councilMember), action: {...action}})\n        case actionTypes.BUDGET_BY_YEAR: return updateObject(state, {selectedBudgetItems: sortByYear(action.budget, action.year)})\n        case actionTypes.BUDGET_BY_DISTRICT: return updateObject(state, {selectedBudgetItems: sortByDistrict(action.budget, action.district)})\n        case actionTypes.BUDGET_BY_CATEGORY: return updateObject(state, {selectedBudgetItems: sortByCategory(action.budget, action.category)})\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/index.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/calculateSubsets.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/reducers/setMap.js",["174","175","176"],"import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\nimport GoogleMapReact from 'google-map-react';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport MapMarker from '../../components/UI/MapMarker/MapMarker';\n\nconst DEFAULT_CENTER = { lat: 40.635, lng: -73.94 };\n\nconst initialState = {\n    map: <Spinner />,\n    mapProps: {},\n    zoom: 11,\n    markers: [],\n    center: DEFAULT_CENTER,\n    showDistricts: false,\n}\n\nconst setMap = (state,districts, selectedDistricts, councilMembers, selectedBudgetItems) => {  \n    \n    return {\n                zoom: state.zoom,\n                districts: districts,\n                selectedDistricts: selectedDistricts,\n                councilMembers: councilMembers,\n                selectedBudgetItems: selectedBudgetItems,                \n            }\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.SET_MAP: return updateObject(state, {mapProps: setMap(state,action.districts, action.selectedDistricts, action.councilMembers, action.selectedBudgetItems)})        \n        case actionTypes.UPDATE_MAP: return updateObject(state, {mapProps: setMap(state,action.districts, action.selectedDistricts, action.councilMembers, action.selectedBudgetItems)})        \n        case actionTypes.RESET_MAP: return updateObject(state, {map: <Spinner />})        \n        case actionTypes.ZOOM_MARKER: return updateObject(state, {zoom: 14, center: action.center})\n        case actionTypes.ZOOM_MARKER: return updateObject(state, {zoom: 14, center: action.center})\n        case actionTypes.ZOOM_IN: return updateObject(state, {zoom: state.zoom + 1})\n        case actionTypes.ZOOM_OUT: return updateObject(state, {zoom: state.zoom - 1})\n        case actionTypes.CENTER: return updateObject(state, {zoom: 11, center: DEFAULT_CENTER})\n        case actionTypes.SHOW_DISTRICTS: return updateObject(state, {map: <Spinner />})\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/setMap.js",["177","178"],"import * as actionTypes from './actionTypes';\nimport axios from '../../axios-order';\nimport * as getRequests from './getRequests';\n\nexport const zoomMarker = (center) => {\n    return {\n        type: actionTypes.ZOOM_MARKER,\n        center: center,\n    }\n}\n\nexport const zoomOut = () => {\n    return {\n        type: actionTypes.ZOOM_OUT,\n    }\n}\n\nexport const zoomIn = () => {\n    return {\n        type: actionTypes.ZOOM_IN, \n    }\n}\n\nexport const center = () => {\n    return {\n        type: actionTypes.CENTER, \n    }\n}\n\nexport const showDistrictsHelper = () => {\n    console.log('show districts helper')\n    return {\n        type: actionTypes.SHOW_DISTRICTS,\n    }\n}\n\nexport const showDistricts = () => {\n    console.log('show districts')\n    return dispatch => {\n        setTimeout(() => dispatch(showDistrictsHelper(),50));\n    }\n}\n\nexport const setMap = (districts, selectedDistricts, councilMembers, selectedBudgetItems) => {\n    return {\n        type: actionTypes.SET_MAP,\n        districts: districts,\n        selectedDistricts: selectedDistricts,\n        councilMembers: councilMembers,\n        selectedBudgetItems: selectedBudgetItems,\n    }\n}\n\nexport const updateHelper = (districts, selectedDistricts, councilMembers, selectedBudgetItems) => {\n    return {\n        type: actionTypes.UPDATE_MAP,\n        districts: districts,\n        selectedDistricts: selectedDistricts,\n        councilMembers: councilMembers,\n        selectedBudgetItems: selectedBudgetItems,        \n    }\n}\n\nexport const updateMap = (districts, selectedDistricts, councilMembers, selectedBudgetItems) => {\n    return dispatch => {\n        setTimeout(() => dispatch(updateHelper(districts, selectedDistricts, councilMembers, selectedBudgetItems),50));\n    }\n}\n\nexport const resetHelper = () => {    \n    return {\n        type: actionTypes.RESET_MAP,\n    }\n}\n\nexport const resetMap = () => {\n    return dispatch => {\n        setTimeout(() => dispatch(resetHelper(),50));\n    }\n}","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/containers/ControlsManager/ControlsManager.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/containers/BudgetItemVisualization/BudgetItemVisualization.js",["179","180","181","182"],"import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Dropdown from '../../components/UI/Dropdown/Dropdown';\nimport Button from '../../components/UI/Button/Button';\nimport BudgetItem from '../../components/BudgetItem/BudgetItem'\n\nclass BudgetItemVisualization extends Component {\n\n    setCenter = (item) => {\n        if(item.longitude && item.latitude){\n            this.props.onZoomMarker({lat: item.latitude, lng: item.longitude});\n        }\n    }\n\n    findDistrict = (district) => {\n        if(this.props.councilMembers){                        \n            var councilMember = this.props.councilMembers.filter(item => item.district === district.match(/\\d+/)[0]);            \n            return councilMember;\n        }\n    }\n\n    render(){\n\n        console.log(this.props)\n\n        let budgetItems = [];\n        if(this.props.selectedBudgetItems){\n            this.props.selectedBudgetItems.map((item,idx )=> {\n                budgetItems.push( <BudgetItem \n                            key={idx} \n                            {...item} \n                            councilMember={this.findDistrict(item.council_district)} \n                            clicked={() => this.setCenter(item)}\n                        />\n                    );\n            })\n        }\n        \n        return(\n            <div>                                \n                {this.props.selectedBudgetItems ? budgetItems : <p>Budget items will load here</p>}                \n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedBudgetItems: state.subsets.selectedBudgetItems,\n        councilMembers: state.participatoryBudget.councilMembers,        \n        \n        center: state.setMap.center,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onZoomMarker: (center) => dispatch(actions.zoomMarker(center)),\n        onZoomIn: () => dispatch(actions.zoomIn()),\n        onZoomOut: () => dispatch(actions.zoomOut()),        \n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(BudgetItemVisualization);","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/UI/MapMarker/MapMarker.js",["183","184","185"],"import React from 'react';\nimport classes from './MapMarker.module.css'\nimport MapPinIcon from '../MapPinIcon/MapPinIcon';\nimport {mapMarkerImgs} from './mapMarkerImgs'\n\nconst MapMarker = (props) => {  \n\n  let width = props.width;\n  let height = props.height;\n  let transform = 'translate(-50%, -50%)';\n\n\n  //if the marker is the center, double the width and update the transform\n  if(props.center.lat === props.lat && props.center.lng === props.lng){\n    width = width.split('px')[0]*2+'px';\n    height = height.split('px')[0]*2+'px';\n    transform = 'translate(-50%, -100%)'\n  }\n\n  return (\n      <div className={classes.MapMarker} lat={props.lat} lng={props.lng} onClick={props.clicked}>\n        {props.zoom >= 13 ?\n          <img style={{\n              width: width, height: height, \n              position: 'absolute', top: \"50%\", left: \"50%\", transform: transform,\n            }} \n            src={mapMarkerImgs[props.item.pinCategory].img}>\n          </img>\n          :\n          <img style={{\n              width: '10px', height: '10px', \n              position: 'absolute', transform: 'translate(-50%, -50%)'\n            }} \n            src={mapMarkerImgs[props.item.pinCategory].dot}>\n          </img>          \n        }\n      </div>\n    );\n};\n\nexport default MapMarker;","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/Map/Map.js",["186","187","188"],"import React from 'react';\nimport GoogleMapReact from 'google-map-react';\n\nimport config from './mapConfig';\n\nconst renderDistricts = (map, maps, coords, selectedDistricts, councilMembers, showDistricts) => {\n    let allDistrictPolygons = {};\n    // let polygonCoords = [];\n    console.log('show districts?', showDistricts)\n    console.log(coords)\n\n    if(showDistricts){\n        Object.keys(coords.features).map(key => {  \n            let districtPolygons = [];\n            let currDistrict = coords.features[key].properties.coun_dist;\n            coords.features[key].geometry.coordinates.map(arr => {   \n                let coordArr = [];     \n                arr[0].map(coordinate => coordArr.push({lat: coordinate[1], lng: coordinate[0]}))        \n                \n                var councilDistrictPolygon = new maps.Polygon({\n                    paths: coordArr,\n                    strokeColor: \"#FF0000\",\n                    strokeOpacity: 0.8,\n                    strokeWeight: 2,\n                    fillColor: \"#FF0000\",\n                    fillOpacity: 0.35,\n                    indexID: currDistrict,\n                });     \n                \n                                \n                districtPolygons.push(councilDistrictPolygon);\n                // polygonCoords.push(coordArr);\n                var districtInfo = councilMembers.filter(item => item.district === currDistrict);                                \n\n                addListenersOnPolygon(map,maps,councilDistrictPolygon, districtInfo);\n            });            \n            allDistrictPolygons[key] = {district: coords.features[key].properties.coun_dist,polygons: districtPolygons};\n        });\n    }            \n    Object.keys(allDistrictPolygons).map(key => {        \n        // if(selectedDistricts.includes(Number(allDistrictPolygons[key].district)))\n            allDistrictPolygons[key].polygons.map(polygon => polygon.setMap(map))    \n    })\n}\n\nconst addListenersOnPolygon = (map,maps,polygon, info) => {\n    var infoWindow = new maps.InfoWindow();    \n    maps.event.addListener(polygon, 'click', function (event) {\n        infoWindow.setContent('District: '+polygon.indexID + '<br>Council Member: '+ info[0].name+ '<br>Political Party: '+ info[0].political_party);\n        var latLng = event.latLng;\n        infoWindow.setPosition(latLng);\n        infoWindow.open(map);        \n    });  \n  }\n\nconst handleApiLoaded = (map, maps, coords, selectedDistricts, councilMembers, budget) => {    \n    console.log('handleAPILoaded called')\n    renderDistricts(map, maps, coords, selectedDistricts, councilMembers); \n}\n\nconst map = (props) => {\n    console.log('map props',props)\n    let output =\n        <GoogleMapReact\n                    bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_MAPS_TOKEN, v: '3.31', }}                    \n                    defaultCenter={props.defaultCenter}\n                    center={{lat: Number(props.center.lat), lng: Number(props.center.lng)}}\n                    zoom={props.zoom}\n                    options={config}   \n\n                    yesIWantToUseGoogleMapApiInternals\n                    onGoogleApiLoaded={({ map, maps }) => {\n                        handleApiLoaded(map, maps, props.districts, props.selectedDistricts, props.councilMembers, props.selectedBudgetItems, props.showDistricts)\n                    }}\n        >\n            {props.markers}\n        </GoogleMapReact>;\n\n    return output;\n}\n\nexport default map;","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/UI/MapPinIcon/MapPinIcon.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/util/translateCategory.js",["189"],"let newCategories = ['Culture and Community Facilities',\n    'Schools and Education',\n    'Environment',\n    'Housing',\n    'Parks and Recreation',\n    'Public Health',\n    'Public Safety',\n    'Sanitation',\n    'Seniors',\n    'Streets and Sidewalks',\n    'Transit and Transportation',\n    'Youth',\n    'Previously funded']\n\nconst translateCategory = (item) => {\n\n    let category = item.category;\n\n    if( category.includes('Health and Environment')) return {...item, pinCategory: 'Public Health'}\n    if( category === 'Public Safety & Public Health') return {...item, pinCategory: 'Public Safety'}\n\n    if( category.includes('Safety')) return {...item, pinCategory: 'Public Safety'};\n    if( category.includes('Communit') || category.includes('Cultur') || category.includes('District-Wide Priorities')) return {...item, pinCategory: 'Culture and Community Facilities'};\n    if( category.includes('School') || category.includes('Education') || category.includes('Librar')) return {...item, pinCategory: 'Schools and Education'};\n    if( category.includes('Environment')) return {...item, pinCategory: 'Environment'};\n    \n    if( category.includes('Recreation') || category.includes('Parks')) return {...item, pinCategory: 'Parks and Recreation'};\n    if( category.includes('Health')) return {...item, pinCategory: 'Public Health'};\n    \n    // if( category.includes('')) return {...item, pinCategory: 'Previously funded'};\n    \n    if( category.includes('Housing')) return {...item, pinCategory: 'Housing'};\n    if( category.includes('Sanitation')) return {...item, pinCategory: 'Sanitation'};\n    if( category.includes('Senior')) return {...item, pinCategory: 'Seniors'};\n    if( category.includes('Streets')) return {...item, pinCategory: 'Streets and Sidewalks'};\n    if( category.includes('Transit') || category.includes('Transportation')) return {...item, pinCategory: 'Transit and Transportation'};\n    if( category.includes('Youth')) return {...item, pinCategory: 'Youth'};\n\n    // if( category.includes('Save your money') || category.includes('Save your money')) return {...item, pinCategory: 'Previously funded'}\n    // default)\n    //     return item;\n}\n\nexport default translateCategory;","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/containers/BudgetMap/BudgetMap.js",["190","191","192"],"import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Button from '../../components/UI/Button/Button';\nimport MapMarker from '../../components/UI/MapMarker/MapMarker';\nimport * as actions from '../../store/actions/index';\nimport translateCategory from '../../util/translateCategory';\n\nimport Map from '../../components/Map/Map';\n\nconst DEFAULT_CENTER = { lat: 40.635, lng: -73.94 };\n\nclass BudgetMap extends Component{\n    state = {\n        firstPageLoad: false,\n    } \n\n    componentDidMount(){\n        if(this.props.districts){\n            this.props.onSetMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(!this.state.firstPageLoad && this.props.loaded){\n            this.props.onSetMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n            this.setState({firstPageLoad: true})\n        }\n\n        if((prevProps.selectedBudgetItems !== this.props.selectedBudgetItems)){\n            this.props.onResetMap();            \n            this.props.onUpdateMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);     \n        }    \n        \n        if((this.props.showDistricts !== prevProps.showDistricts)){\n            console.log('[BudgetMap.js] show districts')\n\n        }  \n    }\n\n    markerClicked = (center) => {        \n        this.props.onZoomMarker(center);\n    }\n\n    render(){     \n        \n        let markers = [];    \n        if(this.props.selectedBudgetItems){                    \n            this.props.selectedBudgetItems.filter(item => item.latitude && item.longitude).map((item,idx) => {\n                markers.push(<MapMarker \n                    center={this.props.center}\n                    key={idx} \n                    lat={item.latitude} \n                    lng={item.longitude} \n                    item={translateCategory(item)}\n                    width={'30px'}\n                    height={'30px'}\n                    zoom={this.props.zoom} ////figure out how to change on zoom change, might have to be rendered not in an array in component but in render itself\n                    clicked={() => this.markerClicked({ lat: item.latitude, lng: item.longitude })}/>\n                );\n            })\n        }\n\n        console.log('[BudgetMap.js]', this.props)\n\n        return(\n            <div style={{ height: '87vh', width: '100%' }}>\n                {this.props.mapProps ?                 \n                    <Map \n                        {...this.props.mapProps} \n                            zoom={this.props.zoom} \n                            center={this.props.center} \n                            defaultCenter={DEFAULT_CENTER}\n                            markers={markers}\n                            showDistricts={this.props.showDistricts}/> \n                    :null}\n            </div>            \n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        currItem: state.participatoryBudget.currItem,\n        participatoryBudget: state.participatoryBudget.participatoryBudget,        \n        councilMemberLoading: state.participatoryBudget.councilMemberLoading,\n        error: state.participatoryBudget.error,\n        councilMembers: state.participatoryBudget.councilMembers,\n        districts: state.participatoryBudget.districts,\n        districtsLoading: state.participatoryBudget.districtsLoading,   \n        selectedDistricts: state.participatoryBudget.selectedDistricts,   \n        loaded: state.participatoryBudget.loaded,\n        \n        showDistricts: state.setMap.showDistricts,\n        mapProps: state.setMap.mapProps,        \n        center: state.setMap.center,\n        zoom: state.setMap.zoom,\n        selectedBudgetItems: state.subsets.selectedBudgetItems,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {        \n        onSetMap: (districts, selectedDistricts, councilMembers, selectedBudgetItems) => dispatch(actions.setMap(districts, selectedDistricts, councilMembers, selectedBudgetItems)),  \n        onUpdateMap: (districts, selectedDistricts, councilMembers, selectedBudgetItems, showDistricts) => dispatch(actions.updateMap(districts, selectedDistricts, councilMembers, selectedBudgetItems, showDistricts)),  \n        onResetMap: () => dispatch(actions.resetMap()),\n        onZoomMarker: (center) => dispatch(actions.zoomMarker(center)),           \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BudgetMap);","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/UI/MapMarker/mapMarkerImgs.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/UI/Input/Input.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/containers/LegendManager/LegendManager.js",["193"],"import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport {mapMarkerImgs} from '../../components/UI/MapMarker/mapMarkerImgs';\nimport Legend from '../../components/UI/Legend/Legend';\n\nclass LegendManager extends Component {\n    render(){\n        return(\n            <div>\n                <Legend legendMarkers={mapMarkerImgs} zoom={this.props.zoom}/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        zoom: state.setMap.zoom,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {        \n        \n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(LegendManager);","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/UI/Legend/Legend.js",["194","195"],"import React from 'react';\nimport classes from './Legend.module.css'\n\nconst legend = (props) => {\n    return (\n        <div class={classes.Legend}>\n            \n                {Object.keys(props.legendMarkers).map(key => (\n                    <div>\n                        {props.zoom <=12 ?\n                            <img src={props.legendMarkers[key].dot}></img>:\n                            <img src={props.legendMarkers[key].img}></img>\n                        }                        \n                        {key}\n                    </div>\n                ))}\n            \n        </div>\n    );\n}\n\nexport default legend;","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/containers/HomePage/HomePage.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/containers/ParticipatoryBudgetMap/ParticipatoryBudgetMap.js",["196"],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":1,"column":8,"nodeType":"203","messageId":"204","endLine":1,"endColumn":12},{"ruleId":"201","severity":1,"message":"205","line":1,"column":8,"nodeType":"203","messageId":"204","endLine":1,"endColumn":13},{"ruleId":"201","severity":1,"message":"206","line":1,"column":16,"nodeType":"203","messageId":"204","endLine":1,"endColumn":25},{"ruleId":"207","severity":1,"message":"208","line":33,"column":25,"nodeType":"209","endLine":33,"endColumn":39},{"ruleId":"201","severity":1,"message":"210","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":26},{"ruleId":"201","severity":1,"message":"211","line":51,"column":7,"nodeType":"203","messageId":"204","endLine":51,"endColumn":14},{"ruleId":"201","severity":1,"message":"212","line":81,"column":7,"nodeType":"203","messageId":"204","endLine":81,"endColumn":17},{"ruleId":"213","severity":1,"message":"214","line":84,"column":58,"nodeType":"215","messageId":"216","endLine":84,"endColumn":60},{"ruleId":"201","severity":1,"message":"217","line":94,"column":7,"nodeType":"203","messageId":"204","endLine":94,"endColumn":21},{"ruleId":"213","severity":1,"message":"214","line":97,"column":58,"nodeType":"215","messageId":"216","endLine":97,"endColumn":60},{"ruleId":"201","severity":1,"message":"218","line":107,"column":7,"nodeType":"203","messageId":"204","endLine":107,"endColumn":21},{"ruleId":"213","severity":1,"message":"214","line":110,"column":58,"nodeType":"215","messageId":"216","endLine":110,"endColumn":60},{"ruleId":"197","replacedBy":"219"},{"ruleId":"199","replacedBy":"220"},{"ruleId":"213","severity":1,"message":"214","line":13,"column":46,"nodeType":"215","messageId":"216","endLine":13,"endColumn":48},{"ruleId":"213","severity":1,"message":"214","line":22,"column":46,"nodeType":"215","messageId":"216","endLine":22,"endColumn":48},{"ruleId":"213","severity":1,"message":"214","line":32,"column":46,"nodeType":"215","messageId":"216","endLine":32,"endColumn":48},{"ruleId":"213","severity":1,"message":"214","line":42,"column":46,"nodeType":"215","messageId":"216","endLine":42,"endColumn":48},{"ruleId":"213","severity":1,"message":"214","line":46,"column":41,"nodeType":"215","messageId":"216","endLine":46,"endColumn":43},{"ruleId":"221","severity":1,"message":"222","line":50,"column":13,"nodeType":"223","messageId":"224","endLine":50,"endColumn":15},{"ruleId":"221","severity":1,"message":"222","line":52,"column":17,"nodeType":"223","messageId":"224","endLine":52,"endColumn":19},{"ruleId":"221","severity":1,"message":"222","line":54,"column":17,"nodeType":"223","messageId":"224","endLine":54,"endColumn":19},{"ruleId":"221","severity":1,"message":"222","line":56,"column":16,"nodeType":"223","messageId":"224","endLine":56,"endColumn":18},{"ruleId":"221","severity":1,"message":"222","line":58,"column":16,"nodeType":"223","messageId":"224","endLine":58,"endColumn":18},{"ruleId":"221","severity":1,"message":"222","line":60,"column":17,"nodeType":"223","messageId":"224","endLine":60,"endColumn":19},{"ruleId":"221","severity":1,"message":"222","line":62,"column":17,"nodeType":"223","messageId":"224","endLine":62,"endColumn":19},{"ruleId":"221","severity":1,"message":"222","line":64,"column":22,"nodeType":"223","messageId":"224","endLine":64,"endColumn":24},{"ruleId":"201","severity":1,"message":"225","line":3,"column":8,"nodeType":"203","messageId":"204","endLine":3,"endColumn":22},{"ruleId":"201","severity":1,"message":"226","line":5,"column":8,"nodeType":"203","messageId":"204","endLine":5,"endColumn":17},{"ruleId":"227","severity":1,"message":"228","line":35,"column":9,"nodeType":"229","messageId":"224","endLine":35,"endColumn":100},{"ruleId":"201","severity":1,"message":"230","line":2,"column":8,"nodeType":"203","messageId":"204","endLine":2,"endColumn":13},{"ruleId":"201","severity":1,"message":"231","line":3,"column":13,"nodeType":"203","messageId":"204","endLine":3,"endColumn":24},{"ruleId":"201","severity":1,"message":"232","line":4,"column":8,"nodeType":"203","messageId":"204","endLine":4,"endColumn":15},{"ruleId":"201","severity":1,"message":"233","line":5,"column":8,"nodeType":"203","messageId":"204","endLine":5,"endColumn":16},{"ruleId":"201","severity":1,"message":"234","line":6,"column":8,"nodeType":"203","messageId":"204","endLine":6,"endColumn":14},{"ruleId":"213","severity":1,"message":"214","line":30,"column":59,"nodeType":"215","messageId":"216","endLine":30,"endColumn":61},{"ruleId":"201","severity":1,"message":"235","line":3,"column":8,"nodeType":"203","messageId":"204","endLine":3,"endColumn":18},{"ruleId":"236","severity":1,"message":"237","line":23,"column":11,"nodeType":"209","endLine":27,"endColumn":61},{"ruleId":"236","severity":1,"message":"237","line":30,"column":11,"nodeType":"209","endLine":34,"endColumn":61},{"ruleId":"213","severity":1,"message":"214","line":13,"column":46,"nodeType":"215","messageId":"216","endLine":13,"endColumn":48},{"ruleId":"213","severity":1,"message":"214","line":16,"column":63,"nodeType":"215","messageId":"216","endLine":16,"endColumn":65},{"ruleId":"213","severity":1,"message":"214","line":40,"column":46,"nodeType":"215","messageId":"216","endLine":40,"endColumn":48},{"ruleId":"201","severity":1,"message":"238","line":1,"column":5,"nodeType":"203","messageId":"204","endLine":1,"endColumn":18},{"ruleId":"201","severity":1,"message":"232","line":3,"column":8,"nodeType":"203","messageId":"204","endLine":3,"endColumn":15},{"ruleId":"201","severity":1,"message":"234","line":4,"column":8,"nodeType":"203","messageId":"204","endLine":4,"endColumn":14},{"ruleId":"213","severity":1,"message":"214","line":49,"column":107,"nodeType":"215","messageId":"216","endLine":49,"endColumn":109},{"ruleId":"201","severity":1,"message":"239","line":3,"column":13,"nodeType":"203","messageId":"204","endLine":3,"endColumn":20},{"ruleId":"236","severity":1,"message":"237","line":11,"column":29,"nodeType":"209","endLine":11,"endColumn":69},{"ruleId":"236","severity":1,"message":"237","line":12,"column":29,"nodeType":"209","endLine":12,"endColumn":69},{"ruleId":"240","severity":1,"message":"241","line":12,"column":69,"nodeType":"209","endLine":12,"endColumn":154},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'react' is defined but never used.","'Component' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'similarSubstring' is defined but never used.","'findMax' is assigned a value but never used.","'sortByYear' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'sortByDistrict' is assigned a value but never used.","'sortByCategory' is assigned a value but never used.",["242"],["243"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'GoogleMapReact' is defined but never used.","'MapMarker' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","'axios' is defined but never used.","'getRequests' is defined but never used.","'Spinner' is defined but never used.","'Dropdown' is defined but never used.","'Button' is defined but never used.","'MapPinIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'newCategories' is assigned a value but never used.","'actions' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation"]