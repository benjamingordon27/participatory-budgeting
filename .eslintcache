[{"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/index.js":"1","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/App.js":"2","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/reportWebVitals.js":"3","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/containers/VisualizationManager/VisualizationManager.js":"4","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/actionTypes.js":"5","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/utility.js":"6","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/axios-order.js":"7","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/UI/Spinner/Spinner.js":"8","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/getRequests.js":"9","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/BudgetItem/BudgetItem.js":"10","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/reducers/initBudget.js":"11","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/initBudget.js":"12","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/UI/Button/Button.js":"13","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/containers/BudgetMap/BudgetMap.js":"14","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/token.js":"15","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/UI/Dropdown/Dropdown.js":"16","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/data/map_district_one.js":"17","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/reducers/calculateSubsets.js":"18","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/index.js":"19","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/calculateSubsets.js":"20"},{"size":1087,"mtime":1611891187005,"results":"21","hashOfConfig":"22"},{"size":545,"mtime":1611944078665,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1611196435849,"results":"24","hashOfConfig":"22"},{"size":4113,"mtime":1611943994703,"results":"25","hashOfConfig":"22"},{"size":852,"mtime":1611892647777,"results":"26","hashOfConfig":"22"},{"size":127,"mtime":1611282656988,"results":"27","hashOfConfig":"22"},{"size":134,"mtime":1611282433921,"results":"28","hashOfConfig":"22"},{"size":174,"mtime":1611283269158,"results":"29","hashOfConfig":"22"},{"size":218,"mtime":1611633196185,"results":"30","hashOfConfig":"22"},{"size":976,"mtime":1611428550768,"results":"31","hashOfConfig":"22"},{"size":4956,"mtime":1611633725374,"results":"32","hashOfConfig":"22"},{"size":3369,"mtime":1611432777329,"results":"33","hashOfConfig":"22"},{"size":214,"mtime":1611429488562,"results":"34","hashOfConfig":"22"},{"size":4314,"mtime":1611969412708,"results":"35","hashOfConfig":"22"},{"size":164,"mtime":1611969487864,"results":"36","hashOfConfig":"22"},{"size":531,"mtime":1611943750486,"results":"37","hashOfConfig":"22"},{"size":408775,"mtime":1611627566833,"results":"38","hashOfConfig":"22"},{"size":1794,"mtime":1611942905092,"results":"39","hashOfConfig":"22"},{"size":147,"mtime":1611892667376,"results":"40","hashOfConfig":"22"},{"size":617,"mtime":1611892627113,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"sve5og",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/index.js",[],["92","93"],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/App.js",["94"],"import logo from './logo.svg';\nimport './App.css';\nimport VisualizationManager from './containers/VisualizationManager/VisualizationManager'\nimport BudgetMap from './containers/BudgetMap/BudgetMap'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Welcome to this Participatory Budget viewer. Click on options below to find items on the participatory budget from the years 2012-2017.</h1>\n      <div className=\"row\">\n        <VisualizationManager />\n        <BudgetMap />\n      </div>      \n    </div>\n  );\n}\n\nexport default App;\n","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/reportWebVitals.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/containers/VisualizationManager/VisualizationManager.js",["95"],"import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Dropdown from '../../components/UI/Dropdown/Dropdown';\nimport Button from '../../components/UI/Button/Button';\nimport BudgetItem from '../../components/BudgetItem/BudgetItem'\n\nclass VisualizationManager extends Component {\n\n    state = {\n        selectedYear: '',\n        selectedCategory: '',\n        selectedDistrict: '',\n    }\n\n    componentDidMount(){        \n        this.props.onInitBudget();\n        if(this.props.participatoryBudget && this.props.districts && this.props.councilMembers && this.props.itemCategories){\n            this.setState({selectedYear: this.props.itemYears[0],selectedCategory: this.props.itemCategories[0],selectedDistrict: this.props.itemDistricts[0]});\n        }\n    }\n\n    itemsByYear = (event) => {        \n        this.setState({selectedYear: event.target.value})\n    }\n\n    itemsByDistrict = (event) => {        \n        this.setState({selectedDistrict: event.target.value})\n    }\n\n    itemsByCategory = (event) => {        \n        this.setState({selectedCategory: event.target.value})\n    }\n\n    render(){\n        let data ='';\n        if(this.props.loading){\n            data = <Spinner />;\n        }        \n        \n        return (\n            <div>                \n                {this.props.participatoryBudget && this.props.districts && this.props.councilMembers && this.props.itemCategories ?\n                    <div>\n                        <Button message={'Top 10 Budget Items by Cost'}/><br></br>\n                        <Button message={'Item with highest cost'}/><br></br>                        \n                        <Dropdown message={'Items by district'} title= {'Districts'} list={this.props.itemDistricts} handleChange={this.itemsByDistrict}/>\n                        <Button clicked = {() => this.props.onBudgetByDistrict(this.props.participatoryBudget, this.state.selectedDistrict)} message={'Submit District'}/>\n                        <Dropdown message={'Items by year'} title={'Year'} list={this.props.itemYears} handleChange={this.itemsByYear}/>\n                        <Button clicked = {() => this.props.onBudgetByYear(this.props.participatoryBudget, this.state.selectedYear)} message={'Submit Year'}/>\n                        <Dropdown message={'Items by category'} title={'Category'} list={this.props.itemCategories} handleChange={this.itemsByCategory}/>\n                        <Button clicked = {() => this.props.onBudgetByCategory(this.props.participatoryBudget, this.state.selectedCategory)} message={'Submit Category'}/>\n                    </div>\n                :null}\n                {data}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        currItem: state.participatoryBudget.currItem,\n        participatoryBudget: state.participatoryBudget.participatoryBudget,\n        loading: state.participatoryBudget.loading,\n        councilMemberLoading: state.participatoryBudget.councilMemberLoading,\n        error: state.participatoryBudget.error,\n        councilMembers: state.participatoryBudget.councilMembers,\n        districts: state.participatoryBudget.districts,\n        districtsLoading: state.participatoryBudget.districtsLoading,\n        itemCategories: state.participatoryBudget.itemCategories,\n        itemYears: state.participatoryBudget.itemYears,\n        itemDistricts: state.participatoryBudget.itemDistricts,\n\n        selectedBudgetItems: state.subsets.selectedBudgetItems\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onInitBudget: () => dispatch(actions.initBudget()),  \n        onBudgetByYear: (budget, year) => dispatch(actions.budgetByYear(budget,year)),\n        onBudgetByCategory: (budget, category) => dispatch(actions.budgetByCategory(budget,category)),\n        onBudgetByDistrict: (budget, district) => dispatch(actions.budgetByDistrict(budget,district))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(VisualizationManager);","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/actionTypes.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/utility.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/axios-order.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/UI/Spinner/Spinner.js",["96"],"import react from 'react'\nimport classes from './Spinner.module.css'\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/getRequests.js",[],["97","98"],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/BudgetItem/BudgetItem.js",["99"],"import React, {Component} from 'react';\nimport classes from './BudgetItem.module.css'\n\nvar formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',      \n});\n\nconst budgetItem = (props) => {\n    return (\n        <div className={classes.BudgetItem}>\n                <strong>Name:</strong> {props.title}<br></br>\n                <strong>Description:</strong> {props.description}<br></br>\n                <strong>Cost:</strong> {formatter.format(props.cost)}<br></br>\n                <strong>Year:</strong> {props.vote_year}<br></br>\n                <strong>Category:</strong> {props.category}<br></br>\n                <strong>Borough:</strong> {props.councilMember.borough}<br></br>\n                <strong>Council District:</strong> {props.council_district}<br></br>\n                <strong>Current Council Member:</strong> {props.councilMember.name}, {props.councilMember.political_party}\n        </div>\n    );    \n}\n\nexport default budgetItem;","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/reducers/initBudget.js",["100","101","102","103","104","105","106"],"import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {    \n    currItem: null,\n    participatoryBudget: null,\n    loading: false,\n    councilMemberLoading: false,\n    error: false,\n    councilMembers: null,\n    districts: null,\n    districtsLoading: false,\n    itemCategories: null,\n    itemYears: null,\n    itemDistricts: null,\n    selectedDistricts: [5,9,11]\n}\n\nconst initCategory = (participatoryBudget) => {\n    let categories = [];\n    var keys = Object.keys(participatoryBudget);\n    keys.forEach(function(key){\n        categories.push(participatoryBudget[key].category);\n    });    \n    return categories.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n\nconst initYear = (participatoryBudget) => {\n    let years = [];\n    var keys = Object.keys(participatoryBudget);\n    keys.forEach(function(key){\n        years.push(participatoryBudget[key].vote_year);\n    });    \n    return years.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n\nconst initDistricts = (participatoryBudget) => {\n    let years = [];\n    var keys = Object.keys(participatoryBudget);\n    keys.forEach(function(key){\n        years.push(participatoryBudget[key].council_district);\n    });    \n    return years.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n\nconst findMax = (key, data, councilMembers) => {    \n    \n    var maxProp = null;\n    var maxValue = -1;\n    for (var prop in data) {\n        var curr = data[prop];        \n        var value = curr[key];\n        if (value > maxValue) {\n            maxProp = curr\n            maxValue = value\n        }\n    }\n    \n    var councilMember = councilMembers.filter(item => item.district === maxProp.council_district)[0];    \n    const updatedMaxProp = {...maxProp, councilMember: councilMember}    \n    return {...updatedMaxProp};\n}\n\nconst loadBudgetSuccess = (state, participatoryBudget) => {\n\n    return updateObject(state, \n        {\n            loading: false, \n            participatoryBudget: JSON.parse(participatoryBudget), \n            itemCategories: initCategory(JSON.parse(participatoryBudget)),\n            itemYears: initYear(JSON.parse(participatoryBudget)),\n            itemDistricts: initDistricts(JSON.parse(participatoryBudget))\n        })\n}\n\nconst sortByYear = (participatoryBudget, year) =>{\n    //console.log(participatoryBudget.filter(item => item.vote_year === year))\n    let transformed = [];\n    Object.keys(JSON.parse(participatoryBudget)).map(key => {\n        // console.log('year', year)\n        \n        if(JSON.parse(participatoryBudget)[key].vote_year === year)\n            transformed.push(JSON.parse(participatoryBudget)[key])\n    })\n\n    return transformed;\n}\n\nconst sortByDistrict = (participatoryBudget, district) =>{\n    //console.log(participatoryBudget.filter(item => item.vote_year === year))\n    let transformed = [];\n    Object.keys(JSON.parse(participatoryBudget)).map(key => {\n        // console.log('year', year)\n        \n        if(JSON.parse(participatoryBudget)[key].council_district === district)\n            transformed.push(JSON.parse(participatoryBudget)[key])\n    })\n\n    return transformed;\n}\n\nconst sortByCategory = (participatoryBudget, category) =>{\n    //console.log(participatoryBudget.filter(item => item.vote_year === year))\n    let transformed = [];\n    Object.keys(JSON.parse(participatoryBudget)).map(key => {\n        // console.log('year', year)\n        \n        if(JSON.parse(participatoryBudget)[key].category === category)\n            transformed.push(JSON.parse(participatoryBudget)[key])\n    })\n\n    return transformed;\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.FETCH_COUNCIL_MEMBER_START: return updateObject(state, {councilMemberLoading: true})\n        case actionTypes.FETCH_COUNCIL_MEMBER_SUCCESS: return updateObject(state, {councilMemberLoading: false, councilMembers: JSON.parse(action.councilMembers)})            \n        case actionTypes.FETCH_COUNCIL_MEMBER_FAIL: return updateObject(state, {error: action.error, councilMemberLoading: false})\n        \n        case actionTypes.FETCH_PARTICIPATORY_BUDGET_ITEM_START: return updateObject(state, {loading: true})\n        case actionTypes.FETCH_PARTICIPATORY_BUDGET_ITEM_SUCCESS: return updateObject(state, loadBudgetSuccess(state,action.data))            \n        case actionTypes.FETCH_PARTICIPATORY_BUDGET_ITEM_FAIL: return updateObject(state, {error: action.error, loading: false})    \n        \n        case actionTypes.FETCH_DISTRICTS_START: return updateObject(state, {districtsLoading: true})\n        case actionTypes.FETCH_DISTRICTS_SUCCESS: return updateObject(state, {districtsLoading: false, districts: JSON.parse(action.districts)})            \n        case actionTypes.FETCH_DISTRICTS_FAIL: return updateObject(state, {error: action.error, districtsLoading: false})\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/initBudget.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/UI/Button/Button.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/containers/BudgetMap/BudgetMap.js",["107","108","109","110","111"],"import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport GoogleMapReact from 'google-map-react';\nimport {token} from '../../store/actions/token'\n\nconst DEFAULT_CENTER = { lat: 40.635, lng: -73.94 };\n\nconst attachPolygonInfoWindow = (map,maps,polygon) => {\n    var infoWindow = new maps.InfoWindow();\n    maps.event.addListener(polygon, 'click', function (e) {\n        infoWindow.setContent(\"Polygon Name\");\n        var latLng = e.latLng;\n        infoWindow.setPosition(latLng);\n        infoWindow.open(map);\n    });\n}\n\nconst addListenersOnPolygon = (map,maps,polygon, info) => {\n    var infoWindow = new maps.InfoWindow();    \n    maps.event.addListener(polygon, 'click', function (event) {\n        infoWindow.setContent('District: '+polygon.indexID + '<br>Council Member: '+ info[0].name+ '<br>Political Party: '+ info[0].political_party);\n        var latLng = event.latLng;\n        infoWindow.setPosition(latLng);\n        infoWindow.open(map);\n        // alert(polygon.indexID);\n    });  \n  }\n\nconst handleApiLoaded = (map, maps, coords, selectedDistricts, councilMembers) => {\n    let allDistrictPolygons = {};\n    if(coords.features){                \n        Object.keys(coords.features).map(key => {  \n            let districtPolygons = [];\n            let currDistrict = coords.features[key].properties.coun_dist;\n            coords.features[key].geometry.coordinates.map(arr => {   \n                let coordArr = [];     \n                arr[0].map(coordinate => coordArr.push({lat: coordinate[1], lng: coordinate[0]}))        \n                \n                var councilDistrictPolygon = new maps.Polygon({\n                    paths: coordArr,\n                    strokeColor: \"#FF0000\",\n                    strokeOpacity: 0.8,\n                    strokeWeight: 2,\n                    fillColor: \"#FF0000\",\n                    fillOpacity: 0.35,\n                    indexID: currDistrict,\n                });            \n                                \n                districtPolygons.push(councilDistrictPolygon);                 \n                var districtInfo = councilMembers.filter(item => item.district === currDistrict);                                \n\n                addListenersOnPolygon(map,maps,councilDistrictPolygon, districtInfo);\n            });            \n            allDistrictPolygons[key] = {district: coords.features[key].properties.coun_dist,polygons: districtPolygons};\n        });\n    }            \n    Object.keys(allDistrictPolygons).map(key => {        \n        // if(selectedDistricts.includes(Number(allDistrictPolygons[key].district)))\n            allDistrictPolygons[key].polygons.map(polygon => polygon.setMap(map))    \n    })\n}\n\n\nclass BudgetMap extends Component{\n    \n    render(){\n        let districts = '';\n        if(this.props.districts){                        \n            districts = \n                <GoogleMapReact\n                    bootstrapURLKeys={{ key: process.env.GOOGLE_MAPS_TOKEN }}                    \n                    defaultCenter={DEFAULT_CENTER}                 \n                    defaultZoom={11}\n\n                    yesIWantToUseGoogleMapApiInternals                    \n                    onGoogleApiLoaded={({ map, maps }) => {\n\n                            handleApiLoaded(map, maps, this.props.districts, this.props.selectedDistricts, this.props.councilMembers)\n                    }} \n\n                ></GoogleMapReact>            \n        }        \n\n        return(\n            <div style={{ height: '100vh', width: '100%' }}>\n                {districts}\n            </div>            \n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        currItem: state.participatoryBudget.currItem,\n        participatoryBudget: state.participatoryBudget.participatoryBudget,\n        loading: state.participatoryBudget.loading,\n        councilMemberLoading: state.participatoryBudget.councilMemberLoading,\n        error: state.participatoryBudget.error,\n        councilMembers: state.participatoryBudget.councilMembers,\n        districts: state.participatoryBudget.districts,\n        districtsLoading: state.participatoryBudget.districtsLoading,   \n        selectedDistricts: state.participatoryBudget.selectedDistricts,     \n\n    }\n}\n\nexport default connect(mapStateToProps)(BudgetMap);","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/token.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/components/UI/Dropdown/Dropdown.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/data/map_district_one.js",[],["112","113"],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/reducers/calculateSubsets.js",["114","115","116"],"import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {            \n    selectedBudgetItems: null,\n}\n\nconst sortByCategory = (participatoryBudget, category) =>{\n    let transformed = [];\n    console.log('category', category)\n    Object.keys(participatoryBudget).map(key => {\n        if(participatoryBudget[key].category === category)\n            transformed.push(participatoryBudget[key])\n    })\n    console.log('transformed',transformed)\n    return transformed;\n}\n\nconst sortByDistrict = (participatoryBudget, district) =>{    \n    let transformed = [];\n    Object.keys(participatoryBudget).map(key => {                \n        if(participatoryBudget[key].council_district === district)\n            transformed.push(participatoryBudget[key])\n    })\n    console.log('transformed',transformed)\n    return transformed;\n}\n\nconst sortByYear = (participatoryBudget, year) =>{\n    \n    let transformed = [];    \n    Object.keys(participatoryBudget).map(key => {        \n        if(participatoryBudget[key].vote_year === year)\n            transformed.push(participatoryBudget[key])\n    })\n    \n    console.log('transformed',transformed)\n    return transformed;    \n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.BUDGET_BY_YEAR: return updateObject(state, {selectedBudgetItems: sortByYear(action.budget, action.year)})\n        case actionTypes.BUDGET_BY_DISTRICT: return updateObject(state, {selectedBudgetItems: sortByDistrict(action.budget, action.district)})\n        case actionTypes.BUDGET_BY_CATEGORY: return updateObject(state, {selectedBudgetItems: sortByCategory(action.budget, action.category)})\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/index.js",[],"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/store/actions/calculateSubsets.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":1,"column":8,"nodeType":"123","messageId":"124","endLine":1,"endColumn":12},{"ruleId":"121","severity":1,"message":"125","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":18},{"ruleId":"121","severity":1,"message":"126","line":1,"column":8,"nodeType":"123","messageId":"124","endLine":1,"endColumn":13},{"ruleId":"117","replacedBy":"127"},{"ruleId":"119","replacedBy":"128"},{"ruleId":"121","severity":1,"message":"129","line":1,"column":16,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"130","line":46,"column":7,"nodeType":"123","messageId":"124","endLine":46,"endColumn":14},{"ruleId":"121","severity":1,"message":"131","line":76,"column":7,"nodeType":"123","messageId":"124","endLine":76,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":79,"column":58,"nodeType":"134","messageId":"135","endLine":79,"endColumn":60},{"ruleId":"121","severity":1,"message":"136","line":89,"column":7,"nodeType":"123","messageId":"124","endLine":89,"endColumn":21},{"ruleId":"132","severity":1,"message":"133","line":92,"column":58,"nodeType":"134","messageId":"135","endLine":92,"endColumn":60},{"ruleId":"121","severity":1,"message":"137","line":102,"column":7,"nodeType":"123","messageId":"124","endLine":102,"endColumn":21},{"ruleId":"132","severity":1,"message":"133","line":105,"column":58,"nodeType":"134","messageId":"135","endLine":105,"endColumn":60},{"ruleId":"121","severity":1,"message":"138","line":4,"column":9,"nodeType":"123","messageId":"124","endLine":4,"endColumn":14},{"ruleId":"121","severity":1,"message":"139","line":8,"column":7,"nodeType":"123","messageId":"124","endLine":8,"endColumn":30},{"ruleId":"132","severity":1,"message":"133","line":32,"column":46,"nodeType":"134","messageId":"135","endLine":32,"endColumn":48},{"ruleId":"132","severity":1,"message":"133","line":35,"column":63,"nodeType":"134","messageId":"135","endLine":35,"endColumn":65},{"ruleId":"132","severity":1,"message":"133","line":57,"column":46,"nodeType":"134","messageId":"135","endLine":57,"endColumn":48},{"ruleId":"117","replacedBy":"140"},{"ruleId":"119","replacedBy":"141"},{"ruleId":"132","severity":1,"message":"133","line":11,"column":46,"nodeType":"134","messageId":"135","endLine":11,"endColumn":48},{"ruleId":"132","severity":1,"message":"133","line":21,"column":46,"nodeType":"134","messageId":"135","endLine":21,"endColumn":48},{"ruleId":"132","severity":1,"message":"133","line":32,"column":46,"nodeType":"134","messageId":"135","endLine":32,"endColumn":48},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'BudgetItem' is defined but never used.","'react' is defined but never used.",["142"],["143"],"'Component' is defined but never used.","'findMax' is assigned a value but never used.","'sortByYear' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'sortByDistrict' is assigned a value but never used.","'sortByCategory' is assigned a value but never used.","'token' is defined but never used.","'attachPolygonInfoWindow' is assigned a value but never used.",["142"],["143"],"no-global-assign","no-unsafe-negation"]