{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/containers/ItemsPage/ItemsControlsManager/ItemsControlsManager.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Dropdown from '../../../components/UI/Dropdown/Dropdown';\nimport Button from '../../../components/UI/Button/Button';\nimport Input from '../../../components/UI/Input/Input';\n\nclass ItemControlsManager extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      firstPageLoad: false,\n      selectedYear: '',\n      selectedCategory: '',\n      selectedDistrict: '',\n      minCost: '',\n      maxCost: '',\n      minVotes: '',\n      maxVotes: '',\n      councilMember: ''\n    });\n\n    _defineProperty(this, \"itemsByYear\", event => {\n      this.setState({\n        selectedYear: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"itemsByDistrict\", event => {\n      this.setState({\n        selectedDistrict: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"itemsByCategory\", event => {\n      this.setState({\n        selectedCategory: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"minCostState\", event => {\n      this.setState({\n        minCost: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"maxCostState\", event => {\n      this.setState({\n        maxCost: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"minVotesState\", event => {\n      this.setState({\n        minVotes: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"maxVotesState\", event => {\n      this.setState({\n        maxVotes: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"councilMemberState\", event => {\n      this.setState({\n        councilMember: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"clearInput\", () => {\n      // console.log('clearing input ', document.querySelectorAll(\"select\"))\n      Array.from(document.querySelectorAll(\"Input\")).forEach(input => input.value = '');\n      Array.from(document.querySelectorAll(\"select\")).forEach(select => select.value = '');\n      this.setState({\n        selectedYear: '',\n        selectedCategory: '',\n        selectedDistrict: '',\n        minCost: '',\n        maxCost: '',\n        minVotes: '',\n        maxVotes: '',\n        councilMember: ''\n      });\n      this.props.onResetSelectedItems();\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      firstPageLoad: false\n    });\n    if (!this.props.participatoryBudget && !this.props.districts && !this.props.councilMembers) this.props.onInitBudget();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!this.state.firstPageLoad && this.props.participatoryBudget) {\n      this.props.onBudgetFilter(this.props.participatoryBudget, this.props.councilMembers, this.state.selectedCategory, this.state.selectedYear, this.state.selectedDistrict, this.state.minCost, this.state.maxCost, this.state.minVotes, this.state.maxVotes, this.state.councilMember);\n      this.setState({\n        firstPageLoad: true\n      });\n    }\n  }\n\n  render() {\n    let data = '';\n\n    if (this.props.loading) {\n      data = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 20\n      }, this);\n    } // console.log('state',this.state)\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        message: 'Zoom In',\n        clicked: this.props.onZoomIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        message: 'Zoom Out',\n        clicked: this.props.onZoomOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        message: 'Center',\n        clicked: this.props.onCenter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), this.props.participatoryBudget && this.props.districts && this.props.councilMembers && this.props.itemCategories ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n          message: 'Items by Council Member',\n          title: 'Council Member',\n          list: this.props.councilMembersList,\n          handleChange: this.councilMemberState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          message: 'Items by district',\n          title: 'Districts',\n          list: this.props.itemDistricts,\n          handleChange: this.itemsByDistrict\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          message: 'Items by year',\n          title: 'Year',\n          list: this.props.itemYears,\n          handleChange: this.itemsByYear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          message: 'Items by category',\n          title: 'Category',\n          list: this.props.itemCategories,\n          handleChange: this.itemsByCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Minimum cost\",\n          handleChange: this.minCostState,\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Maximum cost\",\n          handleChange: this.maxCostState,\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Minimum votes\",\n          handleChange: this.minVotesState,\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Maximum votes\",\n          handleChange: this.maxVotesState,\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          message: 'Submit',\n          clicked: () => this.props.onBudgetFilter(this.props.participatoryBudget, this.props.councilMembers, this.state.selectedCategory, this.state.selectedYear, this.state.selectedDistrict, this.state.minCost, this.state.maxCost, this.state.minVotes, this.state.maxVotes, this.state.councilMember)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          message: 'Clear',\n          clicked: () => this.clearInput()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this) : null, data]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currItem: state.participatoryBudget.currItem,\n    participatoryBudget: state.participatoryBudget.participatoryBudget,\n    loading: state.participatoryBudget.loading,\n    councilMemberLoading: state.participatoryBudget.councilMemberLoading,\n    error: state.participatoryBudget.error,\n    councilMembers: state.participatoryBudget.councilMembers,\n    councilMembersList: state.participatoryBudget.councilMembersList,\n    districts: state.participatoryBudget.districts,\n    districtsLoading: state.participatoryBudget.districtsLoading,\n    itemCategories: state.participatoryBudget.itemCategories,\n    itemYears: state.participatoryBudget.itemYears,\n    itemDistricts: state.participatoryBudget.itemDistricts,\n    selectedBudgetItems: state.setMap.selectedBudgetItems\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onResetSelectedItems: () => dispatch(actions.resetSelectedItems()),\n    onInitBudget: () => dispatch(actions.initBudget()),\n    onZoomIn: () => dispatch(actions.zoomIn()),\n    onZoomOut: () => dispatch(actions.zoomOut()),\n    onCenter: () => dispatch(actions.center()),\n    onShowDistricts: () => dispatch(actions.showDistricts()),\n    onBudgetFilter: (budget, councilMembers, category, year, district, minCost, maxCost, minVotes, maxVotes, councilMember) => dispatch(actions.budgetFilter(budget, councilMembers, category, year, district, minCost, maxCost, minVotes, maxVotes, councilMember))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemControlsManager);","map":{"version":3,"sources":["/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/containers/ItemsPage/ItemsControlsManager/ItemsControlsManager.js"],"names":["React","Component","connect","actions","Spinner","Dropdown","Button","Input","ItemControlsManager","firstPageLoad","selectedYear","selectedCategory","selectedDistrict","minCost","maxCost","minVotes","maxVotes","councilMember","event","setState","target","value","Array","from","document","querySelectorAll","forEach","input","select","props","onResetSelectedItems","componentDidMount","participatoryBudget","districts","councilMembers","onInitBudget","componentDidUpdate","prevProps","prevState","state","onBudgetFilter","render","data","loading","onZoomIn","onZoomOut","onCenter","itemCategories","councilMembersList","councilMemberState","itemDistricts","itemsByDistrict","itemYears","itemsByYear","itemsByCategory","minCostState","maxCostState","minVotesState","maxVotesState","clearInput","mapStateToProps","currItem","councilMemberLoading","error","districtsLoading","selectedBudgetItems","setMap","mapDispatchToProps","dispatch","resetSelectedItems","initBudget","zoomIn","zoomOut","center","onShowDistricts","showDistricts","budget","category","year","district","budgetFilter"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Dropdown from '../../../components/UI/Dropdown/Dropdown';\nimport Button from '../../../components/UI/Button/Button';\nimport Input from '../../../components/UI/Input/Input';\n\nclass ItemControlsManager extends Component {\n\n    state = {\n        firstPageLoad: false,\n        \n        selectedYear: '',\n        selectedCategory: '',\n        selectedDistrict: '',\n        minCost: '',\n        maxCost: '',\n        minVotes: '',\n        maxVotes: '',\n        councilMember: '',\n    }\n\n    componentDidMount(){      \n        this.setState({firstPageLoad: false});\n        if(!this.props.participatoryBudget && !this.props.districts && !this.props.councilMembers)\n            this.props.onInitBudget();           \n    }\n\n    componentDidUpdate(prevProps, prevState){        \n\n        if(!this.state.firstPageLoad && this.props.participatoryBudget){\n            this.props.onBudgetFilter(this.props.participatoryBudget, this.props.councilMembers,\n                this.state.selectedCategory, \n                this.state.selectedYear, \n                this.state.selectedDistrict, \n                this.state.minCost, \n                this.state.maxCost,\n                this.state.minVotes, \n                this.state.maxVotes,   \n                this.state.councilMember,                 \n                )\n\n            this.setState({firstPageLoad: true}) \n        }\n    }\n\n    itemsByYear = (event) => {                \n        this.setState({selectedYear: event.target.value})\n    }\n\n    itemsByDistrict = (event) => {        \n        this.setState({selectedDistrict: event.target.value})\n    }\n\n    itemsByCategory = (event) => {                \n        this.setState({selectedCategory: event.target.value})\n    }\n\n    minCostState = (event) => {\n        this.setState({minCost: event.target.value})\n    }\n\n    maxCostState = (event) => {\n        this.setState({maxCost: event.target.value})\n    }\n\n    minVotesState = (event) => {\n        this.setState({minVotes: event.target.value})\n    }\n\n    maxVotesState = (event) => {\n        this.setState({maxVotes: event.target.value})\n    }\n\n    councilMemberState = (event) => {\n        this.setState({councilMember: event.target.value})\n    }\n\n    clearInput = () => {        \n        // console.log('clearing input ', document.querySelectorAll(\"select\"))\n        Array.from(document.querySelectorAll(\"Input\")).forEach(\n            input => (input.value = '')\n        );\n        Array.from(document.querySelectorAll(\"select\")).forEach(\n            select => (select.value = '')\n        );\n        this.setState({\n            selectedYear: '',\n            selectedCategory: '',\n            selectedDistrict: '',\n            minCost: '',\n            maxCost: '',\n            minVotes: '',\n            maxVotes: '',\n            councilMember: '',\n        })\n\n        this.props.onResetSelectedItems();\n    }\n\n    render(){\n        let data ='';\n        if(this.props.loading){\n            data = <Spinner />;\n        }\n\n        // console.log('state',this.state)\n        \n        return (\n            <div>\n\n                <Button message={'Zoom In'} clicked={this.props.onZoomIn}/>\n                <Button message={'Zoom Out'} clicked={this.props.onZoomOut}/>  \n                <Button message={'Center'} clicked={this.props.onCenter}/>  \n                {/* {this.props.districts ?<Button message={'Show Districts'} clicked={this.props.onShowDistricts}/> :null} */}\n\n                {this.props.participatoryBudget && this.props.districts && this.props.councilMembers && this.props.itemCategories ?\n                    <div>\n                        <Dropdown message={'Items by Council Member'} title= {'Council Member'} list={this.props.councilMembersList} handleChange={this.councilMemberState}/>\n                        <Dropdown message={'Items by district'} title= {'Districts'} list={this.props.itemDistricts} handleChange={this.itemsByDistrict}/>\n                        <Dropdown message={'Items by year'} title={'Year'} list={this.props.itemYears} handleChange={this.itemsByYear}/>\n                        <Dropdown message={'Items by category'} title={'Category'} list={this.props.itemCategories} handleChange={this.itemsByCategory}/>\n                        <Input label='Minimum cost' handleChange={this.minCostState} step='0.01'/>\n                        <Input label='Maximum cost' handleChange={this.maxCostState} step='0.01'/>\n                        <Input label='Minimum votes' handleChange={this.minVotesState} step='1'/>\n                        <Input label='Maximum votes' handleChange={this.maxVotesState} step='1'/>\n\n                        <br></br>\n                        <Button message={'Submit'} clicked = {() => \n                            this.props.onBudgetFilter(this.props.participatoryBudget, this.props.councilMembers,\n                                        this.state.selectedCategory, \n                                        this.state.selectedYear, \n                                        this.state.selectedDistrict, \n                                        this.state.minCost, \n                                        this.state.maxCost,\n                                        this.state.minVotes, \n                                        this.state.maxVotes,   \n                                        this.state.councilMember,                 \n                                        )}/>                                                \n                        <Button message={'Clear'} clicked ={() => this.clearInput()} />\n                    </div>\n                :null}\n                {data}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        currItem: state.participatoryBudget.currItem,\n        participatoryBudget: state.participatoryBudget.participatoryBudget,\n        loading: state.participatoryBudget.loading,\n        councilMemberLoading: state.participatoryBudget.councilMemberLoading,\n        error: state.participatoryBudget.error,\n        councilMembers: state.participatoryBudget.councilMembers,\n        councilMembersList: state.participatoryBudget.councilMembersList,\n        districts: state.participatoryBudget.districts,\n        districtsLoading: state.participatoryBudget.districtsLoading,\n        itemCategories: state.participatoryBudget.itemCategories,\n        itemYears: state.participatoryBudget.itemYears,\n        itemDistricts: state.participatoryBudget.itemDistricts,\n\n        selectedBudgetItems: state.setMap.selectedBudgetItems,        \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onResetSelectedItems: () => dispatch(actions.resetSelectedItems()),\n        onInitBudget: () => dispatch(actions.initBudget()),          \n        onZoomIn: () => dispatch(actions.zoomIn()),\n        onZoomOut: () => dispatch(actions.zoomOut()),\n        onCenter: () => dispatch(actions.center()),\n        onShowDistricts: () => dispatch(actions.showDistricts()),\n        onBudgetFilter: (budget, councilMembers, category, year, district,minCost, maxCost, minVotes, maxVotes, councilMember) => \n            dispatch(actions.budgetFilter(budget, councilMembers,\n                        category, \n                        year, \n                        district, \n                        minCost, \n                        maxCost, \n                        minVotes, \n                        maxVotes,\n                        councilMember,\n                        )),        \n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ItemControlsManager);"]},"metadata":{},"sourceType":"module"}