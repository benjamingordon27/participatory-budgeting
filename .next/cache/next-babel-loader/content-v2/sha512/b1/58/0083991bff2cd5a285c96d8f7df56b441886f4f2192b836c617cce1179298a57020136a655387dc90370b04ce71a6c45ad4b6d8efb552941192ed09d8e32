{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nimport { translateCategoryText } from '../../util/translateCategory';\nconst initialState = {\n  currItem: null,\n  participatoryBudget: null,\n  loading: false,\n  councilMemberLoading: false,\n  error: false,\n  councilMembers: null,\n  councilMembersList: null,\n  districts: null,\n  districtsLoading: false,\n  itemCategories: null,\n  itemYears: null,\n  itemDistricts: null,\n  selectedDistricts: null,\n  loaded: false\n};\n\nconst initCategory = participatoryBudget => {\n  let categories = [];\n  var keys = Object.keys(participatoryBudget);\n  keys.forEach(function (key) {\n    if (participatoryBudget[key].category) categories.push(translateCategoryText(participatoryBudget[key].category));\n  });\n  return categories.filter((v, i, a) => a.indexOf(v) === i).sort();\n};\n\nconst initYear = participatoryBudget => {\n  let years = [];\n  var keys = Object.keys(participatoryBudget);\n  keys.forEach(function (key) {\n    years.push(participatoryBudget[key].vote_year);\n  });\n  return years.filter((v, i, a) => a.indexOf(v) === i).sort();\n};\n\nconst initDistricts = participatoryBudget => {\n  let districts = [];\n  var keys = Object.keys(participatoryBudget);\n  keys.forEach(function (key) {\n    districts.push(participatoryBudget[key].council_district);\n  });\n  return districts.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n};\n\nconst loadBudgetSuccess = (state, participatoryBudget) => {\n  return updateObject(state, {\n    loading: false,\n    participatoryBudget: JSON.parse(participatoryBudget),\n    itemCategories: initCategory(JSON.parse(participatoryBudget)),\n    itemYears: initYear(JSON.parse(participatoryBudget)),\n    itemDistricts: initDistricts(JSON.parse(participatoryBudget))\n  });\n};\n\nconst fetchCouncilMembers = councilMembers => {\n  let outputCouncilMembers = JSON.parse(councilMembers);\n  let outputCouncilMembersList = [];\n  outputCouncilMembers.forEach(value => outputCouncilMembersList.push('District ' + value.district + ': ' + value.name));\n  outputCouncilMembersList.sort((a, b) => Number(a.match(/(\\d+)/g)[0]) - Number(b.match(/(\\d+)/g)[0]));\n  return {\n    councilMemberLoading: false,\n    councilMembers: outputCouncilMembers,\n    councilMembersList: outputCouncilMembersList\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_COUNCIL_MEMBER_START:\n      return updateObject(state, {\n        councilMemberLoading: true\n      });\n\n    case actionTypes.FETCH_COUNCIL_MEMBER_SUCCESS:\n      return updateObject(state, fetchCouncilMembers(action.councilMembers));\n\n    case actionTypes.FETCH_COUNCIL_MEMBER_FAIL:\n      return updateObject(state, {\n        error: action.error,\n        councilMemberLoading: false\n      });\n\n    case actionTypes.FETCH_PARTICIPATORY_BUDGET_ITEM_START:\n      return updateObject(state, {\n        loading: true\n      });\n\n    case actionTypes.FETCH_PARTICIPATORY_BUDGET_ITEM_SUCCESS:\n      return updateObject(state, loadBudgetSuccess(state, action.data));\n\n    case actionTypes.FETCH_PARTICIPATORY_BUDGET_ITEM_FAIL:\n      return updateObject(state, {\n        error: action.error,\n        loading: false\n      });\n\n    case actionTypes.FETCH_DISTRICTS_START:\n      return updateObject(state, {\n        districtsLoading: true\n      });\n\n    case actionTypes.FETCH_DISTRICTS_SUCCESS:\n      return updateObject(state, {\n        districtsLoading: false,\n        districts: JSON.parse(action.districts),\n        loaded: true\n      });\n\n    case actionTypes.FETCH_DISTRICTS_FAIL:\n      return updateObject(state, {\n        error: action.error,\n        districtsLoading: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/store/reducers/initBudget.js"],"names":["actionTypes","updateObject","translateCategoryText","initialState","currItem","participatoryBudget","loading","councilMemberLoading","error","councilMembers","councilMembersList","districts","districtsLoading","itemCategories","itemYears","itemDistricts","selectedDistricts","loaded","initCategory","categories","keys","Object","forEach","key","category","push","filter","v","i","a","indexOf","sort","initYear","years","vote_year","initDistricts","council_district","b","loadBudgetSuccess","state","JSON","parse","fetchCouncilMembers","outputCouncilMembers","outputCouncilMembersList","value","district","name","Number","match","reducer","action","type","FETCH_COUNCIL_MEMBER_START","FETCH_COUNCIL_MEMBER_SUCCESS","FETCH_COUNCIL_MEMBER_FAIL","FETCH_PARTICIPATORY_BUDGET_ITEM_START","FETCH_PARTICIPATORY_BUDGET_ITEM_SUCCESS","data","FETCH_PARTICIPATORY_BUDGET_ITEM_FAIL","FETCH_DISTRICTS_START","FETCH_DISTRICTS_SUCCESS","FETCH_DISTRICTS_FAIL"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\nimport {translateCategoryText} from '../../util/translateCategory';\n\nconst initialState = {    \n    currItem: null,\n    participatoryBudget: null,\n    loading: false,\n    councilMemberLoading: false,\n    error: false,\n    councilMembers: null,\n    councilMembersList: null,\n    districts: null,\n    districtsLoading: false,\n    itemCategories: null,\n    itemYears: null,\n    itemDistricts: null,\n    selectedDistricts: null,    \n\n    loaded: false,\n}\n\nconst initCategory = (participatoryBudget) => {    \n\n    let categories = [];\n    var keys = Object.keys(participatoryBudget);\n    keys.forEach(function(key){\n        if(participatoryBudget[key].category)\n            categories.push(translateCategoryText(participatoryBudget[key].category));        \n    });\n\n    return categories.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n\nconst initYear = (participatoryBudget) => {\n    let years = [];\n    var keys = Object.keys(participatoryBudget);\n    keys.forEach(function(key){\n        years.push(participatoryBudget[key].vote_year);\n    });    \n    return years.filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n\nconst initDistricts = (participatoryBudget) => {\n    let districts = [];\n    var keys = Object.keys(participatoryBudget);\n    keys.forEach(function(key){\n        districts.push(participatoryBudget[key].council_district);\n    });    \n    return districts.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n\nconst loadBudgetSuccess = (state, participatoryBudget) => {\n\n    return updateObject(state, \n        {\n            loading: false, \n            participatoryBudget: JSON.parse(participatoryBudget), \n            itemCategories: initCategory(JSON.parse(participatoryBudget)),\n            itemYears: initYear(JSON.parse(participatoryBudget)),\n            itemDistricts: initDistricts(JSON.parse(participatoryBudget))\n        })\n}\n\nconst fetchCouncilMembers = (councilMembers) => {\n    let outputCouncilMembers = JSON.parse(councilMembers);    \n    let outputCouncilMembersList = [];\n    outputCouncilMembers.forEach(value => outputCouncilMembersList.push('District ' + value.district + ': ' + value.name));\n    outputCouncilMembersList.sort((a,b) => Number(a.match(/(\\d+)/g)[0]) - Number((b.match(/(\\d+)/g)[0])));    \n\n    return {\n        councilMemberLoading: false,\n        councilMembers: outputCouncilMembers,\n        councilMembersList: outputCouncilMembersList,\n    }\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.FETCH_COUNCIL_MEMBER_START: return updateObject(state, {councilMemberLoading: true})\n        case actionTypes.FETCH_COUNCIL_MEMBER_SUCCESS: return updateObject(state, fetchCouncilMembers(action.councilMembers))            \n        case actionTypes.FETCH_COUNCIL_MEMBER_FAIL: return updateObject(state, {error: action.error, councilMemberLoading: false})\n        \n        case actionTypes.FETCH_PARTICIPATORY_BUDGET_ITEM_START: return updateObject(state, {loading: true})\n        case actionTypes.FETCH_PARTICIPATORY_BUDGET_ITEM_SUCCESS: return updateObject(state, loadBudgetSuccess(state,action.data))            \n        case actionTypes.FETCH_PARTICIPATORY_BUDGET_ITEM_FAIL: return updateObject(state, {error: action.error, loading: false})    \n        \n        case actionTypes.FETCH_DISTRICTS_START: return updateObject(state, {districtsLoading: true})\n        case actionTypes.FETCH_DISTRICTS_SUCCESS: return updateObject(state, {districtsLoading: false, districts: JSON.parse(action.districts), loaded: true})            \n        case actionTypes.FETCH_DISTRICTS_FAIL: return updateObject(state, {error: action.error, districtsLoading: false})\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}