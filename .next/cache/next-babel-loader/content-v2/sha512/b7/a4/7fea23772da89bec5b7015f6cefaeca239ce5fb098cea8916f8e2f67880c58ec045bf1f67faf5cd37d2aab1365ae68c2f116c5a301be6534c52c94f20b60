{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/containers/ParticipatoryBudgetMap/MapControlsManager/MapControlsManager.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Dropdown from '../../../components/UI/Dropdown/Dropdown';\nimport Button from '../../../components/UI/Button/Button';\nimport Input from '../../../components/UI/Input/Input';\n\nvar MapControlsManager = /*#__PURE__*/function (_Component) {\n  _inherits(MapControlsManager, _Component);\n\n  var _super = _createSuper(MapControlsManager);\n\n  function MapControlsManager() {\n    var _this;\n\n    _classCallCheck(this, MapControlsManager);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      firstPageLoad: false,\n      selectedYear: '',\n      selectedCategory: '',\n      selectedDistrict: '',\n      minCost: '',\n      maxCost: '',\n      minVotes: '',\n      maxVotes: '',\n      councilMember: '',\n      query: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getQuery\", function () {\n      var newQuery = '';\n      if (_this.state.selectedYear !== '') newQuery += 'year=' + _this.state.selectedYear + '&';\n      if (_this.state.selectedCategory !== '') newQuery += 'category=' + _this.state.selectedCategory + '&';\n      if (_this.state.selectedDistrict !== '') newQuery += 'district=' + _this.state.selectedDistrict + '&';\n      if (_this.state.minCost !== '') newQuery += 'minCost=' + _this.state.minCost + '&';\n      if (_this.state.maxCost !== '') newQuery += 'maxCost=' + _this.state.maxCost + '&';\n      if (_this.state.minVotes !== '') newQuery += 'minVotes=' + _this.state.minVotes + '&';\n      if (_this.state.maxVotes !== '') newQuery += 'maxVotes=' + _this.state.maxVotes + '&'; // if(newQuery.charAt(newQuery.length -1) === '&')\n\n      if (newQuery.length > 0) {\n        newQuery = '?id=2&' + newQuery;\n        newQuery = newQuery.substring(0, newQuery.length - 1);\n      } // this.setState({query: newQuery});\n\n\n      return newQuery;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkSelected\", function (array) {\n      Object.keys(array).map(function (item) {\n        if (array[item] !== '') {\n          return false;\n        }\n      });\n      return true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submit\", function (budget, councilMembers, category, year, district, minCost, maxCost, minVotes, maxVotes, councilMember) {\n      _this.props.onBudgetFilter(budget, councilMembers, category, year, district, minCost, maxCost, minVotes, maxVotes, councilMember);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"itemsByYear\", function (event) {\n      _this.setState({\n        selectedYear: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"itemsByDistrict\", function (event) {\n      _this.setState({\n        selectedDistrict: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"itemsByCategory\", function (event) {\n      _this.setState({\n        selectedCategory: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"minCostState\", function (event) {\n      _this.setState({\n        minCost: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"maxCostState\", function (event) {\n      _this.setState({\n        maxCost: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"minVotesState\", function (event) {\n      _this.setState({\n        minVotes: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"maxVotesState\", function (event) {\n      _this.setState({\n        maxVotes: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"councilMemberState\", function (event) {\n      _this.setState({\n        councilMember: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"councilMemberWithDistricts\", function (districts, councilMembers) {\n      console.log(districts);\n      console.log(councilMembers); // return districts.forEach((value, idx) => value = value + ': ' + councilMembers[idx])\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearInput\", function () {\n      // console.log('clearing input ', document.querySelectorAll(\"select\"))\n      Array.from(document.querySelectorAll(\"Input\")).forEach(function (input) {\n        return input.value = '';\n      });\n      Array.from(document.querySelectorAll(\"select\")).forEach(function (select) {\n        return select.value = '';\n      });\n\n      _this.setState({\n        selectedYear: '',\n        selectedCategory: '',\n        selectedDistrict: '',\n        minCost: '',\n        maxCost: '',\n        minVotes: '',\n        maxVotes: '',\n        councilMember: ''\n      }); // this.props.onResetSelectedItems();\n\n\n      _this.props.onInitBudget();\n    });\n\n    return _this;\n  }\n\n  _createClass(MapControlsManager, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        firstPageLoad: false\n      });\n\n      if (!this.props.participatoryBudget && !this.props.districts && !this.props.councilMembers) {\n        this.props.onInitBudget();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (!this.state.firstPageLoad && this.props.participatoryBudget) {\n        this.props.onBudgetFilter(this.props.participatoryBudget, this.props.councilMembers, this.state.selectedCategory, this.state.selectedYear, this.state.selectedDistrict, this.state.minCost, this.state.maxCost, this.state.minVotes, this.state.maxVotes, this.state.councilMember);\n        this.setState({\n          firstPageLoad: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var data = '';\n\n      if (this.props.loading) {\n        data = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 20\n        }, this);\n      }\n\n      console.log('state', this.state);\n      console.log('query', this.getQuery());\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          message: 'Zoom In',\n          clicked: this.props.onZoomIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          message: 'Zoom Out',\n          clicked: this.props.onZoomOut\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          message: 'Center',\n          clicked: this.props.onCenter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this), this.props.participatoryBudget && this.props.districts && this.props.councilMembers && this.props.itemCategories ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n            message: 'Items by Council Member',\n            title: 'Council Member',\n            list: this.props.councilMembersList,\n            handleChange: this.councilMemberState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            message: 'Items by district',\n            title: 'Districts',\n            list: this.props.itemDistricts,\n            handleChange: this.itemsByDistrict\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            message: 'Items by year',\n            title: 'Year',\n            list: this.props.itemYears,\n            handleChange: this.itemsByYear\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            message: 'Items by category',\n            title: 'Category',\n            list: this.props.itemCategories,\n            handleChange: this.itemsByCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            label: \"Minimum cost\",\n            handleChange: this.minCostState,\n            step: \"0.01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            label: \"Maximum cost\",\n            handleChange: this.maxCostState,\n            step: \"0.01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            label: \"Minimum votes\",\n            handleChange: this.minVotesState,\n            step: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            label: \"Maximum votes\",\n            handleChange: this.maxVotesState,\n            step: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            message: 'Submit',\n            link: '/map' + this.getQuery(),\n            clicked: function clicked() {\n              return _this2.props.onBudgetFilter(_this2.props.participatoryBudget, _this2.props.councilMembers, _this2.state.selectedCategory, _this2.state.selectedYear, _this2.state.selectedDistrict, _this2.state.minCost, _this2.state.maxCost, _this2.state.minVotes, _this2.state.maxVotes, _this2.state.councilMember);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            message: 'Clear',\n            link: \"/map\",\n            clicked: function clicked() {\n              return _this2.clearInput();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this) : null, data]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return MapControlsManager;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currItem: state.participatoryBudget.currItem,\n    participatoryBudget: state.participatoryBudget.participatoryBudget,\n    loading: state.participatoryBudget.loading,\n    councilMemberLoading: state.participatoryBudget.councilMemberLoading,\n    error: state.participatoryBudget.error,\n    councilMembers: state.participatoryBudget.councilMembers,\n    councilMembersList: state.participatoryBudget.councilMembersList,\n    districts: state.participatoryBudget.districts,\n    districtsLoading: state.participatoryBudget.districtsLoading,\n    itemCategories: state.participatoryBudget.itemCategories,\n    itemYears: state.participatoryBudget.itemYears,\n    itemDistricts: state.participatoryBudget.itemDistricts,\n    selectedBudgetItems: state.subsets.selectedBudgetItems,\n    mapLoading: state.subsets.loading\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onResetSelectedItems: function onResetSelectedItems() {\n      return dispatch(actions.resetSelectedItems());\n    },\n    onInitBudget: function onInitBudget() {\n      return dispatch(actions.initBudget());\n    },\n    onZoomIn: function onZoomIn() {\n      return dispatch(actions.zoomIn());\n    },\n    onZoomOut: function onZoomOut() {\n      return dispatch(actions.zoomOut());\n    },\n    onCenter: function onCenter() {\n      return dispatch(actions.center());\n    },\n    onShowDistricts: function onShowDistricts() {\n      return dispatch(actions.showDistricts());\n    },\n    onBudgetFilter: function onBudgetFilter(budget, councilMembers, category, year, district, minCost, maxCost, minVotes, maxVotes, councilMember) {\n      return dispatch(actions.budgetFilter(budget, councilMembers, category, year, district, minCost, maxCost, minVotes, maxVotes, councilMember));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapControlsManager);","map":{"version":3,"sources":["/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/containers/ParticipatoryBudgetMap/MapControlsManager/MapControlsManager.js"],"names":["React","Component","connect","actions","Spinner","Dropdown","Button","Input","MapControlsManager","firstPageLoad","selectedYear","selectedCategory","selectedDistrict","minCost","maxCost","minVotes","maxVotes","councilMember","query","newQuery","state","length","substring","array","Object","keys","map","item","budget","councilMembers","category","year","district","props","onBudgetFilter","event","setState","target","value","districts","console","log","Array","from","document","querySelectorAll","forEach","input","select","onInitBudget","participatoryBudget","prevProps","prevState","data","loading","getQuery","onZoomIn","onZoomOut","onCenter","itemCategories","councilMembersList","councilMemberState","itemDistricts","itemsByDistrict","itemYears","itemsByYear","itemsByCategory","minCostState","maxCostState","minVotesState","maxVotesState","clearInput","mapStateToProps","currItem","councilMemberLoading","error","districtsLoading","selectedBudgetItems","subsets","mapLoading","mapDispatchToProps","dispatch","onResetSelectedItems","resetSelectedItems","initBudget","zoomIn","zoomOut","center","onShowDistricts","showDistricts","budgetFilter"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Dropdown from '../../../components/UI/Dropdown/Dropdown';\nimport Button from '../../../components/UI/Button/Button';\nimport Input from '../../../components/UI/Input/Input';\n\nclass MapControlsManager extends Component {\n\n    state = {\n        firstPageLoad: false,\n        \n        selectedYear: '',\n        selectedCategory: '',\n        selectedDistrict: '',\n        minCost: '',\n        maxCost: '',\n        minVotes: '',\n        maxVotes: '',\n        councilMember: '',\n\n        query: '',\n    }\n\n    componentDidMount(){                \n        this.setState({firstPageLoad: false});\n        if(!this.props.participatoryBudget && !this.props.districts && !this.props.councilMembers){\n            this.props.onInitBudget();\n        }            \n    }\n\n    componentDidUpdate(prevProps, prevState){        \n        \n        if(!this.state.firstPageLoad && this.props.participatoryBudget){\n            this.props.onBudgetFilter(this.props.participatoryBudget, this.props.councilMembers,\n                this.state.selectedCategory, \n                this.state.selectedYear, \n                this.state.selectedDistrict, \n                this.state.minCost, \n                this.state.maxCost,\n                this.state.minVotes, \n                this.state.maxVotes,   \n                this.state.councilMember,                 \n                )\n\n            this.setState({firstPageLoad: true}) \n        }\n    }\n\n    getQuery = () => {\n        var newQuery = '';\n        if(this.state.selectedYear !== '')\n            newQuery += 'year='+this.state.selectedYear+'&'\n        if(this.state.selectedCategory !== '')\n            newQuery += 'category='+this.state.selectedCategory+'&'\n        if(this.state.selectedDistrict !== '')\n            newQuery += 'district='+this.state.selectedDistrict+'&'\n        if(this.state.minCost !== '')\n            newQuery += 'minCost='+this.state.minCost+'&'\n        if(this.state.maxCost !== '')\n            newQuery += 'maxCost='+this.state.maxCost+'&'\n        if(this.state.minVotes !== '')\n            newQuery += 'minVotes='+this.state.minVotes+'&'\n        if(this.state.maxVotes !== '')\n            newQuery += 'maxVotes='+this.state.maxVotes+'&'\n        // if(newQuery.charAt(newQuery.length -1) === '&')\n        if(newQuery.length > 0){\n            newQuery = '?id=2&' + newQuery;\n            newQuery = newQuery.substring(0, newQuery.length - 1);\n        }\n        \n        // this.setState({query: newQuery});\n        return newQuery;\n    }\n\n    checkSelected = (array) => {\n        Object.keys(array).map(item => {\n            if(array[item] !== ''){\n                return false;\n            }\n        })\n        return true;\n    }\n\n    submit = (budget, councilMembers, category, year, district,minCost, maxCost, minVotes, maxVotes, councilMember) => {\n        \n        \n        this.props.onBudgetFilter(budget, councilMembers, category, year, district,minCost, maxCost, minVotes, maxVotes, councilMember);\n    }\n\n    itemsByYear = (event) => {                \n        this.setState({selectedYear: event.target.value})\n    }\n\n    itemsByDistrict = (event) => {        \n        this.setState({selectedDistrict: event.target.value})\n    }\n\n    itemsByCategory = (event) => {                \n        this.setState({selectedCategory: event.target.value})\n    }\n\n    minCostState = (event) => {\n        this.setState({minCost: event.target.value})\n    }\n\n    maxCostState = (event) => {\n        this.setState({maxCost: event.target.value})\n    }\n\n    minVotesState = (event) => {\n        this.setState({minVotes: event.target.value})\n    }\n\n    maxVotesState = (event) => {\n        this.setState({maxVotes: event.target.value})\n    }\n\n    councilMemberState = (event) => {\n        this.setState({councilMember: event.target.value})\n    }\n\n    councilMemberWithDistricts = (districts, councilMembers) => {\n\n        console.log(districts)\n        console.log(councilMembers)\n        // return districts.forEach((value, idx) => value = value + ': ' + councilMembers[idx])\n    }\n\n    clearInput = () => {        \n        // console.log('clearing input ', document.querySelectorAll(\"select\"))\n        Array.from(document.querySelectorAll(\"Input\")).forEach(\n            input => (input.value = '')\n        );\n        Array.from(document.querySelectorAll(\"select\")).forEach(\n            select => (select.value = '')\n        );\n        this.setState({\n            selectedYear: '',\n            selectedCategory: '',\n            selectedDistrict: '',\n            minCost: '',\n            maxCost: '',\n            minVotes: '',\n            maxVotes: '',\n            councilMember: '',\n        })\n\n        // this.props.onResetSelectedItems();\n        this.props.onInitBudget();\n\n    }\n\n    render(){\n        let data ='';\n        if(this.props.loading){\n            data = <Spinner />;\n        }\n\n        console.log('state',this.state)\n        console.log('query',this.getQuery())\n        \n        return (\n            <div>\n\n                <Button message={'Zoom In'} clicked={this.props.onZoomIn}/>\n                <Button message={'Zoom Out'} clicked={this.props.onZoomOut}/>  \n                <Button message={'Center'} clicked={this.props.onCenter}/>  \n                {/* {this.props.districts ?<Button message={'Show Districts'} clicked={this.props.onShowDistricts}/> :null} */}\n\n                {this.props.participatoryBudget && this.props.districts && this.props.councilMembers && this.props.itemCategories ?\n                    <div>                        \n                        <Dropdown message={'Items by Council Member'} title= {'Council Member'} list={this.props.councilMembersList} handleChange={this.councilMemberState}/>\n                        <Dropdown message={'Items by district'} title= {'Districts'} list={this.props.itemDistricts} handleChange={this.itemsByDistrict}/>\n                        <Dropdown message={'Items by year'} title={'Year'} list={this.props.itemYears} handleChange={this.itemsByYear}/>\n                        <Dropdown message={'Items by category'} title={'Category'} list={this.props.itemCategories} handleChange={this.itemsByCategory}/>\n                        <Input label='Minimum cost' handleChange={this.minCostState} step='0.01'/>\n                        <Input label='Maximum cost' handleChange={this.maxCostState} step='0.01'/>\n                        <Input label='Minimum votes' handleChange={this.minVotesState} step='1'/>\n                        <Input label='Maximum votes' handleChange={this.maxVotesState} step='1'/>\n\n                        <br></br>\n                        <Button message={'Submit'} link={'/map'+this.getQuery()} clicked = {() => \n                            this.props.onBudgetFilter(this.props.participatoryBudget, this.props.councilMembers,\n                                        this.state.selectedCategory, \n                                        this.state.selectedYear, \n                                        this.state.selectedDistrict, \n                                        this.state.minCost, \n                                        this.state.maxCost,\n                                        this.state.minVotes, \n                                        this.state.maxVotes,   \n                                        this.state.councilMember,                 \n                                        )}/>                                                \n                        <Button message={'Clear'} link='/map' clicked ={() => this.clearInput()} />\n                    </div>\n                :null}\n                {data}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        currItem: state.participatoryBudget.currItem,\n        participatoryBudget: state.participatoryBudget.participatoryBudget,\n        loading: state.participatoryBudget.loading,\n        councilMemberLoading: state.participatoryBudget.councilMemberLoading,\n        error: state.participatoryBudget.error,\n        councilMembers: state.participatoryBudget.councilMembers,\n        councilMembersList: state.participatoryBudget.councilMembersList,\n        districts: state.participatoryBudget.districts,\n        districtsLoading: state.participatoryBudget.districtsLoading,\n        itemCategories: state.participatoryBudget.itemCategories,\n        itemYears: state.participatoryBudget.itemYears,\n        itemDistricts: state.participatoryBudget.itemDistricts,\n\n        selectedBudgetItems: state.subsets.selectedBudgetItems,\n        mapLoading: state.subsets.loading,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onResetSelectedItems: () => dispatch(actions.resetSelectedItems()),\n        onInitBudget: () => dispatch(actions.initBudget()),          \n        onZoomIn: () => dispatch(actions.zoomIn()),\n        onZoomOut: () => dispatch(actions.zoomOut()),\n        onCenter: () => dispatch(actions.center()),\n        onShowDistricts: () => dispatch(actions.showDistricts()),\n        onBudgetFilter: (budget, councilMembers, category, year, district,minCost, maxCost, minVotes, maxVotes, councilMember) => \n            dispatch(actions.budgetFilter(budget, councilMembers,\n                        category, \n                        year, \n                        district, \n                        minCost, \n                        maxCost, \n                        minVotes, \n                        maxVotes,\n                        councilMember,\n                        )),        \n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MapControlsManager);"]},"metadata":{},"sourceType":"module"}