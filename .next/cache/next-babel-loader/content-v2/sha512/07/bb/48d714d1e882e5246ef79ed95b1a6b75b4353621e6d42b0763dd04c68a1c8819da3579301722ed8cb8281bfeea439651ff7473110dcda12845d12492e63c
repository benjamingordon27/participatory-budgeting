{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/containers/ParticipatoryBudgetMap/BudgetMap/BudgetMap.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MapMarker from '../../../components/UI/MapMarker/MapMarker';\nimport * as actions from '../../../store/actions/index';\nimport { translateCategory } from '../../../util/translateCategory';\nimport Map from '../../../components/Map/Map';\nconst DEFAULT_CENTER = {\n  lat: 40.635,\n  lng: -73.94\n};\n\nclass BudgetMap extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      firstPageLoad: false\n    });\n\n    _defineProperty(this, \"markerClicked\", (center, item) => {\n      this.props.onZoomMarker(center, item);\n      console.log('url', this.props.url); // this.props.history.replace(this.props.url);\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.participatoryBudget) {\n      this.props.onFindItem(this.props.participatoryBudget, this.props.router.query.lat, this.props.router.query.lng, this.props.router.query.title);\n    }\n\n    if (this.props.districts) {\n      this.props.onSetMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!this.state.firstPageLoad && this.props.loaded) {\n      this.props.onSetMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n      this.setState({\n        firstPageLoad: true\n      });\n    }\n\n    if (prevProps.selectedBudgetItems !== this.props.selectedBudgetItems) {\n      this.props.onResetMap();\n      this.props.onUpdateMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n    }\n\n    if (this.props.showDistricts !== prevProps.showDistricts) {\n      console.log('[BudgetMap.js] show districts');\n    }\n  }\n\n  render() {\n    let markers = [];\n\n    if (this.props.selectedBudgetItems) {\n      this.props.selectedBudgetItems.filter(item => item.latitude && item.longitude).map((item, idx) => {\n        markers.push( /*#__PURE__*/_jsxDEV(MapMarker, {\n          center: this.props.center,\n          lat: item.latitude,\n          lng: item.longitude,\n          item: translateCategory(item),\n          width: '30px',\n          height: '30px',\n          zoom: this.props.zoom ////figure out how to change on zoom change, might have to be rendered not in an array in component but in render itself\n          ,\n          clicked: () => this.markerClicked({\n            lat: item.latitude,\n            lng: item.longitude\n          }, item)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 30\n        }, this));\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '87vh',\n        width: '100%'\n      },\n      children: this.props.mapProps ? /*#__PURE__*/_jsxDEV(Map, _objectSpread(_objectSpread({}, this.props.mapProps), {}, {\n        zoom: this.props.zoom,\n        center: this.props.center,\n        defaultCenter: DEFAULT_CENTER,\n        markers: markers,\n        showDistricts: this.props.showDistricts\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currItem: state.participatoryBudget.currItem,\n    participatoryBudget: state.participatoryBudget.participatoryBudget,\n    councilMemberLoading: state.participatoryBudget.councilMemberLoading,\n    error: state.participatoryBudget.error,\n    councilMembers: state.participatoryBudget.councilMembers,\n    districts: state.participatoryBudget.districts,\n    districtsLoading: state.participatoryBudget.districtsLoading,\n    selectedDistricts: state.participatoryBudget.selectedDistricts,\n    loaded: state.participatoryBudget.loaded,\n    showDistricts: state.setMap.showDistricts,\n    mapProps: state.setMap.mapProps,\n    center: state.setMap.center,\n    zoom: state.setMap.zoom,\n    clickedItem: state.setMap.clickedItem,\n    item: state.participatoryBudget.item,\n    selectedBudgetItems: state.subsets.selectedBudgetItems,\n    url: state.setMap.url\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetMap: (districts, selectedDistricts, councilMembers, selectedBudgetItems) => dispatch(actions.setMap(districts, selectedDistricts, councilMembers, selectedBudgetItems)),\n    onUpdateMap: (districts, selectedDistricts, councilMembers, selectedBudgetItems, showDistricts) => dispatch(actions.updateMap(districts, selectedDistricts, councilMembers, selectedBudgetItems, showDistricts)),\n    onResetMap: () => dispatch(actions.resetMap()),\n    onZoomMarker: (center, item) => dispatch(actions.zoomMarker(center, item)),\n    onFindItem: (budget, lat, lng, title) => dispatch(actions.findItem(budget, lat, lng, title))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BudgetMap);","map":{"version":3,"sources":["/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/containers/ParticipatoryBudgetMap/BudgetMap/BudgetMap.js"],"names":["React","Component","connect","MapMarker","actions","translateCategory","Map","DEFAULT_CENTER","lat","lng","BudgetMap","firstPageLoad","center","item","props","onZoomMarker","console","log","url","componentDidMount","participatoryBudget","onFindItem","router","query","title","districts","onSetMap","selectedDistricts","councilMembers","selectedBudgetItems","componentDidUpdate","prevProps","prevState","state","loaded","setState","onResetMap","onUpdateMap","showDistricts","render","markers","filter","latitude","longitude","map","idx","push","zoom","markerClicked","height","width","mapProps","mapStateToProps","currItem","councilMemberLoading","error","districtsLoading","setMap","clickedItem","subsets","mapDispatchToProps","dispatch","updateMap","resetMap","zoomMarker","budget","findItem"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport MapMarker from '../../../components/UI/MapMarker/MapMarker';\nimport * as actions from '../../../store/actions/index';\nimport {translateCategory} from '../../../util/translateCategory';\n\nimport Map from '../../../components/Map/Map';\n\nconst DEFAULT_CENTER = { lat: 40.635, lng: -73.94 };\n\nclass BudgetMap extends Component{\n    state = {\n        firstPageLoad: false,\n    } \n\n    componentDidMount(){       \n        if(this.props.participatoryBudget){\n            this.props.onFindItem(this.props.participatoryBudget, this.props.router.query.lat, this.props.router.query.lng, this.props.router.query.title);\n        }        \n        if(this.props.districts){\n            this.props.onSetMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(!this.state.firstPageLoad && this.props.loaded){\n            this.props.onSetMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n            this.setState({firstPageLoad: true})\n        }\n\n        if((prevProps.selectedBudgetItems !== this.props.selectedBudgetItems)){\n            this.props.onResetMap();            \n            this.props.onUpdateMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);     \n        }    \n        \n        if((this.props.showDistricts !== prevProps.showDistricts)){\n            console.log('[BudgetMap.js] show districts')\n\n        }  \n    }\n\n    markerClicked = (center, item) => {        \n        this.props.onZoomMarker(center, item);\n        console.log('url',this.props.url)\n        // this.props.history.replace(this.props.url);\n    }\n\n    render(){        \n\n        let markers = [];    \n        if(this.props.selectedBudgetItems){                    \n            this.props.selectedBudgetItems.filter(item => item.latitude && item.longitude).map((item,idx) => {\n                markers.push(<MapMarker \n                    center={this.props.center}\n                    key={idx} \n                    lat={item.latitude} \n                    lng={item.longitude} \n                    item={translateCategory(item)}\n                    width={'30px'}\n                    height={'30px'}\n                    zoom={this.props.zoom} ////figure out how to change on zoom change, might have to be rendered not in an array in component but in render itself\n                    clicked={() => this.markerClicked({ lat: item.latitude, lng: item.longitude }, item)}/>\n                );\n            })\n        }            \n\n        return(\n            <div style={{ height: '87vh', width: '100%' }}>\n                {this.props.mapProps ?                 \n                    <Map \n                        {...this.props.mapProps} \n                            zoom={this.props.zoom} \n                            center={this.props.center} \n                            defaultCenter={DEFAULT_CENTER}\n                            markers={markers}\n                            showDistricts={this.props.showDistricts}/> \n                    :null}\n            </div>            \n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        currItem: state.participatoryBudget.currItem,\n        participatoryBudget: state.participatoryBudget.participatoryBudget,   \n        councilMemberLoading: state.participatoryBudget.councilMemberLoading,\n        error: state.participatoryBudget.error,\n        councilMembers: state.participatoryBudget.councilMembers,\n        districts: state.participatoryBudget.districts,\n        districtsLoading: state.participatoryBudget.districtsLoading,   \n        selectedDistricts: state.participatoryBudget.selectedDistricts,   \n        loaded: state.participatoryBudget.loaded,\n        \n        showDistricts: state.setMap.showDistricts,\n        mapProps: state.setMap.mapProps,        \n        center: state.setMap.center,\n        zoom: state.setMap.zoom,\n        clickedItem: state.setMap.clickedItem,\n        item: state.participatoryBudget.item,\n        selectedBudgetItems: state.subsets.selectedBudgetItems,\n\n        url: state.setMap.url,        \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {        \n        onSetMap: (districts, selectedDistricts, councilMembers, selectedBudgetItems) => dispatch(actions.setMap(districts, selectedDistricts, councilMembers, selectedBudgetItems)),  \n        onUpdateMap: (districts, selectedDistricts, councilMembers, selectedBudgetItems, showDistricts) => dispatch(actions.updateMap(districts, selectedDistricts, councilMembers, selectedBudgetItems, showDistricts)),  \n        onResetMap: () => dispatch(actions.resetMap()),\n        onZoomMarker: (center, item) => dispatch(actions.zoomMarker(center, item)),   \n        \n        onFindItem: (budget, lat, lng, title) => dispatch(actions.findItem(budget, lat, lng, title)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BudgetMap);"]},"metadata":{},"sourceType":"module"}