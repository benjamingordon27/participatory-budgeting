{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport GoogleMapReact from 'google-map-react'; // import polygonCenter from 'geojson-polygon-center';\n\nimport config from './mapConfig';\n\nconst renderDistricts = (map, maps, coords, selectedDistricts, councilMembers, showDistricts) => {\n  let allDistrictPolygons = {}; // let polygonCoords = [];\n\n  console.log('show districts?', showDistricts);\n  console.log(coords);\n\n  if (showDistricts) {\n    Object.keys(coords.features).map(key => {\n      let districtPolygons = [];\n      let currDistrict = coords.features[key].properties.coun_dist;\n      coords.features[key].geometry.coordinates.map(arr => {\n        let coordArr = [];\n        arr[0].map(coordinate => coordArr.push({\n          lat: coordinate[1],\n          lng: coordinate[0]\n        }));\n        var councilDistrictPolygon = new maps.Polygon({\n          paths: coordArr,\n          strokeColor: \"#FF0000\",\n          strokeOpacity: 0.8,\n          strokeWeight: 2,\n          fillColor: \"#FF0000\",\n          fillOpacity: 0.35,\n          indexID: currDistrict\n        }); // var center = polygonCenter(polygon.geometry)\n        // console.log('center', polygonCenter(coords.features[key].geometry));\n\n        districtPolygons.push(councilDistrictPolygon); // polygonCoords.push(coordArr);\n\n        var districtInfo = councilMembers.filter(item => item.district === currDistrict); // addListenersOnPolygon(map,maps,councilDistrictPolygon, districtInfo);\n      });\n      allDistrictPolygons[key] = {\n        district: coords.features[key].properties.coun_dist,\n        polygons: districtPolygons\n      };\n    });\n  }\n\n  Object.keys(allDistrictPolygons).map(key => {\n    // if(selectedDistricts.includes(Number(allDistrictPolygons[key].district)))\n    allDistrictPolygons[key].polygons.map(polygon => polygon.setMap(map));\n  });\n};\n\nconst addListenersOnPolygon = (map, maps, polygon, info) => {\n  var infoWindow = new maps.InfoWindow();\n  maps.event.addListener(polygon, 'click', function (event) {\n    infoWindow.setContent('District: ' + polygon.indexID + '<br>Council Member: ' + info[0].name + '<br>Political Party: ' + info[0].political_party);\n    var latLng = event.latLng;\n    infoWindow.setPosition(latLng);\n    infoWindow.open(map);\n  });\n};\n\nconst handleApiLoaded = (map, maps, coords, selectedDistricts, councilMembers, budget) => {\n  console.log('handleAPILoaded called');\n  renderDistricts(map, maps, coords, selectedDistricts, councilMembers);\n};\n\nconst map = props => {\n  console.log('map props', props);\n\n  let output = /*#__PURE__*/_jsx(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: process.env.REACT_APP_GOOGLE_MAPS_TOKEN,\n      v: '3.31'\n    },\n    defaultCenter: props.defaultCenter,\n    center: {\n      lat: Number(props.center.lat),\n      lng: Number(props.center.lng)\n    },\n    zoom: props.zoom,\n    options: config,\n    yesIWantToUseGoogleMapApiInternals: true,\n    onGoogleApiLoaded: ({\n      map,\n      maps\n    }) => {\n      handleApiLoaded(map, maps, props.districts, props.selectedDistricts, props.councilMembers, props.selectedBudgetItems, props.showDistricts);\n    },\n    children: props.markers\n  });\n\n  return output;\n};\n\nexport default map;","map":null,"metadata":{},"sourceType":"module"}