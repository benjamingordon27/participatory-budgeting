{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/containers/ParticipatoryBudgetMap/BudgetMap/BudgetMap.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MapMarker from '../../../components/UI/MapMarker/MapMarker';\nimport * as actions from '../../../store/actions/index';\nimport { translateCategory } from '../../../util/translateCategory';\nimport Map from '../../../components/Map/Map';\nvar DEFAULT_CENTER = {\n  lat: 40.635,\n  lng: -73.94\n};\n\nvar BudgetMap = /*#__PURE__*/function (_Component) {\n  _inherits(BudgetMap, _Component);\n\n  var _super = _createSuper(BudgetMap);\n\n  function BudgetMap() {\n    var _this;\n\n    _classCallCheck(this, BudgetMap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      firstPageLoad: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"markerClicked\", function (center, item) {\n      _this.props.onZoomMarker(center, item);\n\n      console.log('url', _this.props.url); // this.props.history.replace(this.props.url);\n    });\n\n    return _this;\n  }\n\n  _createClass(BudgetMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.districts) {\n        this.props.onSetMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (!this.state.firstPageLoad && this.props.loaded) {\n        this.props.onSetMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n        this.setState({\n          firstPageLoad: true\n        });\n      }\n\n      if (prevProps.selectedBudgetItems !== this.props.selectedBudgetItems) {\n        this.props.onResetMap();\n        this.props.onUpdateMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n      }\n\n      if (this.props.participatoryBudget !== undefined && this.props.router.query !== undefined && this.props.participatoryBudget !== prevProps.participatoryBudget) {\n        this.props.onFindItem(this.props.participatoryBudget, this.props.router.query.lat, this.props.router.query.lng, this.props.router.query.title);\n      }\n\n      if (this.props.item !== undefined && this.props.item !== prevProps.item) {\n        this.markerClicked({\n          lat: this.props.item.latitude,\n          lng: this.props.item.longitude\n        }, this.props.item);\n      }\n\n      if (this.props.showDistricts !== prevProps.showDistricts) {\n        console.log('[BudgetMap.js] show districts');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('[BudgetMap.js]', this.props);\n      console.log('[BudgetMap.js]', this.props.item);\n      var markers = [];\n\n      if (this.props.selectedBudgetItems) {\n        this.props.selectedBudgetItems.filter(function (item) {\n          return item.latitude && item.longitude;\n        }).map(function (item, idx) {\n          markers.push( /*#__PURE__*/_jsxDEV(MapMarker, {\n            center: _this2.props.center,\n            lat: item.latitude,\n            lng: item.longitude,\n            item: translateCategory(item),\n            width: '30px',\n            height: '30px',\n            zoom: _this2.props.zoom ////figure out how to change on zoom change, might have to be rendered not in an array in component but in render itself\n            ,\n            clicked: function clicked() {\n              return _this2.markerClicked({\n                lat: item.latitude,\n                lng: item.longitude\n              }, item);\n            }\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 30\n          }, _this2));\n        });\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '87vh',\n          width: '100%'\n        },\n        children: this.props.mapProps ? /*#__PURE__*/_jsxDEV(Map, _objectSpread(_objectSpread({}, this.props.mapProps), {}, {\n          zoom: this.props.zoom,\n          center: this.props.center,\n          defaultCenter: DEFAULT_CENTER,\n          markers: markers,\n          showDistricts: this.props.showDistricts\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return BudgetMap;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currItem: state.participatoryBudget.currItem,\n    participatoryBudget: state.participatoryBudget.participatoryBudget,\n    councilMemberLoading: state.participatoryBudget.councilMemberLoading,\n    error: state.participatoryBudget.error,\n    councilMembers: state.participatoryBudget.councilMembers,\n    districts: state.participatoryBudget.districts,\n    districtsLoading: state.participatoryBudget.districtsLoading,\n    selectedDistricts: state.participatoryBudget.selectedDistricts,\n    loaded: state.participatoryBudget.loaded,\n    showDistricts: state.setMap.showDistricts,\n    mapProps: state.setMap.mapProps,\n    center: state.setMap.center,\n    zoom: state.setMap.zoom,\n    clickedItem: state.setMap.clickedItem,\n    item: state.subsets.item,\n    selectedBudgetItems: state.subsets.selectedBudgetItems,\n    url: state.setMap.url\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSetMap: function onSetMap(districts, selectedDistricts, councilMembers, selectedBudgetItems) {\n      return dispatch(actions.setMap(districts, selectedDistricts, councilMembers, selectedBudgetItems));\n    },\n    onUpdateMap: function onUpdateMap(districts, selectedDistricts, councilMembers, selectedBudgetItems, showDistricts) {\n      return dispatch(actions.updateMap(districts, selectedDistricts, councilMembers, selectedBudgetItems, showDistricts));\n    },\n    onResetMap: function onResetMap() {\n      return dispatch(actions.resetMap());\n    },\n    onZoomMarker: function onZoomMarker(center, item) {\n      return dispatch(actions.zoomMarker(center, item));\n    },\n    onFindItem: function onFindItem(budget, lat, lng, title) {\n      return dispatch(actions.findItem(budget, lat, lng, title));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BudgetMap);","map":{"version":3,"sources":["/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/containers/ParticipatoryBudgetMap/BudgetMap/BudgetMap.js"],"names":["React","Component","connect","MapMarker","actions","translateCategory","Map","DEFAULT_CENTER","lat","lng","BudgetMap","firstPageLoad","center","item","props","onZoomMarker","console","log","url","districts","onSetMap","selectedDistricts","councilMembers","selectedBudgetItems","prevProps","prevState","state","loaded","setState","onResetMap","onUpdateMap","participatoryBudget","undefined","router","query","onFindItem","title","markerClicked","latitude","longitude","showDistricts","markers","filter","map","idx","push","zoom","height","width","mapProps","mapStateToProps","currItem","councilMemberLoading","error","districtsLoading","setMap","clickedItem","subsets","mapDispatchToProps","dispatch","updateMap","resetMap","zoomMarker","budget","findItem"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,SAAP,MAAsB,4CAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,8BAAzB;AACA,SAAQC,iBAAR,QAAgC,iCAAhC;AAEA,OAAOC,GAAP,MAAgB,6BAAhB;AAEA,IAAMC,cAAc,GAAG;AAAEC,EAAAA,GAAG,EAAE,MAAP;AAAeC,EAAAA,GAAG,EAAE,CAAC;AAArB,CAAvB;;IAEMC,S;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,aAAa,EAAE;AADX,K;;oEAmCQ,UAACC,MAAD,EAASC,IAAT,EAAkB;AAC9B,YAAKC,KAAL,CAAWC,YAAX,CAAwBH,MAAxB,EAAgCC,IAAhC;;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkB,MAAKH,KAAL,CAAWI,GAA7B,EAF8B,CAG9B;AACH,K;;;;;;;wCAnCkB;AACf,UAAG,KAAKJ,KAAL,CAAWK,SAAd,EAAwB;AACpB,aAAKL,KAAL,CAAWM,QAAX,CAAoB,KAAKN,KAAL,CAAWK,SAA/B,EAA0C,KAAKL,KAAL,CAAWO,iBAArD,EAAwE,KAAKP,KAAL,CAAWQ,cAAnF,EAAmG,KAAKR,KAAL,CAAWS,mBAA9G;AACH;AACJ;;;uCAEkBC,S,EAAWC,S,EAAU;AACpC,UAAG,CAAC,KAAKC,KAAL,CAAWf,aAAZ,IAA6B,KAAKG,KAAL,CAAWa,MAA3C,EAAkD;AAC9C,aAAKb,KAAL,CAAWM,QAAX,CAAoB,KAAKN,KAAL,CAAWK,SAA/B,EAA0C,KAAKL,KAAL,CAAWO,iBAArD,EAAwE,KAAKP,KAAL,CAAWQ,cAAnF,EAAmG,KAAKR,KAAL,CAAWS,mBAA9G;AACA,aAAKK,QAAL,CAAc;AAACjB,UAAAA,aAAa,EAAE;AAAhB,SAAd;AACH;;AAED,UAAIa,SAAS,CAACD,mBAAV,KAAkC,KAAKT,KAAL,CAAWS,mBAAjD,EAAsE;AAClE,aAAKT,KAAL,CAAWe,UAAX;AACA,aAAKf,KAAL,CAAWgB,WAAX,CAAuB,KAAKhB,KAAL,CAAWK,SAAlC,EAA6C,KAAKL,KAAL,CAAWO,iBAAxD,EAA2E,KAAKP,KAAL,CAAWQ,cAAtF,EAAsG,KAAKR,KAAL,CAAWS,mBAAjH;AACH;;AAED,UAAG,KAAKT,KAAL,CAAWiB,mBAAX,KAAmCC,SAAnC,IAAgD,KAAKlB,KAAL,CAAWmB,MAAX,CAAkBC,KAAlB,KAA4BF,SAA5E,IAA0F,KAAKlB,KAAL,CAAWiB,mBAAX,KAAmCP,SAAS,CAACO,mBAA1I,EAA+J;AAC3J,aAAKjB,KAAL,CAAWqB,UAAX,CAAsB,KAAKrB,KAAL,CAAWiB,mBAAjC,EAAsD,KAAKjB,KAAL,CAAWmB,MAAX,CAAkBC,KAAlB,CAAwB1B,GAA9E,EAAmF,KAAKM,KAAL,CAAWmB,MAAX,CAAkBC,KAAlB,CAAwBzB,GAA3G,EAAgH,KAAKK,KAAL,CAAWmB,MAAX,CAAkBC,KAAlB,CAAwBE,KAAxI;AACH;;AAED,UAAI,KAAKtB,KAAL,CAAWD,IAAX,KAAoBmB,SAApB,IAAkC,KAAKlB,KAAL,CAAWD,IAAX,KAAoBW,SAAS,CAACX,IAApE,EAA2E;AACvE,aAAKwB,aAAL,CAAmB;AAAC7B,UAAAA,GAAG,EAAE,KAAKM,KAAL,CAAWD,IAAX,CAAgByB,QAAtB;AAAgC7B,UAAAA,GAAG,EAAE,KAAKK,KAAL,CAAWD,IAAX,CAAgB0B;AAArD,SAAnB,EAAoF,KAAKzB,KAAL,CAAWD,IAA/F;AACH;;AAED,UAAI,KAAKC,KAAL,CAAW0B,aAAX,KAA6BhB,SAAS,CAACgB,aAA3C,EAA0D;AACtDxB,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AAEH;AACJ;;;6BAQO;AAAA;;AACJD,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKH,KAAnC;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKH,KAAL,CAAWD,IAAzC;AAEA,UAAI4B,OAAO,GAAG,EAAd;;AACA,UAAG,KAAK3B,KAAL,CAAWS,mBAAd,EAAkC;AAC9B,aAAKT,KAAL,CAAWS,mBAAX,CAA+BmB,MAA/B,CAAsC,UAAA7B,IAAI;AAAA,iBAAIA,IAAI,CAACyB,QAAL,IAAiBzB,IAAI,CAAC0B,SAA1B;AAAA,SAA1C,EAA+EI,GAA/E,CAAmF,UAAC9B,IAAD,EAAM+B,GAAN,EAAc;AAC7FH,UAAAA,OAAO,CAACI,IAAR,eAAa,QAAC,SAAD;AACT,YAAA,MAAM,EAAE,MAAI,CAAC/B,KAAL,CAAWF,MADV;AAGT,YAAA,GAAG,EAAEC,IAAI,CAACyB,QAHD;AAIT,YAAA,GAAG,EAAEzB,IAAI,CAAC0B,SAJD;AAKT,YAAA,IAAI,EAAElC,iBAAiB,CAACQ,IAAD,CALd;AAMT,YAAA,KAAK,EAAE,MANE;AAOT,YAAA,MAAM,EAAE,MAPC;AAQT,YAAA,IAAI,EAAE,MAAI,CAACC,KAAL,CAAWgC,IARR,CAQc;AARd;AAST,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACT,aAAL,CAAmB;AAAE7B,gBAAAA,GAAG,EAAEK,IAAI,CAACyB,QAAZ;AAAsB7B,gBAAAA,GAAG,EAAEI,IAAI,CAAC0B;AAAhC,eAAnB,EAAgE1B,IAAhE,CAAN;AAAA;AATA,aAEJ+B,GAFI;AAAA;AAAA;AAAA;AAAA,oBAAb;AAWH,SAZD;AAaH;;AAED,0BACI;AAAK,QAAA,KAAK,EAAE;AAAEG,UAAAA,MAAM,EAAE,MAAV;AAAkBC,UAAAA,KAAK,EAAE;AAAzB,SAAZ;AAAA,kBACK,KAAKlC,KAAL,CAAWmC,QAAX,gBACG,QAAC,GAAD,kCACQ,KAAKnC,KAAL,CAAWmC,QADnB;AAEQ,UAAA,IAAI,EAAE,KAAKnC,KAAL,CAAWgC,IAFzB;AAGQ,UAAA,MAAM,EAAE,KAAKhC,KAAL,CAAWF,MAH3B;AAIQ,UAAA,aAAa,EAAEL,cAJvB;AAKQ,UAAA,OAAO,EAAEkC,OALjB;AAMQ,UAAA,aAAa,EAAE,KAAK3B,KAAL,CAAW0B;AANlC;AAAA;AAAA;AAAA;AAAA,gBADH,GAQI;AATT;AAAA;AAAA;AAAA;AAAA,cADJ;AAaH;;;;EA5EmBvC,S;;AA+ExB,IAAMiD,eAAe,GAAG,SAAlBA,eAAkB,CAAAxB,KAAK,EAAI;AAC7B,SAAO;AACHyB,IAAAA,QAAQ,EAAEzB,KAAK,CAACK,mBAAN,CAA0BoB,QADjC;AAEHpB,IAAAA,mBAAmB,EAAEL,KAAK,CAACK,mBAAN,CAA0BA,mBAF5C;AAGHqB,IAAAA,oBAAoB,EAAE1B,KAAK,CAACK,mBAAN,CAA0BqB,oBAH7C;AAIHC,IAAAA,KAAK,EAAE3B,KAAK,CAACK,mBAAN,CAA0BsB,KAJ9B;AAKH/B,IAAAA,cAAc,EAAEI,KAAK,CAACK,mBAAN,CAA0BT,cALvC;AAMHH,IAAAA,SAAS,EAAEO,KAAK,CAACK,mBAAN,CAA0BZ,SANlC;AAOHmC,IAAAA,gBAAgB,EAAE5B,KAAK,CAACK,mBAAN,CAA0BuB,gBAPzC;AAQHjC,IAAAA,iBAAiB,EAAEK,KAAK,CAACK,mBAAN,CAA0BV,iBAR1C;AASHM,IAAAA,MAAM,EAAED,KAAK,CAACK,mBAAN,CAA0BJ,MAT/B;AAWHa,IAAAA,aAAa,EAAEd,KAAK,CAAC6B,MAAN,CAAaf,aAXzB;AAYHS,IAAAA,QAAQ,EAAEvB,KAAK,CAAC6B,MAAN,CAAaN,QAZpB;AAaHrC,IAAAA,MAAM,EAAEc,KAAK,CAAC6B,MAAN,CAAa3C,MAblB;AAcHkC,IAAAA,IAAI,EAAEpB,KAAK,CAAC6B,MAAN,CAAaT,IAdhB;AAeHU,IAAAA,WAAW,EAAE9B,KAAK,CAAC6B,MAAN,CAAaC,WAfvB;AAgBH3C,IAAAA,IAAI,EAAEa,KAAK,CAAC+B,OAAN,CAAc5C,IAhBjB;AAiBHU,IAAAA,mBAAmB,EAAEG,KAAK,CAAC+B,OAAN,CAAclC,mBAjBhC;AAmBHL,IAAAA,GAAG,EAAEQ,KAAK,CAAC6B,MAAN,CAAarC;AAnBf,GAAP;AAqBH,CAtBD;;AAwBA,IAAMwC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHvC,IAAAA,QAAQ,EAAE,kBAACD,SAAD,EAAYE,iBAAZ,EAA+BC,cAA/B,EAA+CC,mBAA/C;AAAA,aAAuEoC,QAAQ,CAACvD,OAAO,CAACmD,MAAR,CAAepC,SAAf,EAA0BE,iBAA1B,EAA6CC,cAA7C,EAA6DC,mBAA7D,CAAD,CAA/E;AAAA,KADP;AAEHO,IAAAA,WAAW,EAAE,qBAACX,SAAD,EAAYE,iBAAZ,EAA+BC,cAA/B,EAA+CC,mBAA/C,EAAoEiB,aAApE;AAAA,aAAsFmB,QAAQ,CAACvD,OAAO,CAACwD,SAAR,CAAkBzC,SAAlB,EAA6BE,iBAA7B,EAAgDC,cAAhD,EAAgEC,mBAAhE,EAAqFiB,aAArF,CAAD,CAA9F;AAAA,KAFV;AAGHX,IAAAA,UAAU,EAAE;AAAA,aAAM8B,QAAQ,CAACvD,OAAO,CAACyD,QAAR,EAAD,CAAd;AAAA,KAHT;AAIH9C,IAAAA,YAAY,EAAE,sBAACH,MAAD,EAASC,IAAT;AAAA,aAAkB8C,QAAQ,CAACvD,OAAO,CAAC0D,UAAR,CAAmBlD,MAAnB,EAA2BC,IAA3B,CAAD,CAA1B;AAAA,KAJX;AAMHsB,IAAAA,UAAU,EAAE,oBAAC4B,MAAD,EAASvD,GAAT,EAAcC,GAAd,EAAmB2B,KAAnB;AAAA,aAA6BuB,QAAQ,CAACvD,OAAO,CAAC4D,QAAR,CAAiBD,MAAjB,EAAyBvD,GAAzB,EAA8BC,GAA9B,EAAmC2B,KAAnC,CAAD,CAArC;AAAA;AANT,GAAP;AAQH,CATD;;AAWA,eAAelC,OAAO,CAACgD,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6ChD,SAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport MapMarker from '../../../components/UI/MapMarker/MapMarker';\nimport * as actions from '../../../store/actions/index';\nimport {translateCategory} from '../../../util/translateCategory';\n\nimport Map from '../../../components/Map/Map';\n\nconst DEFAULT_CENTER = { lat: 40.635, lng: -73.94 };\n\nclass BudgetMap extends Component{\n    state = {\n        firstPageLoad: false,\n    } \n\n    componentDidMount(){               \n        if(this.props.districts){\n            this.props.onSetMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(!this.state.firstPageLoad && this.props.loaded){\n            this.props.onSetMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n            this.setState({firstPageLoad: true})\n        }\n\n        if((prevProps.selectedBudgetItems !== this.props.selectedBudgetItems)){\n            this.props.onResetMap();            \n            this.props.onUpdateMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);     \n        }    \n\n        if(this.props.participatoryBudget !== undefined && this.props.router.query !== undefined && (this.props.participatoryBudget !== prevProps.participatoryBudget)){\n            this.props.onFindItem(this.props.participatoryBudget, this.props.router.query.lat, this.props.router.query.lng, this.props.router.query.title);\n        }\n\n        if( this.props.item !== undefined && (this.props.item !== prevProps.item) ){\n            this.markerClicked({lat: this.props.item.latitude, lng: this.props.item.longitude}, this.props.item)\n        }\n        \n        if((this.props.showDistricts !== prevProps.showDistricts)){\n            console.log('[BudgetMap.js] show districts')\n\n        }  \n    }\n\n    markerClicked = (center, item) => {        \n        this.props.onZoomMarker(center, item);\n        console.log('url',this.props.url)\n        // this.props.history.replace(this.props.url);\n    }\n\n    render(){        \n        console.log('[BudgetMap.js]', this.props)\n        console.log('[BudgetMap.js]', this.props.item)        \n\n        let markers = [];    \n        if(this.props.selectedBudgetItems){                    \n            this.props.selectedBudgetItems.filter(item => item.latitude && item.longitude).map((item,idx) => {\n                markers.push(<MapMarker \n                    center={this.props.center}\n                    key={idx} \n                    lat={item.latitude} \n                    lng={item.longitude} \n                    item={translateCategory(item)}\n                    width={'30px'}\n                    height={'30px'}\n                    zoom={this.props.zoom} ////figure out how to change on zoom change, might have to be rendered not in an array in component but in render itself\n                    clicked={() => this.markerClicked({ lat: item.latitude, lng: item.longitude }, item)}/>\n                );\n            })\n        }            \n\n        return(\n            <div style={{ height: '87vh', width: '100%' }}>\n                {this.props.mapProps ?                 \n                    <Map \n                        {...this.props.mapProps} \n                            zoom={this.props.zoom} \n                            center={this.props.center} \n                            defaultCenter={DEFAULT_CENTER}\n                            markers={markers}\n                            showDistricts={this.props.showDistricts}/> \n                    :null}\n            </div>            \n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        currItem: state.participatoryBudget.currItem,\n        participatoryBudget: state.participatoryBudget.participatoryBudget,   \n        councilMemberLoading: state.participatoryBudget.councilMemberLoading,\n        error: state.participatoryBudget.error,\n        councilMembers: state.participatoryBudget.councilMembers,\n        districts: state.participatoryBudget.districts,\n        districtsLoading: state.participatoryBudget.districtsLoading,   \n        selectedDistricts: state.participatoryBudget.selectedDistricts,   \n        loaded: state.participatoryBudget.loaded,\n        \n        showDistricts: state.setMap.showDistricts,\n        mapProps: state.setMap.mapProps,        \n        center: state.setMap.center,\n        zoom: state.setMap.zoom,\n        clickedItem: state.setMap.clickedItem,\n        item: state.subsets.item,\n        selectedBudgetItems: state.subsets.selectedBudgetItems,\n\n        url: state.setMap.url,        \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {        \n        onSetMap: (districts, selectedDistricts, councilMembers, selectedBudgetItems) => dispatch(actions.setMap(districts, selectedDistricts, councilMembers, selectedBudgetItems)),  \n        onUpdateMap: (districts, selectedDistricts, councilMembers, selectedBudgetItems, showDistricts) => dispatch(actions.updateMap(districts, selectedDistricts, councilMembers, selectedBudgetItems, showDistricts)),  \n        onResetMap: () => dispatch(actions.resetMap()),\n        onZoomMarker: (center, item) => dispatch(actions.zoomMarker(center, item)),   \n        \n        onFindItem: (budget, lat, lng, title) => dispatch(actions.findItem(budget, lat, lng, title)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BudgetMap);"]},"metadata":{},"sourceType":"module"}