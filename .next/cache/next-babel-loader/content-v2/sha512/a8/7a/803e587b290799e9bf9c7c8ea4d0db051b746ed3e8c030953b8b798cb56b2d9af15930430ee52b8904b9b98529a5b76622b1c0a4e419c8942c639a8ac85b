{"ast":null,"code":"import * as actionTypes from './actionTypes';\nexport const zoomMarker = (center, item) => {\n  return {\n    type: actionTypes.ZOOM_MARKER,\n    center: center,\n    item: item\n  };\n};\nexport const zoomOut = () => {\n  return {\n    type: actionTypes.ZOOM_OUT\n  };\n};\nexport const zoomIn = () => {\n  return {\n    type: actionTypes.ZOOM_IN\n  };\n};\nexport const center = () => {\n  return {\n    type: actionTypes.CENTER\n  };\n};\nexport const resetClickedItem = () => {\n  return {\n    type: actionTypes.RESET_CLICKED_ITEM\n  };\n};\nexport const showDistrictsHelper = () => {\n  console.log('show districts helper');\n  return {\n    type: actionTypes.SHOW_DISTRICTS\n  };\n};\nexport const showDistricts = () => {\n  console.log('show districts');\n  return dispatch => {\n    setTimeout(() => dispatch(showDistrictsHelper(), 50));\n  };\n};\nexport const setMap = (districts, selectedDistricts, councilMembers, selectedBudgetItems) => {\n  return {\n    type: actionTypes.SET_MAP,\n    districts: districts,\n    selectedDistricts: selectedDistricts,\n    councilMembers: councilMembers,\n    selectedBudgetItems: selectedBudgetItems\n  };\n};\nexport const updateHelper = (districts, selectedDistricts, councilMembers, selectedBudgetItems) => {\n  return {\n    type: actionTypes.UPDATE_MAP,\n    districts: districts,\n    selectedDistricts: selectedDistricts,\n    councilMembers: councilMembers,\n    selectedBudgetItems: selectedBudgetItems\n  };\n};\nexport const updateMap = (districts, selectedDistricts, councilMembers, selectedBudgetItems) => {\n  return dispatch => {\n    setTimeout(() => dispatch(updateHelper(districts, selectedDistricts, councilMembers, selectedBudgetItems), 50));\n  };\n};\nexport const resetHelper = () => {\n  return {\n    type: actionTypes.RESET_MAP\n  };\n};\nexport const resetMap = () => {\n  return dispatch => {\n    setTimeout(() => dispatch(resetHelper(), 50));\n  };\n};","map":{"version":3,"sources":["/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/store/actions/setMap.js"],"names":["actionTypes","zoomMarker","center","item","type","ZOOM_MARKER","zoomOut","ZOOM_OUT","zoomIn","ZOOM_IN","CENTER","resetClickedItem","RESET_CLICKED_ITEM","showDistrictsHelper","console","log","SHOW_DISTRICTS","showDistricts","dispatch","setTimeout","setMap","districts","selectedDistricts","councilMembers","selectedBudgetItems","SET_MAP","updateHelper","UPDATE_MAP","updateMap","resetHelper","RESET_MAP","resetMap"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,IAAT,KAAkB;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,WADf;AAEHH,IAAAA,MAAM,EAAEA,MAFL;AAGHC,IAAAA,IAAI,EAAEA;AAHH,GAAP;AAKH,CANM;AAQP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAEJ,WAAW,CAACO;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,MAAM,GAAG,MAAM;AACxB,SAAO;AACHJ,IAAAA,IAAI,EAAEJ,WAAW,CAACS;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMP,MAAM,GAAG,MAAM;AACxB,SAAO;AACHE,IAAAA,IAAI,EAAEJ,WAAW,CAACU;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAClC,SAAO;AACHP,IAAAA,IAAI,EAAEJ,WAAW,CAACY;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,SAAO;AACHX,IAAAA,IAAI,EAAEJ,WAAW,CAACgB;AADf,GAAP;AAGH,CALM;AAOP,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/BH,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,SAAOG,QAAQ,IAAI;AACfC,IAAAA,UAAU,CAAC,MAAMD,QAAQ,CAACL,mBAAmB,EAApB,EAAuB,EAAvB,CAAf,CAAV;AACH,GAFD;AAGH,CALM;AAOP,OAAO,MAAMO,MAAM,GAAG,CAACC,SAAD,EAAYC,iBAAZ,EAA+BC,cAA/B,EAA+CC,mBAA/C,KAAuE;AACzF,SAAO;AACHpB,IAAAA,IAAI,EAAEJ,WAAW,CAACyB,OADf;AAEHJ,IAAAA,SAAS,EAAEA,SAFR;AAGHC,IAAAA,iBAAiB,EAAEA,iBAHhB;AAIHC,IAAAA,cAAc,EAAEA,cAJb;AAKHC,IAAAA,mBAAmB,EAAEA;AALlB,GAAP;AAOH,CARM;AAUP,OAAO,MAAME,YAAY,GAAG,CAACL,SAAD,EAAYC,iBAAZ,EAA+BC,cAA/B,EAA+CC,mBAA/C,KAAuE;AAC/F,SAAO;AACHpB,IAAAA,IAAI,EAAEJ,WAAW,CAAC2B,UADf;AAEHN,IAAAA,SAAS,EAAEA,SAFR;AAGHC,IAAAA,iBAAiB,EAAEA,iBAHhB;AAIHC,IAAAA,cAAc,EAAEA,cAJb;AAKHC,IAAAA,mBAAmB,EAAEA;AALlB,GAAP;AAOH,CARM;AAUP,OAAO,MAAMI,SAAS,GAAG,CAACP,SAAD,EAAYC,iBAAZ,EAA+BC,cAA/B,EAA+CC,mBAA/C,KAAuE;AAC5F,SAAON,QAAQ,IAAI;AACfC,IAAAA,UAAU,CAAC,MAAMD,QAAQ,CAACQ,YAAY,CAACL,SAAD,EAAYC,iBAAZ,EAA+BC,cAA/B,EAA+CC,mBAA/C,CAAb,EAAiF,EAAjF,CAAf,CAAV;AACH,GAFD;AAGH,CAJM;AAMP,OAAO,MAAMK,WAAW,GAAG,MAAM;AAC7B,SAAO;AACHzB,IAAAA,IAAI,EAAEJ,WAAW,CAAC8B;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC1B,SAAOb,QAAQ,IAAI;AACfC,IAAAA,UAAU,CAAC,MAAMD,QAAQ,CAACW,WAAW,EAAZ,EAAe,EAAf,CAAf,CAAV;AACH,GAFD;AAGH,CAJM","sourcesContent":["import * as actionTypes from './actionTypes';\n\nexport const zoomMarker = (center, item) => {\n    return {\n        type: actionTypes.ZOOM_MARKER,\n        center: center,\n        item: item,\n    }\n}\n\nexport const zoomOut = () => {\n    return {\n        type: actionTypes.ZOOM_OUT,\n    }\n}\n\nexport const zoomIn = () => {\n    return {\n        type: actionTypes.ZOOM_IN, \n    }\n}\n\nexport const center = () => {\n    return {\n        type: actionTypes.CENTER, \n    }\n}\n\nexport const resetClickedItem = () => {\n    return {\n        type: actionTypes.RESET_CLICKED_ITEM,\n    }\n}\n\nexport const showDistrictsHelper = () => {\n    console.log('show districts helper')\n    return {\n        type: actionTypes.SHOW_DISTRICTS,\n    }\n}\n\nexport const showDistricts = () => {\n    console.log('show districts')\n    return dispatch => {\n        setTimeout(() => dispatch(showDistrictsHelper(),50));\n    }\n}\n\nexport const setMap = (districts, selectedDistricts, councilMembers, selectedBudgetItems) => {\n    return {\n        type: actionTypes.SET_MAP,\n        districts: districts,\n        selectedDistricts: selectedDistricts,\n        councilMembers: councilMembers,\n        selectedBudgetItems: selectedBudgetItems,\n    }\n}\n\nexport const updateHelper = (districts, selectedDistricts, councilMembers, selectedBudgetItems) => {\n    return {\n        type: actionTypes.UPDATE_MAP,\n        districts: districts,\n        selectedDistricts: selectedDistricts,\n        councilMembers: councilMembers,\n        selectedBudgetItems: selectedBudgetItems,        \n    }\n}\n\nexport const updateMap = (districts, selectedDistricts, councilMembers, selectedBudgetItems) => {\n    return dispatch => {\n        setTimeout(() => dispatch(updateHelper(districts, selectedDistricts, councilMembers, selectedBudgetItems),50));\n    }\n}\n\nexport const resetHelper = () => {    \n    return {\n        type: actionTypes.RESET_MAP,\n    }\n}\n\nexport const resetMap = () => {\n    return dispatch => {\n        setTimeout(() => dispatch(resetHelper(),50));\n    }\n}"]},"metadata":{},"sourceType":"module"}