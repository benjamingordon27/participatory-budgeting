{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/containers/ParticipatoryBudgetMap/BudgetMap/BudgetMap.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MapMarker from '../../../components/UI/MapMarker/MapMarker';\nimport * as actions from '../../../store/actions/index';\nimport { translateCategory } from '../../../util/translateCategory';\nimport Map from '../../../components/Map/Map';\nconst DEFAULT_CENTER = {\n  lat: 40.635,\n  lng: -73.94\n};\n\nclass BudgetMap extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      firstPageLoad: false\n    });\n\n    _defineProperty(this, \"markerClicked\", (center, item) => {\n      this.props.onZoomMarker(center, item); // this.props.history.replace(this.props.url);\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.districts) {\n      this.props.onSetMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('prevProps', prevProps);\n    console.log('newProps', this.props); //when first loaded, set the map up properly to the full map, and we have now loaded\n\n    if (!this.state.firstPageLoad && this.props.loaded) {\n      this.props.onSetMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n      this.setState({\n        firstPageLoad: true\n      });\n    }\n\n    if (prevProps.selectedBudgetItems !== this.props.selectedBudgetItems) {\n      this.props.onResetMap();\n      this.props.onUpdateMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n    }\n\n    if (this.props.participatoryBudget && this.props.router.query && this.props.participatoryBudget !== prevProps.participatoryBudget) {\n      console.log('query and budget changed');\n      console.log('router id', this.props.router.query.id, this.props.router.query === '2');\n\n      if (this.props.router.query.id === '1') {\n        console.log('did we get here?');\n        this.props.onFindItem(this.props.participatoryBudget, this.props.router.query.lat, this.props.router.query.lng, this.props.router.query.title);\n      } else if (this.props.router.query === '2') {\n        console.log('did we get here? 2');\n        this.props.onBudgetFilterFromURL(this.props.participatoryBudget, this.props.router.query);\n      }\n    }\n\n    if (this.props.item !== undefined && this.props.item !== prevProps.item) {\n      this.markerClicked({\n        lat: this.props.item.latitude,\n        lng: this.props.item.longitude\n      }, this.props.item);\n    }\n\n    if (this.props.showDistricts !== prevProps.showDistricts) {\n      console.log('[BudgetMap.js] show districts');\n    }\n  }\n\n  render() {\n    console.log('[BudgetMap.js]', this.props);\n    let markers = [];\n\n    if (this.props.selectedBudgetItems) {\n      this.props.selectedBudgetItems.filter(item => item.latitude && item.longitude).map((item, idx) => {\n        markers.push( /*#__PURE__*/_jsxDEV(MapMarker, {\n          center: this.props.center,\n          lat: item.latitude,\n          lng: item.longitude,\n          item: translateCategory(item),\n          width: '30px',\n          height: '30px',\n          zoom: this.props.zoom ////figure out how to change on zoom change, might have to be rendered not in an array in component but in render itself\n          ,\n          clicked: () => this.markerClicked({\n            lat: item.latitude,\n            lng: item.longitude\n          }, item)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 30\n        }, this));\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '87vh',\n        width: '100%'\n      },\n      children: this.props.mapProps ? /*#__PURE__*/_jsxDEV(Map, _objectSpread(_objectSpread({}, this.props.mapProps), {}, {\n        zoom: this.props.zoom,\n        center: this.props.center,\n        defaultCenter: DEFAULT_CENTER,\n        markers: markers,\n        showDistricts: this.props.showDistricts\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currItem: state.participatoryBudget.currItem,\n    participatoryBudget: state.participatoryBudget.participatoryBudget,\n    councilMemberLoading: state.participatoryBudget.councilMemberLoading,\n    error: state.participatoryBudget.error,\n    councilMembers: state.participatoryBudget.councilMembers,\n    districts: state.participatoryBudget.districts,\n    districtsLoading: state.participatoryBudget.districtsLoading,\n    selectedDistricts: state.participatoryBudget.selectedDistricts,\n    loaded: state.participatoryBudget.loaded,\n    showDistricts: state.setMap.showDistricts,\n    mapProps: state.setMap.mapProps,\n    center: state.setMap.center,\n    zoom: state.setMap.zoom,\n    clickedItem: state.setMap.clickedItem,\n    item: state.subsets.item,\n    selectedBudgetItems: state.subsets.selectedBudgetItems,\n    url: state.setMap.url\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetMap: (districts, selectedDistricts, councilMembers, selectedBudgetItems) => dispatch(actions.setMap(districts, selectedDistricts, councilMembers, selectedBudgetItems)),\n    onUpdateMap: (districts, selectedDistricts, councilMembers, selectedBudgetItems, showDistricts) => dispatch(actions.updateMap(districts, selectedDistricts, councilMembers, selectedBudgetItems, showDistricts)),\n    onResetMap: () => dispatch(actions.resetMap()),\n    onZoomMarker: (center, item) => dispatch(actions.zoomMarker(center, item)),\n    onFindItem: (budget, lat, lng, title) => dispatch(actions.findItem(budget, lat, lng, title)),\n    onBudgetFilterFromURL: (budget, query) => dispatch(actions.budgetFilterFromURL(budget, query))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BudgetMap);","map":{"version":3,"sources":["/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/containers/ParticipatoryBudgetMap/BudgetMap/BudgetMap.js"],"names":["React","Component","connect","MapMarker","actions","translateCategory","Map","DEFAULT_CENTER","lat","lng","BudgetMap","firstPageLoad","center","item","props","onZoomMarker","componentDidMount","districts","onSetMap","selectedDistricts","councilMembers","selectedBudgetItems","componentDidUpdate","prevProps","prevState","console","log","state","loaded","setState","onResetMap","onUpdateMap","participatoryBudget","router","query","id","onFindItem","title","onBudgetFilterFromURL","undefined","markerClicked","latitude","longitude","showDistricts","render","markers","filter","map","idx","push","zoom","height","width","mapProps","mapStateToProps","currItem","councilMemberLoading","error","districtsLoading","setMap","clickedItem","subsets","url","mapDispatchToProps","dispatch","updateMap","resetMap","zoomMarker","budget","findItem","budgetFilterFromURL"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport MapMarker from '../../../components/UI/MapMarker/MapMarker';\nimport * as actions from '../../../store/actions/index';\nimport {translateCategory} from '../../../util/translateCategory';\n\nimport Map from '../../../components/Map/Map';\n\nconst DEFAULT_CENTER = { lat: 40.635, lng: -73.94 };\n\nclass BudgetMap extends Component{\n    state = {\n        firstPageLoad: false,\n    } \n\n    componentDidMount(){               \n        if(this.props.districts){\n            this.props.onSetMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState){\n\n        console.log('prevProps', prevProps)\n        console.log('newProps', this.props)\n\n        //when first loaded, set the map up properly to the full map, and we have now loaded\n        if(!this.state.firstPageLoad && this.props.loaded){\n            this.props.onSetMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n            this.setState({firstPageLoad: true})\n        }\n\n        if((prevProps.selectedBudgetItems !== this.props.selectedBudgetItems)){\n            this.props.onResetMap();            \n            this.props.onUpdateMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);     \n        }    \n\n        if(this.props.participatoryBudget && this.props.router.query && (this.props.participatoryBudget !== prevProps.participatoryBudget)){\n            console.log('query and budget changed');\n            console.log('router id',this.props.router.query.id, this.props.router.query === '2')\n            if(this.props.router.query.id === '1'){\n                console.log('did we get here?')\n                this.props.onFindItem(this.props.participatoryBudget, this.props.router.query.lat, this.props.router.query.lng, this.props.router.query.title);\n            }else if(this.props.router.query === '2'){\n                console.log('did we get here? 2')\n                this.props.onBudgetFilterFromURL(this.props.participatoryBudget, this.props.router.query);            \n            }            \n        }        \n\n        if( this.props.item !== undefined && (this.props.item !== prevProps.item) ){\n            this.markerClicked({lat: this.props.item.latitude, lng: this.props.item.longitude}, this.props.item)\n        }\n        \n        if((this.props.showDistricts !== prevProps.showDistricts)){\n            console.log('[BudgetMap.js] show districts')\n\n        }  \n    }\n\n    markerClicked = (center, item) => {        \n        this.props.onZoomMarker(center, item);        \n        // this.props.history.replace(this.props.url);\n    }\n\n    render(){    \n        console.log('[BudgetMap.js]', this.props)\n\n        let markers = [];    \n        if(this.props.selectedBudgetItems){                    \n            this.props.selectedBudgetItems.filter(item => item.latitude && item.longitude).map((item,idx) => {\n                markers.push(<MapMarker \n                    center={this.props.center}\n                    key={idx} \n                    lat={item.latitude} \n                    lng={item.longitude} \n                    item={translateCategory(item)}\n                    width={'30px'}\n                    height={'30px'}\n                    zoom={this.props.zoom} ////figure out how to change on zoom change, might have to be rendered not in an array in component but in render itself\n                    clicked={() => this.markerClicked({ lat: item.latitude, lng: item.longitude }, item)}/>\n                );\n            })\n        }            \n\n        return(\n            <div style={{ height: '87vh', width: '100%' }}>\n                {this.props.mapProps ?                 \n                    <Map \n                        {...this.props.mapProps} \n                            zoom={this.props.zoom} \n                            center={this.props.center} \n                            defaultCenter={DEFAULT_CENTER}\n                            markers={markers}\n                            showDistricts={this.props.showDistricts}/> \n                    :null}\n            </div>            \n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        currItem: state.participatoryBudget.currItem,\n        participatoryBudget: state.participatoryBudget.participatoryBudget,   \n        councilMemberLoading: state.participatoryBudget.councilMemberLoading,\n        error: state.participatoryBudget.error,\n        councilMembers: state.participatoryBudget.councilMembers,\n        districts: state.participatoryBudget.districts,\n        districtsLoading: state.participatoryBudget.districtsLoading,   \n        selectedDistricts: state.participatoryBudget.selectedDistricts,   \n        loaded: state.participatoryBudget.loaded,\n        \n        showDistricts: state.setMap.showDistricts,\n        mapProps: state.setMap.mapProps,        \n        center: state.setMap.center,\n        zoom: state.setMap.zoom,\n        clickedItem: state.setMap.clickedItem,\n        item: state.subsets.item,\n        selectedBudgetItems: state.subsets.selectedBudgetItems,\n\n        url: state.setMap.url,        \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {        \n        onSetMap: (districts, selectedDistricts, councilMembers, selectedBudgetItems) => dispatch(actions.setMap(districts, selectedDistricts, councilMembers, selectedBudgetItems)),  \n        onUpdateMap: (districts, selectedDistricts, councilMembers, selectedBudgetItems, showDistricts) => dispatch(actions.updateMap(districts, selectedDistricts, councilMembers, selectedBudgetItems, showDistricts)),  \n        onResetMap: () => dispatch(actions.resetMap()),\n        onZoomMarker: (center, item) => dispatch(actions.zoomMarker(center, item)),   \n        \n        onFindItem: (budget, lat, lng, title) => dispatch(actions.findItem(budget, lat, lng, title)),\n        onBudgetFilterFromURL: (budget, query) => dispatch(actions.budgetFilterFromURL(budget, query)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BudgetMap);"]},"metadata":{},"sourceType":"module"}