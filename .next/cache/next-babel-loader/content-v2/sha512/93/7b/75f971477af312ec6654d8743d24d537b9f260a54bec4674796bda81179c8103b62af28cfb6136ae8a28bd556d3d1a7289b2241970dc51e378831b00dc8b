{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/containers/ItemsPage/ItemsControlsManager/ItemsControlsManager.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Dropdown from '../../../components/UI/Dropdown/Dropdown';\nimport Button from '../../../components/UI/Button/Button';\nimport Input from '../../../components/UI/Input/Input';\n\nvar ItemControlsManager = /*#__PURE__*/function (_Component) {\n  _inherits(ItemControlsManager, _Component);\n\n  var _super = _createSuper(ItemControlsManager);\n\n  function ItemControlsManager() {\n    var _this;\n\n    _classCallCheck(this, ItemControlsManager);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      firstPageLoad: false,\n      selectedYear: '',\n      selectedCategory: '',\n      selectedDistrict: '',\n      minCost: '',\n      maxCost: '',\n      minVotes: '',\n      maxVotes: '',\n      councilMember: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"itemsByYear\", function (event) {\n      _this.setState({\n        selectedYear: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"itemsByDistrict\", function (event) {\n      _this.setState({\n        selectedDistrict: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"itemsByCategory\", function (event) {\n      _this.setState({\n        selectedCategory: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"minCostState\", function (event) {\n      _this.setState({\n        minCost: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"maxCostState\", function (event) {\n      _this.setState({\n        maxCost: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"minVotesState\", function (event) {\n      _this.setState({\n        minVotes: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"maxVotesState\", function (event) {\n      _this.setState({\n        maxVotes: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"councilMemberState\", function (event) {\n      _this.setState({\n        councilMember: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearInput\", function () {\n      // console.log('clearing input ', document.querySelectorAll(\"select\"))\n      Array.from(document.querySelectorAll(\"Input\")).forEach(function (input) {\n        return input.value = '';\n      });\n      Array.from(document.querySelectorAll(\"select\")).forEach(function (select) {\n        return select.value = '';\n      });\n\n      _this.setState({\n        selectedYear: '',\n        selectedCategory: '',\n        selectedDistrict: '',\n        minCost: '',\n        maxCost: '',\n        minVotes: '',\n        maxVotes: '',\n        councilMember: ''\n      });\n\n      _this.props.onResetSelectedItems();\n    });\n\n    return _this;\n  }\n\n  _createClass(ItemControlsManager, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        firstPageLoad: false\n      });\n      if (!this.props.participatoryBudget && !this.props.districts && !this.props.councilMembers) this.props.onInitBudget();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (!this.state.firstPageLoad && this.props.loaded) {\n        console.log('we loaded and the first page hasnt loaded'); // this.props.onSetMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n\n        this.setState({\n          firstPageLoad: true\n        });\n\n        if (this.props.router.query) {\n          if (this.props.router.query.id === '1') {\n            console.log('did we load', this.props.router.query.id);\n            console.log('did we load', this.props.router.query.lat, this.props.router.query.lng, this.props.router.query.title);\n            this.props.onFindItem(this.props.participatoryBudget, this.props.router.query.lat, this.props.router.query.lng, this.props.router.query.title);\n          } else if (this.props.router.query.id === '2') {\n            console.log('did we load', this.props.router.query.id);\n            this.props.onBudgetFilterFromURL(this.props.participatoryBudget, this.props.router.query);\n          }\n        }\n      } // if(!this.state.firstPageLoad && this.props.participatoryBudget){\n      //     this.props.onBudgetFilter(this.props.participatoryBudget, this.props.councilMembers,\n      //         this.state.selectedCategory, \n      //         this.state.selectedYear, \n      //         this.state.selectedDistrict, \n      //         this.state.minCost, \n      //         this.state.maxCost,\n      //         this.state.minVotes, \n      //         this.state.maxVotes,   \n      //         this.state.councilMember,                 \n      //         )\n      //     this.setState({firstPageLoad: true}) \n      // }\n\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var data = '';\n\n      if (this.props.loading) {\n        data = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 20\n        }, this);\n      } // console.log('state',this.state)\n\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.props.participatoryBudget && this.props.districts && this.props.councilMembers && this.props.itemCategories ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n            message: 'Items by Council Member',\n            title: 'Council Member',\n            list: this.props.councilMembersList,\n            handleChange: this.councilMemberState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            message: 'Items by district',\n            title: 'Districts',\n            list: this.props.itemDistricts,\n            handleChange: this.itemsByDistrict\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            message: 'Items by year',\n            title: 'Year',\n            list: this.props.itemYears,\n            handleChange: this.itemsByYear\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            message: 'Items by category',\n            title: 'Category',\n            list: this.props.itemCategories,\n            handleChange: this.itemsByCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            label: \"Minimum cost\",\n            handleChange: this.minCostState,\n            step: \"0.01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            label: \"Maximum cost\",\n            handleChange: this.maxCostState,\n            step: \"0.01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            label: \"Minimum votes\",\n            handleChange: this.minVotesState,\n            step: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            label: \"Maximum votes\",\n            handleChange: this.maxVotesState,\n            step: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            message: 'Submit',\n            clicked: function clicked() {\n              return _this2.props.onBudgetFilter(_this2.props.participatoryBudget, _this2.props.councilMembers, _this2.state.selectedCategory, _this2.state.selectedYear, _this2.state.selectedDistrict, _this2.state.minCost, _this2.state.maxCost, _this2.state.minVotes, _this2.state.maxVotes, _this2.state.councilMember);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            message: 'Clear',\n            clicked: function clicked() {\n              return _this2.clearInput();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this) : null, data]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return ItemControlsManager;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currItem: state.participatoryBudget.currItem,\n    participatoryBudget: state.participatoryBudget.participatoryBudget,\n    loading: state.participatoryBudget.loading,\n    councilMemberLoading: state.participatoryBudget.councilMemberLoading,\n    error: state.participatoryBudget.error,\n    councilMembers: state.participatoryBudget.councilMembers,\n    councilMembersList: state.participatoryBudget.councilMembersList,\n    districts: state.participatoryBudget.districts,\n    districtsLoading: state.participatoryBudget.districtsLoading,\n    itemCategories: state.participatoryBudget.itemCategories,\n    itemYears: state.participatoryBudget.itemYears,\n    itemDistricts: state.participatoryBudget.itemDistricts,\n    selectedBudgetItems: state.setMap.selectedBudgetItems\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onResetSelectedItems: function onResetSelectedItems() {\n      return dispatch(actions.resetSelectedItems());\n    },\n    onInitBudget: function onInitBudget() {\n      return dispatch(actions.initBudget());\n    },\n    onZoomIn: function onZoomIn() {\n      return dispatch(actions.zoomIn());\n    },\n    onZoomOut: function onZoomOut() {\n      return dispatch(actions.zoomOut());\n    },\n    onCenter: function onCenter() {\n      return dispatch(actions.center());\n    },\n    onShowDistricts: function onShowDistricts() {\n      return dispatch(actions.showDistricts());\n    },\n    onBudgetFilter: function onBudgetFilter(budget, councilMembers, category, year, district, minCost, maxCost, minVotes, maxVotes, councilMember) {\n      return dispatch(actions.budgetFilter(budget, councilMembers, category, year, district, minCost, maxCost, minVotes, maxVotes, councilMember));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemControlsManager);","map":{"version":3,"sources":["/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/containers/ItemsPage/ItemsControlsManager/ItemsControlsManager.js"],"names":["React","Component","connect","actions","Spinner","Dropdown","Button","Input","ItemControlsManager","firstPageLoad","selectedYear","selectedCategory","selectedDistrict","minCost","maxCost","minVotes","maxVotes","councilMember","event","setState","target","value","Array","from","document","querySelectorAll","forEach","input","select","props","onResetSelectedItems","participatoryBudget","districts","councilMembers","onInitBudget","prevProps","prevState","state","loaded","console","log","router","query","id","lat","lng","title","onFindItem","onBudgetFilterFromURL","data","loading","itemCategories","councilMembersList","councilMemberState","itemDistricts","itemsByDistrict","itemYears","itemsByYear","itemsByCategory","minCostState","maxCostState","minVotesState","maxVotesState","onBudgetFilter","clearInput","mapStateToProps","currItem","councilMemberLoading","error","districtsLoading","selectedBudgetItems","setMap","mapDispatchToProps","dispatch","resetSelectedItems","initBudget","onZoomIn","zoomIn","onZoomOut","zoomOut","onCenter","center","onShowDistricts","showDistricts","budget","category","year","district","budgetFilter"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Dropdown from '../../../components/UI/Dropdown/Dropdown';\nimport Button from '../../../components/UI/Button/Button';\nimport Input from '../../../components/UI/Input/Input';\n\nclass ItemControlsManager extends Component {\n\n    state = {\n        firstPageLoad: false,\n        \n        selectedYear: '',\n        selectedCategory: '',\n        selectedDistrict: '',\n        minCost: '',\n        maxCost: '',\n        minVotes: '',\n        maxVotes: '',\n        councilMember: '',\n    }\n\n    componentDidMount(){      \n        this.setState({firstPageLoad: false});\n        if(!this.props.participatoryBudget && !this.props.districts && !this.props.councilMembers)\n            this.props.onInitBudget();           \n    }\n\n    componentDidUpdate(prevProps, prevState){        \n\n        if(!this.state.firstPageLoad && this.props.loaded){       \n            console.log('we loaded and the first page hasnt loaded')\n            \n            // this.props.onSetMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n            this.setState({firstPageLoad: true})\n\n            if(this.props.router.query){\n                if(this.props.router.query.id === '1'){            \n                    console.log('did we load', this.props.router.query.id)    \n                    console.log('did we load', this.props.router.query.lat, this.props.router.query.lng, this.props.router.query.title)    \n                    this.props.onFindItem(this.props.participatoryBudget, this.props.router.query.lat, this.props.router.query.lng, this.props.router.query.title);\n                }else if(this.props.router.query.id === '2'){                \n                    console.log('did we load', this.props.router.query.id)    \n                    this.props.onBudgetFilterFromURL(this.props.participatoryBudget, this.props.router.query);            \n                }  \n            }\n        }\n\n        // if(!this.state.firstPageLoad && this.props.participatoryBudget){\n        //     this.props.onBudgetFilter(this.props.participatoryBudget, this.props.councilMembers,\n        //         this.state.selectedCategory, \n        //         this.state.selectedYear, \n        //         this.state.selectedDistrict, \n        //         this.state.minCost, \n        //         this.state.maxCost,\n        //         this.state.minVotes, \n        //         this.state.maxVotes,   \n        //         this.state.councilMember,                 \n        //         )\n\n        //     this.setState({firstPageLoad: true}) \n        // }\n    }\n\n    itemsByYear = (event) => {                \n        this.setState({selectedYear: event.target.value})\n    }\n\n    itemsByDistrict = (event) => {        \n        this.setState({selectedDistrict: event.target.value})\n    }\n\n    itemsByCategory = (event) => {                \n        this.setState({selectedCategory: event.target.value})\n    }\n\n    minCostState = (event) => {\n        this.setState({minCost: event.target.value})\n    }\n\n    maxCostState = (event) => {\n        this.setState({maxCost: event.target.value})\n    }\n\n    minVotesState = (event) => {\n        this.setState({minVotes: event.target.value})\n    }\n\n    maxVotesState = (event) => {\n        this.setState({maxVotes: event.target.value})\n    }\n\n    councilMemberState = (event) => {\n        this.setState({councilMember: event.target.value})\n    }\n\n    clearInput = () => {        \n        // console.log('clearing input ', document.querySelectorAll(\"select\"))\n        Array.from(document.querySelectorAll(\"Input\")).forEach(\n            input => (input.value = '')\n        );\n        Array.from(document.querySelectorAll(\"select\")).forEach(\n            select => (select.value = '')\n        );\n        this.setState({\n            selectedYear: '',\n            selectedCategory: '',\n            selectedDistrict: '',\n            minCost: '',\n            maxCost: '',\n            minVotes: '',\n            maxVotes: '',\n            councilMember: '',\n        })\n\n        this.props.onResetSelectedItems();\n    }\n\n    render(){\n        let data ='';\n        if(this.props.loading){\n            data = <Spinner />;\n        }\n\n        // console.log('state',this.state)\n        \n        return (\n            <div>\n                {this.props.participatoryBudget && this.props.districts && this.props.councilMembers && this.props.itemCategories ?\n                    <div>\n                        <Dropdown message={'Items by Council Member'} title= {'Council Member'} list={this.props.councilMembersList} handleChange={this.councilMemberState}/>\n                        <Dropdown message={'Items by district'} title= {'Districts'} list={this.props.itemDistricts} handleChange={this.itemsByDistrict}/>\n                        <Dropdown message={'Items by year'} title={'Year'} list={this.props.itemYears} handleChange={this.itemsByYear}/>\n                        <Dropdown message={'Items by category'} title={'Category'} list={this.props.itemCategories} handleChange={this.itemsByCategory}/>\n                        <Input label='Minimum cost' handleChange={this.minCostState} step='0.01'/>\n                        <Input label='Maximum cost' handleChange={this.maxCostState} step='0.01'/>\n                        <Input label='Minimum votes' handleChange={this.minVotesState} step='1'/>\n                        <Input label='Maximum votes' handleChange={this.maxVotesState} step='1'/>\n\n                        <br></br>\n                        <Button message={'Submit'} clicked = {() => \n                            this.props.onBudgetFilter(this.props.participatoryBudget, this.props.councilMembers,\n                                        this.state.selectedCategory, \n                                        this.state.selectedYear, \n                                        this.state.selectedDistrict, \n                                        this.state.minCost, \n                                        this.state.maxCost,\n                                        this.state.minVotes, \n                                        this.state.maxVotes,   \n                                        this.state.councilMember,                 \n                                        )}/>                                                \n                        <Button message={'Clear'} clicked ={() => this.clearInput()} />\n                    </div>\n                :null}\n                {data}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        currItem: state.participatoryBudget.currItem,\n        participatoryBudget: state.participatoryBudget.participatoryBudget,\n        loading: state.participatoryBudget.loading,\n        councilMemberLoading: state.participatoryBudget.councilMemberLoading,\n        error: state.participatoryBudget.error,\n        councilMembers: state.participatoryBudget.councilMembers,\n        councilMembersList: state.participatoryBudget.councilMembersList,\n        districts: state.participatoryBudget.districts,\n        districtsLoading: state.participatoryBudget.districtsLoading,\n        itemCategories: state.participatoryBudget.itemCategories,\n        itemYears: state.participatoryBudget.itemYears,\n        itemDistricts: state.participatoryBudget.itemDistricts,\n\n        selectedBudgetItems: state.setMap.selectedBudgetItems,        \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onResetSelectedItems: () => dispatch(actions.resetSelectedItems()),\n        onInitBudget: () => dispatch(actions.initBudget()),          \n        onZoomIn: () => dispatch(actions.zoomIn()),\n        onZoomOut: () => dispatch(actions.zoomOut()),\n        onCenter: () => dispatch(actions.center()),\n        onShowDistricts: () => dispatch(actions.showDistricts()),\n        onBudgetFilter: (budget, councilMembers, category, year, district,minCost, maxCost, minVotes, maxVotes, councilMember) => \n            dispatch(actions.budgetFilter(budget, councilMembers,\n                        category, \n                        year, \n                        district, \n                        minCost, \n                        maxCost, \n                        minVotes, \n                        maxVotes,\n                        councilMember,\n                        )),        \n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ItemControlsManager);"]},"metadata":{},"sourceType":"module"}