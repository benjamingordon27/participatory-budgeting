{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/containers/ParticipatoryBudgetMap/BudgetMap/BudgetMap.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MapMarker from '../../../components/UI/MapMarker/MapMarker';\nimport * as actions from '../../../store/actions/index';\nimport { translateCategory } from '../../../util/translateCategory';\nimport Map from '../../../components/Map/Map';\nvar DEFAULT_CENTER = {\n  lat: 40.635,\n  lng: -73.94\n};\n\nvar BudgetMap = /*#__PURE__*/function (_Component) {\n  _inherits(BudgetMap, _Component);\n\n  var _super = _createSuper(BudgetMap);\n\n  function BudgetMap() {\n    var _this;\n\n    _classCallCheck(this, BudgetMap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      firstPageLoad: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"markerClicked\", function (center, item) {\n      _this.props.onZoomMarker(center, item); // this.props.history.replace(this.props.url);\n\n    });\n\n    return _this;\n  }\n\n  _createClass(BudgetMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.districts) {\n        this.props.onSetMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      //when first loaded, set the map up properly to the full map, and we have now loaded\n      if (!this.state.firstPageLoad && this.props.loaded) {\n        this.props.onSetMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n        this.setState({\n          firstPageLoad: true\n        });\n      }\n\n      if (prevProps.selectedBudgetItems !== this.props.selectedBudgetItems) {\n        this.props.onResetMap();\n        this.props.onCenter();\n        this.props.onUpdateMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n      }\n\n      if (this.props.participatoryBudget && this.props.router.query && this.props.participatoryBudget !== prevProps.participatoryBudget) {\n        if (this.props.router.query.id === '1') {\n          this.props.onFindItem(this.props.participatoryBudget, this.props.router.query.lat, this.props.router.query.lng, this.props.router.query.title);\n        } else if (this.props.router.query.id === '2') {\n          this.props.onBudgetFilterFromURL(this.props.participatoryBudget, this.props.router.query);\n        }\n      }\n\n      if (this.props.item !== undefined && this.props.item !== prevProps.item) {\n        this.markerClicked({\n          lat: this.props.item.latitude,\n          lng: this.props.item.longitude\n        }, this.props.item);\n      }\n\n      if (this.props.showDistricts !== prevProps.showDistricts) {\n        console.log('[BudgetMap.js] show districts');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('[BudgetMap.js]', this.props);\n      var markers = [];\n\n      if (this.props.selectedBudgetItems) {\n        this.props.selectedBudgetItems.filter(function (item) {\n          return item.latitude && item.longitude;\n        }).map(function (item, idx) {\n          markers.push( /*#__PURE__*/_jsxDEV(MapMarker, {\n            center: _this2.props.center,\n            lat: item.latitude,\n            lng: item.longitude,\n            item: translateCategory(item),\n            width: '30px',\n            height: '30px',\n            zoom: _this2.props.zoom ////figure out how to change on zoom change, might have to be rendered not in an array in component but in render itself\n            ,\n            clicked: function clicked() {\n              return _this2.markerClicked({\n                lat: item.latitude,\n                lng: item.longitude\n              }, item);\n            }\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 30\n          }, _this2));\n        });\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '87vh',\n          width: '100%'\n        },\n        children: this.props.mapProps ? /*#__PURE__*/_jsxDEV(Map, _objectSpread(_objectSpread({}, this.props.mapProps), {}, {\n          zoom: this.props.zoom,\n          center: this.props.center,\n          defaultCenter: DEFAULT_CENTER,\n          markers: markers,\n          showDistricts: this.props.showDistricts\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return BudgetMap;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currItem: state.participatoryBudget.currItem,\n    participatoryBudget: state.participatoryBudget.participatoryBudget,\n    councilMemberLoading: state.participatoryBudget.councilMemberLoading,\n    error: state.participatoryBudget.error,\n    councilMembers: state.participatoryBudget.councilMembers,\n    districts: state.participatoryBudget.districts,\n    districtsLoading: state.participatoryBudget.districtsLoading,\n    selectedDistricts: state.participatoryBudget.selectedDistricts,\n    loaded: state.participatoryBudget.loaded,\n    showDistricts: state.setMap.showDistricts,\n    mapProps: state.setMap.mapProps,\n    center: state.setMap.center,\n    zoom: state.setMap.zoom,\n    clickedItem: state.setMap.clickedItem,\n    item: state.subsets.item,\n    selectedBudgetItems: state.subsets.selectedBudgetItems,\n    url: state.setMap.url\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSetMap: function onSetMap(districts, selectedDistricts, councilMembers, selectedBudgetItems) {\n      return dispatch(actions.setMap(districts, selectedDistricts, councilMembers, selectedBudgetItems));\n    },\n    onUpdateMap: function onUpdateMap(districts, selectedDistricts, councilMembers, selectedBudgetItems, showDistricts) {\n      return dispatch(actions.updateMap(districts, selectedDistricts, councilMembers, selectedBudgetItems, showDistricts));\n    },\n    onResetMap: function onResetMap() {\n      return dispatch(actions.resetMap());\n    },\n    onZoomMarker: function onZoomMarker(center, item) {\n      return dispatch(actions.zoomMarker(center, item));\n    },\n    onFindItem: function onFindItem(budget, lat, lng, title) {\n      return dispatch(actions.findItem(budget, lat, lng, title));\n    },\n    onBudgetFilterFromURL: function onBudgetFilterFromURL(budget, query) {\n      return dispatch(actions.budgetFilterFromURL(budget, query));\n    },\n    onCenter: function onCenter() {\n      return dispatch(actions.center());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BudgetMap);","map":{"version":3,"sources":["/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/containers/ParticipatoryBudgetMap/BudgetMap/BudgetMap.js"],"names":["React","Component","connect","MapMarker","actions","translateCategory","Map","DEFAULT_CENTER","lat","lng","BudgetMap","firstPageLoad","center","item","props","onZoomMarker","districts","onSetMap","selectedDistricts","councilMembers","selectedBudgetItems","prevProps","prevState","state","loaded","setState","onResetMap","onCenter","onUpdateMap","participatoryBudget","router","query","id","onFindItem","title","onBudgetFilterFromURL","undefined","markerClicked","latitude","longitude","showDistricts","console","log","markers","filter","map","idx","push","zoom","height","width","mapProps","mapStateToProps","currItem","councilMemberLoading","error","districtsLoading","setMap","clickedItem","subsets","url","mapDispatchToProps","dispatch","updateMap","resetMap","zoomMarker","budget","findItem","budgetFilterFromURL"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport MapMarker from '../../../components/UI/MapMarker/MapMarker';\nimport * as actions from '../../../store/actions/index';\nimport {translateCategory} from '../../../util/translateCategory';\n\nimport Map from '../../../components/Map/Map';\n\nconst DEFAULT_CENTER = { lat: 40.635, lng: -73.94 };\n\nclass BudgetMap extends Component{\n    state = {\n        firstPageLoad: false,\n    } \n\n    componentDidMount(){               \n        if(this.props.districts){\n            this.props.onSetMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        //when first loaded, set the map up properly to the full map, and we have now loaded\n        if(!this.state.firstPageLoad && this.props.loaded){\n            this.props.onSetMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);\n            this.setState({firstPageLoad: true})\n        }\n\n        if((prevProps.selectedBudgetItems !== this.props.selectedBudgetItems)){\n            this.props.onResetMap();            \n            this.props.onCenter();\n            this.props.onUpdateMap(this.props.districts, this.props.selectedDistricts, this.props.councilMembers, this.props.selectedBudgetItems);     \n        }    \n\n        if(this.props.participatoryBudget && this.props.router.query && (this.props.participatoryBudget !== prevProps.participatoryBudget)){            \n            if(this.props.router.query.id === '1'){                \n                this.props.onFindItem(this.props.participatoryBudget, this.props.router.query.lat, this.props.router.query.lng, this.props.router.query.title);\n            }else if(this.props.router.query.id === '2'){                \n                this.props.onBudgetFilterFromURL(this.props.participatoryBudget, this.props.router.query);            \n            }            \n        }\n\n        if( this.props.item !== undefined && (this.props.item !== prevProps.item) ){\n            this.markerClicked({lat: this.props.item.latitude, lng: this.props.item.longitude}, this.props.item)\n        }\n        \n        if((this.props.showDistricts !== prevProps.showDistricts)){\n            console.log('[BudgetMap.js] show districts')\n\n        }  \n    }\n\n    markerClicked = (center, item) => {        \n        this.props.onZoomMarker(center, item);        \n        // this.props.history.replace(this.props.url);\n    }\n\n    render(){    \n        console.log('[BudgetMap.js]', this.props)\n\n        let markers = [];    \n        if(this.props.selectedBudgetItems){                    \n            this.props.selectedBudgetItems.filter(item => item.latitude && item.longitude).map((item,idx) => {\n                markers.push(<MapMarker \n                    center={this.props.center}\n                    key={idx} \n                    lat={item.latitude} \n                    lng={item.longitude} \n                    item={translateCategory(item)}\n                    width={'30px'}\n                    height={'30px'}\n                    zoom={this.props.zoom} ////figure out how to change on zoom change, might have to be rendered not in an array in component but in render itself\n                    clicked={() => this.markerClicked({ lat: item.latitude, lng: item.longitude }, item)}/>\n                );\n            })\n        }            \n\n        return(\n            <div style={{ height: '87vh', width: '100%' }}>\n                {this.props.mapProps ?                 \n                    <Map \n                        {...this.props.mapProps} \n                            zoom={this.props.zoom} \n                            center={this.props.center} \n                            defaultCenter={DEFAULT_CENTER}\n                            markers={markers}\n                            showDistricts={this.props.showDistricts}/> \n                    :null}\n            </div>            \n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        currItem: state.participatoryBudget.currItem,\n        participatoryBudget: state.participatoryBudget.participatoryBudget,   \n        councilMemberLoading: state.participatoryBudget.councilMemberLoading,\n        error: state.participatoryBudget.error,\n        councilMembers: state.participatoryBudget.councilMembers,\n        districts: state.participatoryBudget.districts,\n        districtsLoading: state.participatoryBudget.districtsLoading,   \n        selectedDistricts: state.participatoryBudget.selectedDistricts,   \n        loaded: state.participatoryBudget.loaded,\n        \n        showDistricts: state.setMap.showDistricts,\n        mapProps: state.setMap.mapProps,        \n        center: state.setMap.center,\n        zoom: state.setMap.zoom,\n        clickedItem: state.setMap.clickedItem,\n        item: state.subsets.item,\n        selectedBudgetItems: state.subsets.selectedBudgetItems,\n\n        url: state.setMap.url,        \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {        \n        onSetMap: (districts, selectedDistricts, councilMembers, selectedBudgetItems) => dispatch(actions.setMap(districts, selectedDistricts, councilMembers, selectedBudgetItems)),  \n        onUpdateMap: (districts, selectedDistricts, councilMembers, selectedBudgetItems, showDistricts) => dispatch(actions.updateMap(districts, selectedDistricts, councilMembers, selectedBudgetItems, showDistricts)),  \n        onResetMap: () => dispatch(actions.resetMap()),\n        onZoomMarker: (center, item) => dispatch(actions.zoomMarker(center, item)),   \n        \n        onFindItem: (budget, lat, lng, title) => dispatch(actions.findItem(budget, lat, lng, title)),\n        onBudgetFilterFromURL: (budget, query) => dispatch(actions.budgetFilterFromURL(budget, query)),\n\n        onCenter: () => dispatch(actions.center()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BudgetMap);"]},"metadata":{},"sourceType":"module"}