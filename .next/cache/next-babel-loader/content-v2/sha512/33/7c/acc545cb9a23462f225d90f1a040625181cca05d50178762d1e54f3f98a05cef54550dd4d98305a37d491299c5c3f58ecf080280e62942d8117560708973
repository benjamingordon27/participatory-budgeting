{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/containers/Statistics/Statistics.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport HorizontalBarChart from '../../components/D3/HorizontalBarChart/HorizontalBarChart';\nimport BigNumber from '../../components/BigNumber/BigNumber';\nimport * as stats from './statisticHelpers';\n\nvar Statistics = /*#__PURE__*/function (_Component) {\n  _inherits(Statistics, _Component);\n\n  var _super = _createSuper(Statistics);\n\n  function Statistics() {\n    _classCallCheck(this, Statistics);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Statistics, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.participatoryBudget && !this.props.districts && !this.props.councilMembers) this.props.onInitBudget();\n    }\n  }, {\n    key: \"showItem\",\n    value: function showItem(item) {\n      console.log('has the item been clicked?', item);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('[Statistics.js] props', this.props);\n\n      var data = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 20\n      }, this);\n\n      if (this.props.participatoryBudget && this.props.districts && this.props.councilMembers) {\n        // drawChart(this.props.participatoryBudget, 'cost', 700, 400);\n        // data = '';\n        data = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(BigNumber, {\n            label: 'The total amount of money voted on in participatory budgeting from 2012-2017 is: ',\n            dollar: true,\n            number: stats.totalSum(this.props.participatoryBudget, 'cost')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(BigNumber, {\n            label: 'The total amount of votes cast in participatory budgeting from 2012-2017 is: ',\n            dollar: false,\n            number: stats.totalSum(this.props.participatoryBudget, 'votes')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(HorizontalBarChart, {\n            reference: \"yearCostBarChart\",\n            width: 1000,\n            height: 400,\n            draw: true,\n            dataToGraph: stats.itemsPerYear(this.props.participatoryBudget),\n            variable: 'cost',\n            margin: {\n              top: 40,\n              right: 20,\n              bottom: 50,\n              left: 320\n            },\n            xAxisLabel: 'Total Cost by Year',\n            chartTitle: \"Total Cost by Year\",\n            padding: 0.2,\n            rectColor: 'blue',\n            numberColor: 'white',\n            dollar: true,\n            labelClicked: this.showItem,\n            description: ''\n          }, 'yearCost', false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(HorizontalBarChart, {\n            reference: \"yearCountBarChart\",\n            width: 1000,\n            height: 400,\n            draw: true,\n            dataToGraph: stats.itemsPerYear(this.props.participatoryBudget),\n            variable: 'count',\n            margin: {\n              top: 40,\n              right: 20,\n              bottom: 50,\n              left: 320\n            },\n            xAxisLabel: 'Total Budget Items by Year',\n            chartTitle: \"Total Budget Items by Year\",\n            padding: 0.2,\n            rectColor: 'blue',\n            numberColor: 'white',\n            dollar: false,\n            labelClicked: this.showItem,\n            description: ''\n          }, 'yearCount', false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(HorizontalBarChart, {\n            reference: \"yearVotesBarChart\",\n            width: 1000,\n            height: 400,\n            draw: true,\n            dataToGraph: stats.itemsPerYear(this.props.participatoryBudget),\n            variable: 'votes',\n            margin: {\n              top: 40,\n              right: 20,\n              bottom: 50,\n              left: 320\n            },\n            xAxisLabel: 'Total Votes Counted by Year',\n            chartTitle: \"Total Votes Counted by Year\",\n            padding: 0.2,\n            rectColor: 'blue',\n            numberColor: 'white',\n            dollar: false,\n            labelClicked: this.showItem,\n            description: ''\n          }, 'yearVotes', false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(HorizontalBarChart, {\n            reference: \"categoryCostBarChart\",\n            width: 1000,\n            height: 400,\n            draw: true,\n            dataToGraph: stats.itemsPerCategory(this.props.participatoryBudget, 5, 'cost'),\n            variable: 'cost',\n            margin: {\n              top: 40,\n              right: 20,\n              bottom: 50,\n              left: 320\n            },\n            xAxisLabel: 'Total Cost',\n            chartTitle: \"The Top 5 Categories for Participatory Budget Items by Cost\",\n            padding: 0.2,\n            rectColor: 'blue',\n            numberColor: 'white',\n            dollar: true,\n            labelClicked: this.showItem,\n            description: 'The top five categories in terms of money raised in participatory budgeting from 2012-2017 are:'\n          }, 'categoryCost', false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(HorizontalBarChart, {\n            reference: \"categoryCostBarCount\",\n            width: 1000,\n            height: 400,\n            draw: true,\n            dataToGraph: stats.itemsPerCategory(this.props.participatoryBudget, 5, 'count'),\n            variable: 'count',\n            margin: {\n              top: 40,\n              right: 20,\n              bottom: 50,\n              left: 320\n            },\n            xAxisLabel: 'Total Count',\n            chartTitle: \"The Top 5 Categories for Participatory Budget Items by Count\",\n            padding: 0.2,\n            rectColor: 'blue',\n            numberColor: 'white',\n            dollar: false,\n            labelClicked: this.showItem,\n            description: 'The top five categories in terms of count in participatory budgeting from 2012-2017 are:'\n          }, 'categoryCount', false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(HorizontalBarChart, {\n            reference: \"categoryVotesCountBarChart\",\n            width: 1000,\n            height: 400,\n            draw: true,\n            dataToGraph: stats.itemsPerCategory(this.props.participatoryBudget, 5, 'votes'),\n            variable: 'votes',\n            margin: {\n              top: 40,\n              right: 20,\n              bottom: 50,\n              left: 320\n            },\n            xAxisLabel: 'Total Votes',\n            chartTitle: \"The Top 5 Categories for Participatory Budget Items by Votes\",\n            padding: 0.2,\n            rectColor: 'blue',\n            numberColor: 'white',\n            dollar: false,\n            labelClicked: this.showItem,\n            description: 'The top five categories in terms of votes in participatory budgeting from 2012-2017 are:'\n          }, 'categoryVotesCount', false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(HorizontalBarChart, {\n            reference: \"districtVotesCountBarChart\",\n            width: 1000,\n            height: 400,\n            draw: true,\n            dataToGraph: stats.itemsPerDistrict(this.props.participatoryBudget, this.props.councilMembers, 10, 'votes'),\n            variable: 'votes',\n            margin: {\n              top: 40,\n              right: 20,\n              bottom: 50,\n              left: 320\n            },\n            xAxisLabel: 'Total Votes',\n            chartTitle: \"The Top 10 Districts for Participatory Budget Items by Votes\",\n            padding: 0.2,\n            rectColor: 'blue',\n            numberColor: 'white',\n            dollar: false,\n            labelClicked: this.showItem\n          }, 'districtVotesCount', false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(HorizontalBarChart, {\n            reference: \"districtCountBarChart\",\n            width: 1000,\n            height: 400,\n            draw: true,\n            dataToGraph: stats.itemsPerDistrict(this.props.participatoryBudget, this.props.councilMembers, 10, 'count'),\n            variable: 'count',\n            margin: {\n              top: 40,\n              right: 20,\n              bottom: 50,\n              left: 320\n            },\n            xAxisLabel: 'Count',\n            chartTitle: \"The Top 10 Districts for Participatory Budget Items by Count\",\n            padding: 0.2,\n            rectColor: 'blue',\n            numberColor: 'white',\n            dollar: false,\n            labelClicked: this.showItem\n          }, 'districtCount', false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(HorizontalBarChart, {\n            reference: \"districtCostBarChart\",\n            width: 1000,\n            height: 400,\n            draw: true,\n            dataToGraph: stats.itemsPerDistrict(this.props.participatoryBudget, this.props.councilMembers, 10, 'cost'),\n            variable: 'cost',\n            margin: {\n              top: 40,\n              right: 20,\n              bottom: 50,\n              left: 320\n            },\n            xAxisLabel: 'Cost',\n            chartTitle: \"The Top 10 Districts for Participatory Budget Items by Cost\",\n            padding: 0.2,\n            rectColor: 'blue',\n            numberColor: 'white',\n            dollar: true,\n            labelClicked: this.showItem\n          }, 'districtCost', false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(HorizontalBarChart, {\n            reference: \"costBarChart\",\n            width: 1000,\n            height: 400,\n            draw: true,\n            dataToGraph: stats.topTenItemsSorted(10, this.props.participatoryBudget, 'cost'),\n            variable: 'cost',\n            margin: {\n              top: 40,\n              right: 20,\n              bottom: 50,\n              left: 320\n            },\n            xAxisLabel: 'Cost',\n            chartTitle: \"The Top 10 Most Costly Participatory Budgeting Items\",\n            padding: 0.2,\n            rectColor: 'blue',\n            numberColor: 'white',\n            dollar: true,\n            labelClicked: this.showItem\n          }, 'costBarChart', false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(HorizontalBarChart, {\n            reference: \"votesBarChart\",\n            width: 1000,\n            height: 400,\n            draw: true,\n            dataToGraph: stats.topTenItemsSorted(10, this.props.participatoryBudget, 'votes'),\n            variable: 'votes',\n            margin: {\n              top: 40,\n              right: 20,\n              bottom: 50,\n              left: 320\n            },\n            xAxisLabel: 'Votes',\n            chartTitle: \"The Top 10 Most Voted on Participatory Budgeting Items\",\n            padding: 0.2,\n            rectColor: 'lightpink',\n            numberColor: 'black',\n            dollar: false,\n            labelClicked: this.showItem\n          }, 'votesBarChart', false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(HorizontalBarChart, {\n            reference: \"lowCostBarChart\",\n            width: 1000,\n            height: 400,\n            draw: true,\n            dataToGraph: stats.bottomTenItemsSorted(10, this.props.participatoryBudget, 'cost'),\n            variable: 'cost',\n            margin: {\n              top: 40,\n              right: 50,\n              bottom: 50,\n              left: 320\n            },\n            xAxisLabel: 'Cost',\n            chartTitle: \"The 10 Least Costly Participatory Budgeting Items\",\n            padding: 0.2,\n            rectColor: 'green',\n            numberColor: 'white',\n            dollar: true,\n            labelClicked: this.showItem\n          }, 'lowCostBarChart', false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(HorizontalBarChart, {\n            reference: \"lowVotesBarChart\",\n            width: 1000,\n            height: 400,\n            draw: true,\n            dataToGraph: stats.bottomTenItemsSorted(10, this.props.participatoryBudget, 'votes'),\n            variable: 'votes',\n            margin: {\n              top: 40,\n              right: 20,\n              bottom: 50,\n              left: 320\n            },\n            xAxisLabel: 'Votes',\n            chartTitle: \"The 10 Least Voted on Participatory Budgeting Items\",\n            padding: 0.2,\n            rectColor: 'orange',\n            numberColor: 'black',\n            dollar: false,\n            labelClicked: this.showItem\n          }, 'lowVotesBarChart', false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Statistics;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currItem: state.participatoryBudget.currItem,\n    participatoryBudget: state.participatoryBudget.participatoryBudget,\n    loading: state.participatoryBudget.loading,\n    councilMemberLoading: state.participatoryBudget.councilMemberLoading,\n    error: state.participatoryBudget.error,\n    councilMembers: state.participatoryBudget.councilMembers,\n    councilMembersList: state.participatoryBudget.councilMembersList,\n    districts: state.participatoryBudget.districts,\n    districtsLoading: state.participatoryBudget.districtsLoading,\n    itemCategories: state.participatoryBudget.itemCategories,\n    itemYears: state.participatoryBudget.itemYears,\n    itemDistricts: state.participatoryBudget.itemDistricts\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onInitBudget: function onInitBudget() {\n      return dispatch(actions.initBudget());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Statistics);","map":{"version":3,"sources":["/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/containers/Statistics/Statistics.js"],"names":["React","Component","connect","actions","Spinner","HorizontalBarChart","BigNumber","stats","Statistics","props","participatoryBudget","districts","councilMembers","onInitBudget","item","console","log","data","totalSum","itemsPerYear","top","right","bottom","left","showItem","itemsPerCategory","itemsPerDistrict","topTenItemsSorted","bottomTenItemsSorted","mapStateToProps","state","currItem","loading","councilMemberLoading","error","councilMembersList","districtsLoading","itemCategories","itemYears","itemDistricts","mapDispatchToProps","dispatch","initBudget"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport HorizontalBarChart from '../../components/D3/HorizontalBarChart/HorizontalBarChart';\nimport BigNumber from '../../components/BigNumber/BigNumber';\nimport * as stats from './statisticHelpers'\n\nclass Statistics extends Component{    \n\n    componentDidMount(){        \n        if(!this.props.participatoryBudget && !this.props.districts && !this.props.councilMembers)\n            this.props.onInitBudget();    \n    }     \n\n    showItem(item){\n        console.log('has the item been clicked?', item)\n    }\n    \n    render(){\n        console.log('[Statistics.js] props', this.props);\n        let data = <Spinner />;\n        if(this.props.participatoryBudget && this.props.districts && this.props.councilMembers){            \n            // drawChart(this.props.participatoryBudget, 'cost', 700, 400);\n            // data = '';\n            data = \n                <div>\n                    <BigNumber label={'The total amount of money voted on in participatory budgeting from 2012-2017 is: '} dollar={true} number={stats.totalSum(this.props.participatoryBudget, 'cost')} />                    \n                    <BigNumber label={'The total amount of votes cast in participatory budgeting from 2012-2017 is: '} dollar={false} number={stats.totalSum(this.props.participatoryBudget, 'votes')} />\n\n                    <HorizontalBarChart \n                        key={'yearCost'}\n                        reference='yearCostBarChart' \n                        width={1000} \n                        height={400} \n                        draw={true} \n                        dataToGraph={stats.itemsPerYear(this.props.participatoryBudget)} \n                        variable={'cost'}\n                        margin = {{top: 40, right: 20, bottom: 50, left: 320}}\n                        xAxisLabel = {'Total Cost by Year'}\n                        chartTitle = 'Total Cost by Year'\n                        padding = {0.2}\n                        rectColor = {'blue'}\n                        numberColor = {'white'}\n                        dollar = {true}\n                        labelClicked = {this.showItem}\n                        description = {''}\n                    />\n\n                    <HorizontalBarChart \n                        key={'yearCount'}\n                        reference='yearCountBarChart' \n                        width={1000} \n                        height={400} \n                        draw={true} \n                        dataToGraph={stats.itemsPerYear(this.props.participatoryBudget)} \n                        variable={'count'}\n                        margin = {{top: 40, right: 20, bottom: 50, left: 320}}\n                        xAxisLabel = {'Total Budget Items by Year'}\n                        chartTitle = 'Total Budget Items by Year'\n                        padding = {0.2}\n                        rectColor = {'blue'}\n                        numberColor = {'white'}\n                        dollar = {false}\n                        labelClicked = {this.showItem}\n                        description = {''}\n                    />\n\n                    <HorizontalBarChart \n                        key={'yearVotes'}\n                        reference='yearVotesBarChart' \n                        width={1000} \n                        height={400} \n                        draw={true} \n                        dataToGraph={stats.itemsPerYear(this.props.participatoryBudget)} \n                        variable={'votes'}\n                        margin = {{top: 40, right: 20, bottom: 50, left: 320}}\n                        xAxisLabel = {'Total Votes Counted by Year'}\n                        chartTitle = 'Total Votes Counted by Year'\n                        padding = {0.2}\n                        rectColor = {'blue'}\n                        numberColor = {'white'}\n                        dollar = {false}\n                        labelClicked = {this.showItem}\n                        description = {''}\n                    />\n                    \n                    <HorizontalBarChart \n                        key={'categoryCost'}\n                        reference='categoryCostBarChart' \n                        width={1000} \n                        height={400} \n                        draw={true} \n                        dataToGraph={stats.itemsPerCategory(this.props.participatoryBudget, 5, 'cost')} \n                        variable={'cost'}\n                        margin = {{top: 40, right: 20, bottom: 50, left: 320}}\n                        xAxisLabel = {'Total Cost'}\n                        chartTitle = 'The Top 5 Categories for Participatory Budget Items by Cost'\n                        padding = {0.2}\n                        rectColor = {'blue'}\n                        numberColor = {'white'}\n                        dollar = {true}\n                        labelClicked = {this.showItem}\n                        description = {'The top five categories in terms of money raised in participatory budgeting from 2012-2017 are:'}\n                    />\n\n                    <HorizontalBarChart \n                        key={'categoryCount'}\n                        reference='categoryCostBarCount' \n                        width={1000} \n                        height={400} \n                        draw={true} \n                        dataToGraph={stats.itemsPerCategory(this.props.participatoryBudget, 5, 'count')} \n                        variable={'count'}\n                        margin = {{top: 40, right: 20, bottom: 50, left: 320}}\n                        xAxisLabel = {'Total Count'}\n                        chartTitle = 'The Top 5 Categories for Participatory Budget Items by Count'\n                        padding = {0.2}\n                        rectColor = {'blue'}\n                        numberColor = {'white'}\n                        dollar = {false}\n                        labelClicked = {this.showItem}\n                        description = {'The top five categories in terms of count in participatory budgeting from 2012-2017 are:'}\n                    />\n\n                    <HorizontalBarChart \n                        key={'categoryVotesCount'}\n                        reference='categoryVotesCountBarChart' \n                        width={1000} \n                        height={400} \n                        draw={true} \n                        dataToGraph={stats.itemsPerCategory(this.props.participatoryBudget, 5, 'votes')} \n                        variable={'votes'}\n                        margin = {{top: 40, right: 20, bottom: 50, left: 320}}\n                        xAxisLabel = {'Total Votes'}\n                        chartTitle = 'The Top 5 Categories for Participatory Budget Items by Votes'\n                        padding = {0.2}\n                        rectColor = {'blue'}\n                        numberColor = {'white'}\n                        dollar = {false}\n                        labelClicked = {this.showItem}\n                        description = {'The top five categories in terms of votes in participatory budgeting from 2012-2017 are:'}\n                    />\n\n                    <HorizontalBarChart \n                        key={'districtVotesCount'}\n                        reference='districtVotesCountBarChart' \n                        width={1000} \n                        height={400} \n                        draw={true} \n                        dataToGraph={stats.itemsPerDistrict(this.props.participatoryBudget, this.props.councilMembers, 10, 'votes')} \n                        variable={'votes'}\n                        margin = {{top: 40, right: 20, bottom: 50, left: 320}}\n                        xAxisLabel = {'Total Votes'}\n                        chartTitle = 'The Top 10 Districts for Participatory Budget Items by Votes'\n                        padding = {0.2}\n                        rectColor = {'blue'}\n                        numberColor = {'white'}\n                        dollar = {false}\n                        labelClicked = {this.showItem}                        \n                    />\n\n                    <HorizontalBarChart \n                        key={'districtCount'}\n                        reference='districtCountBarChart' \n                        width={1000} \n                        height={400} \n                        draw={true} \n                        dataToGraph={stats.itemsPerDistrict(this.props.participatoryBudget, this.props.councilMembers, 10, 'count')} \n                        variable={'count'}\n                        margin = {{top: 40, right: 20, bottom: 50, left: 320}}\n                        xAxisLabel = {'Count'}\n                        chartTitle = 'The Top 10 Districts for Participatory Budget Items by Count'\n                        padding = {0.2}\n                        rectColor = {'blue'}\n                        numberColor = {'white'}\n                        dollar = {false}\n                        labelClicked = {this.showItem}                        \n                    />\n\n                    <HorizontalBarChart \n                        key={'districtCost'}\n                        reference='districtCostBarChart' \n                        width={1000} \n                        height={400} \n                        draw={true} \n                        dataToGraph={stats.itemsPerDistrict(this.props.participatoryBudget, this.props.councilMembers, 10, 'cost')} \n                        variable={'cost'}\n                        margin = {{top: 40, right: 20, bottom: 50, left: 320}}\n                        xAxisLabel = {'Cost'}\n                        chartTitle = 'The Top 10 Districts for Participatory Budget Items by Cost'\n                        padding = {0.2}\n                        rectColor = {'blue'}\n                        numberColor = {'white'}\n                        dollar = {true}\n                        labelClicked = {this.showItem}                        \n                    />\n\n                    <HorizontalBarChart \n                        key={'costBarChart'}\n                        reference='costBarChart' \n                        width={1000} \n                        height={400} \n                        draw={true} \n                        dataToGraph={stats.topTenItemsSorted(10, this.props.participatoryBudget, 'cost')} \n                        variable={'cost'}\n                        margin = {{top: 40, right: 20, bottom: 50, left: 320}}\n                        xAxisLabel = {'Cost'}\n                        chartTitle = 'The Top 10 Most Costly Participatory Budgeting Items'\n                        padding = {0.2}\n                        rectColor = {'blue'}\n                        numberColor = {'white'}\n                        dollar = {true}\n                        labelClicked = {this.showItem}                        \n                    />\n\n                    <HorizontalBarChart \n                        key={'votesBarChart'}\n                        reference='votesBarChart' \n                        width={1000} \n                        height={400} \n                        draw={true} \n                        dataToGraph={stats.topTenItemsSorted(10, this.props.participatoryBudget, 'votes')} \n                        variable={'votes'}\n                        margin = {{top: 40, right: 20, bottom: 50, left: 320}}\n                        xAxisLabel = {'Votes'}\n                        chartTitle = 'The Top 10 Most Voted on Participatory Budgeting Items'\n                        padding = {0.2}\n                        rectColor = {'lightpink'}\n                        numberColor = {'black'}\n                        dollar = {false}\n                        labelClicked = {this.showItem}\n                    />\n\n                    <HorizontalBarChart\n                        key={'lowCostBarChart'}\n                        reference='lowCostBarChart' \n                        width={1000} \n                        height={400} \n                        draw={true} \n                        dataToGraph={stats.bottomTenItemsSorted(10, this.props.participatoryBudget, 'cost')} \n                        variable={'cost'}\n                        margin = {{top: 40, right: 50, bottom: 50, left: 320}}\n                        xAxisLabel = {'Cost'}\n                        chartTitle = 'The 10 Least Costly Participatory Budgeting Items'\n                        padding = {0.2}\n                        rectColor = {'green'}\n                        numberColor = {'white'}\n                        dollar = {true}\n                        labelClicked = {this.showItem}\n                    />\n\n                    <HorizontalBarChart \n                        key={'lowVotesBarChart'}\n                        reference='lowVotesBarChart' \n                        width={1000} \n                        height={400} \n                        draw={true} \n                        dataToGraph={stats.bottomTenItemsSorted(10, this.props.participatoryBudget, 'votes')} \n                        variable={'votes'}\n                        margin = {{top: 40, right: 20, bottom: 50, left: 320}}\n                        xAxisLabel = {'Votes'}\n                        chartTitle = 'The 10 Least Voted on Participatory Budgeting Items'\n                        padding = {0.2}\n                        rectColor = {'orange'}\n                        numberColor = {'black'}\n                        dollar = {false}\n                        labelClicked = {this.showItem}\n                    />\n                </div>\n            \n        }\n        return(\n            <div>                \n                {data}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        currItem: state.participatoryBudget.currItem,\n        participatoryBudget: state.participatoryBudget.participatoryBudget,\n        loading: state.participatoryBudget.loading,\n        councilMemberLoading: state.participatoryBudget.councilMemberLoading,\n        error: state.participatoryBudget.error,\n        councilMembers: state.participatoryBudget.councilMembers,\n        councilMembersList: state.participatoryBudget.councilMembersList,\n        districts: state.participatoryBudget.districts,\n        districtsLoading: state.participatoryBudget.districtsLoading,\n        itemCategories: state.participatoryBudget.itemCategories,\n        itemYears: state.participatoryBudget.itemYears,\n        itemDistricts: state.participatoryBudget.itemDistricts,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {        \n        onInitBudget: () => dispatch(actions.initBudget()),  \n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Statistics);"]},"metadata":{},"sourceType":"module"}