{"ast":null,"code":"import _defineProperty from \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nimport { translateCategory, translateCategoryText } from '../../util/translateCategory';\nvar initialState = {\n  selectedBudgetItems: null,\n  selectedDistricts: null,\n  action: {},\n  loading: false,\n  item: null\n};\n\nvar filterBudget = function filterBudget(participatoryBudget, councilMembers, category, year, district, minCost, maxCost, minVotes, maxVotes, councilMember) {\n  var newBudget = [];\n  var newCouncil = [];\n  Object.keys(participatoryBudget).map(function (key) {\n    newBudget.push(participatoryBudget[key]);\n  });\n  Object.keys(councilMembers).map(function (key) {\n    newCouncil.push(councilMembers[key]);\n  });\n  if (year !== '') newBudget = newBudget.filter(function (item) {\n    return Number(item.vote_year) === Number(year);\n  });\n  if (category !== '') newBudget = newBudget.filter(function (item) {\n    return translateCategoryText(item.category) === category;\n  });\n  if (district !== '') newBudget = newBudget.filter(function (item) {\n    return item.council_district === district;\n  });\n  if (minCost !== '') newBudget = newBudget.filter(function (item) {\n    return Number(item.cost) >= Number(minCost);\n  });\n  if (maxCost !== '') newBudget = newBudget.filter(function (item) {\n    return Number(item.cost) <= Number(maxCost);\n  });\n  if (minVotes !== '') newBudget = newBudget.filter(function (item) {\n    return Number(item.votes) >= Number(minVotes);\n  });\n  if (maxVotes !== '') newBudget = newBudget.filter(function (item) {\n    return Number(item.votes) <= Number(maxVotes);\n  });\n\n  if (councilMember !== '') {\n    var councilMemberNew = councilMember.split(': ')[1];\n    var currDistrict = newCouncil.filter(function (member) {\n      return member.name === councilMemberNew;\n    })[[0]].district;\n    newBudget = newBudget.filter(function (item) {\n      return item.council_district === currDistrict;\n    });\n  }\n\n  return newBudget;\n};\n\nvar findItem = function findItem(budget, lat, lng, title) {\n  return budget.filter(function (item) {\n    return Number(item.latitude) === Number(lat) && Number(item.longitude) === Number(lng) && item.title === title;\n  })[0];\n};\n\nvar budgetFilterFromURL = function budgetFilterFromURL(budget, query) {\n  console.log('budget filter from url', query);\n  var newBudget = [];\n  Object.keys(budget).map(function (key) {\n    newBudget.push(budget[key]);\n  });\n  if (query.year !== '') newBudget = newBudget.filter(function (item) {\n    return Number(item.vote_year) === Number(query.year);\n  });\n  if (query.category !== '') newBudget = newBudget.filter(function (item) {\n    return translateCategoryText(item.category) === query.category;\n  });\n  if (query.district !== '') newBudget = newBudget.filter(function (item) {\n    return item.council_district === query.district;\n  });\n  if (query.minCost !== '') newBudget = newBudget.filter(function (item) {\n    return Number(item.cost) >= Number(query.minCost);\n  });\n  if (query.maxCost !== '') newBudget = newBudget.filter(function (item) {\n    return Number(item.cost) <= Number(query.maxCost);\n  });\n  if (query.minVotes !== '') newBudget = newBudget.filter(function (item) {\n    return Number(item.votes) >= Number(query.minVotes);\n  });\n  if (query.maxVotes !== '') newBudget = newBudget.filter(function (item) {\n    return Number(item.votes) <= Number(query.maxVotes);\n  });\n  return {\n    selectedBudgetItems: newBudget\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === actionTypes.CHANGE_CATEGORY) console.log('action.category', action.category);\n\n  switch (action.type) {\n    case actionTypes.BUDGET_FILTER:\n      return updateObject(state, {\n        selectedBudgetItems: filterBudget(action.budget, action.councilMembers, action.category, action.year, action.district, action.minCost, action.maxCost, action.minVotes, action.maxVotes, action.councilMember),\n        action: _objectSpread({}, action),\n        loading: false\n      });\n\n    case actionTypes.BUDGET_FILTER_FROM_URL:\n      return updateObject(state, budgetFilterFromURL(action.budget, action.query));\n\n    case actionTypes.RESET_SELECTED_ITEMS:\n      return updateObject(state, {\n        selectedBudgetItems: []\n      });\n\n    case actionTypes.FIND_ITEM:\n      return updateObject(state, {\n        item: findItem(action.budget, action.lat, action.lng, action.title)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/store/reducers/calculateSubsets.js"],"names":["actionTypes","updateObject","translateCategory","translateCategoryText","initialState","selectedBudgetItems","selectedDistricts","action","loading","item","filterBudget","participatoryBudget","councilMembers","category","year","district","minCost","maxCost","minVotes","maxVotes","councilMember","newBudget","newCouncil","Object","keys","map","key","push","filter","Number","vote_year","council_district","cost","votes","councilMemberNew","split","currDistrict","member","name","findItem","budget","lat","lng","title","latitude","longitude","budgetFilterFromURL","query","console","log","reducer","state","type","CHANGE_CATEGORY","BUDGET_FILTER","BUDGET_FILTER_FROM_URL","RESET_SELECTED_ITEMS","FIND_ITEM"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\nimport {translateCategory, translateCategoryText} from '../../util/translateCategory';\n\nconst initialState = {            \n    selectedBudgetItems: null,\n    selectedDistricts: null,\n    action: {},    \n    loading: false,\n    item: null,    \n}\n\nconst filterBudget = (participatoryBudget, councilMembers, category, year, district, minCost, maxCost, minVotes, maxVotes, councilMember) => {\n    let newBudget = [];\n    let newCouncil = [];\n    Object.keys(participatoryBudget).map(key => {\n        newBudget.push(participatoryBudget[key])\n    })\n\n    Object.keys(councilMembers).map(key => {\n        newCouncil.push(councilMembers[key])\n    })\n\n\n    if(year !=='')\n        newBudget = newBudget.filter(item => Number(item.vote_year) === Number(year));\n    if(category !=='')\n        newBudget = newBudget.filter(item => translateCategoryText(item.category) === category);    \n    if(district !=='')\n        newBudget = newBudget.filter(item => item.council_district === district);\n    if(minCost !=='')\n        newBudget = newBudget.filter(item => Number(item.cost) >= Number(minCost));\n    if(maxCost !=='')\n        newBudget = newBudget.filter(item => Number(item.cost) <= Number(maxCost));\n    if(minVotes !=='')\n        newBudget = newBudget.filter(item => Number(item.votes) >= Number(minVotes));\n    if(maxVotes !=='')\n        newBudget = newBudget.filter(item => Number(item.votes) <= Number(maxVotes));\n    if(councilMember !==''){                \n        var councilMemberNew = councilMember.split(': ')[1];        \n        var currDistrict = newCouncil.filter(member => member.name === councilMemberNew)[[0]].district;        \n        newBudget = newBudget.filter(item => item.council_district === currDistrict);\n    }    \n\n    return newBudget;\n}\n\nconst findItem = (budget, lat, lng, title) => {        \n    return budget.filter(item => Number(item.latitude) === Number(lat) && Number(item.longitude) === Number(lng) && item.title === title)[0];\n}\n\nconst budgetFilterFromURL = (budget, query) => {\n    console.log('budget filter from url',query);\n\n    let newBudget = [];\n    \n    Object.keys(budget).map(key => {\n        newBudget.push(budget[key])\n    })\n\n    if(query.year !=='')\n        newBudget = newBudget.filter(item => Number(item.vote_year) === Number(query.year));\n    if(query.category !=='')\n        newBudget = newBudget.filter(item => translateCategoryText(item.category) === query.category);    \n    if(query.district !=='')\n        newBudget = newBudget.filter(item => item.council_district === query.district);\n    if(query.minCost !=='')\n        newBudget = newBudget.filter(item => Number(item.cost) >= Number(query.minCost));\n    if(query.maxCost !=='')\n        newBudget = newBudget.filter(item => Number(item.cost) <= Number(query.maxCost));\n    if(query.minVotes !=='')\n        newBudget = newBudget.filter(item => Number(item.votes) >= Number(query.minVotes));\n    if(query.maxVotes !=='')\n        newBudget = newBudget.filter(item => Number(item.votes) <= Number(query.maxVotes));\n\n    return {\n        selectedBudgetItems: newBudget,\n    }\n}\n\nconst reducer = (state = initialState, action) => {\n    if(action.type === actionTypes.CHANGE_CATEGORY) console.log('action.category', action.category)\n\n    switch(action.type){\n        case actionTypes.BUDGET_FILTER: return updateObject(state, {selectedBudgetItems: filterBudget(action.budget, action.councilMembers, action.category, action.year, action.district, action.minCost, action.maxCost, action.minVotes, action.maxVotes, action.councilMember), action: {...action}, loading: false})\n        case actionTypes.BUDGET_FILTER_FROM_URL: return updateObject(state, budgetFilterFromURL(action.budget, action.query))\n        case actionTypes.RESET_SELECTED_ITEMS: return updateObject(state, {selectedBudgetItems: []})\n        case actionTypes.FIND_ITEM: return updateObject(state, {item: findItem(action.budget, action.lat, action.lng, action.title)})\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}