{"ast":null,"code":"export const priceFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD'\n});\nexport const numberFormatter = num => {\n  return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n};","map":{"version":3,"sources":["/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/src/util/numberFormatting.js"],"names":["priceFormatter","Intl","NumberFormat","style","currency","numberFormatter","num","toString","replace"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AACzDC,EAAAA,KAAK,EAAE,UADkD;AAEzDC,EAAAA,QAAQ,EAAE;AAF+C,CAA/B,CAAvB;AAKP,OAAO,MAAMC,eAAe,GAAIC,GAAD,IAAS;AACpC,SAAOA,GAAG,CAACC,QAAJ,GAAeC,OAAf,CAAuB,uBAAvB,EAAgD,GAAhD,CAAP;AACH,CAFM","sourcesContent":["export const priceFormatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',      \n});\n\nexport const numberFormatter = (num) => {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n"]},"metadata":{},"sourceType":"module"}