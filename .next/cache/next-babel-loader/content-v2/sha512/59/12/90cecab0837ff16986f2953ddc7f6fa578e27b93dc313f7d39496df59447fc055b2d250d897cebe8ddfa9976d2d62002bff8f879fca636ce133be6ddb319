{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nimport { translateCategory, translateCategoryText } from '../../util/translateCategory';\nconst initialState = {\n  selectedBudgetItems: null,\n  selectedDistricts: null,\n  action: {},\n  loading: false,\n  item: null\n};\n\nconst filterBudget = (participatoryBudget, councilMembers, category, year, district, minCost, maxCost, minVotes, maxVotes, councilMember) => {\n  let newBudget = [];\n  let newCouncil = [];\n  Object.keys(participatoryBudget).map(key => {\n    newBudget.push(participatoryBudget[key]);\n  });\n  Object.keys(councilMembers).map(key => {\n    newCouncil.push(councilMembers[key]);\n  });\n  if (year !== '') newBudget = newBudget.filter(item => Number(item.vote_year) === Number(year));\n  if (category !== '') newBudget = newBudget.filter(item => translateCategoryText(item.category) === category);\n  if (district !== '') newBudget = newBudget.filter(item => item.council_district === district);\n  if (minCost !== '') newBudget = newBudget.filter(item => Number(item.cost) >= Number(minCost));\n  if (maxCost !== '') newBudget = newBudget.filter(item => Number(item.cost) <= Number(maxCost));\n  if (minVotes !== '') newBudget = newBudget.filter(item => Number(item.votes) >= Number(minVotes));\n  if (maxVotes !== '') newBudget = newBudget.filter(item => Number(item.votes) <= Number(maxVotes));\n\n  if (councilMember !== '') {\n    var councilMemberNew = councilMember.split(': ')[1];\n    var currDistrict = newCouncil.filter(member => member.name === councilMemberNew)[[0]].district;\n    newBudget = newBudget.filter(item => item.council_district === currDistrict);\n  }\n\n  return newBudget;\n};\n\nconst findItem = (budget, lat, lng, title) => {\n  console.log('[FindItem.js]', budget.filter(item => Number(item.lat) === Number(lat) && Number(item.lng) === Number(lng) && item.title === title));\n  return budget.filter(item => item.lat === lat && item.lng === lng && item.title === title);\n};\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === actionTypes.CHANGE_CATEGORY) console.log('action.category', action.category);\n\n  switch (action.type) {\n    case actionTypes.BUDGET_FILTER:\n      return updateObject(state, {\n        selectedBudgetItems: filterBudget(action.budget, action.councilMembers, action.category, action.year, action.district, action.minCost, action.maxCost, action.minVotes, action.maxVotes, action.councilMember),\n        action: _objectSpread({}, action),\n        loading: false\n      });\n\n    case actionTypes.RESET_SELECTED_ITEMS:\n      return updateObject(state, {\n        selectedBudgetItems: []\n      });\n\n    case actionTypes.FIND_ITEM:\n      return updateObject(state, {\n        item: findItem(action.budget, action.lat, action.lng, action.title)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/store/reducers/calculateSubsets.js"],"names":["actionTypes","updateObject","translateCategory","translateCategoryText","initialState","selectedBudgetItems","selectedDistricts","action","loading","item","filterBudget","participatoryBudget","councilMembers","category","year","district","minCost","maxCost","minVotes","maxVotes","councilMember","newBudget","newCouncil","Object","keys","map","key","push","filter","Number","vote_year","council_district","cost","votes","councilMemberNew","split","currDistrict","member","name","findItem","budget","lat","lng","title","console","log","reducer","state","type","CHANGE_CATEGORY","BUDGET_FILTER","RESET_SELECTED_ITEMS","FIND_ITEM"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAAQC,YAAR,QAA2B,YAA3B;AACA,SAAQC,iBAAR,EAA2BC,qBAA3B,QAAuD,8BAAvD;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,mBAAmB,EAAE,IADJ;AAEjBC,EAAAA,iBAAiB,EAAE,IAFF;AAGjBC,EAAAA,MAAM,EAAE,EAHS;AAIjBC,EAAAA,OAAO,EAAE,KAJQ;AAKjBC,EAAAA,IAAI,EAAE;AALW,CAArB;;AAQA,MAAMC,YAAY,GAAG,CAACC,mBAAD,EAAsBC,cAAtB,EAAsCC,QAAtC,EAAgDC,IAAhD,EAAsDC,QAAtD,EAAgEC,OAAhE,EAAyEC,OAAzE,EAAkFC,QAAlF,EAA4FC,QAA5F,EAAsGC,aAAtG,KAAwH;AACzI,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,UAAU,GAAG,EAAjB;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYb,mBAAZ,EAAiCc,GAAjC,CAAqCC,GAAG,IAAI;AACxCL,IAAAA,SAAS,CAACM,IAAV,CAAehB,mBAAmB,CAACe,GAAD,CAAlC;AACH,GAFD;AAIAH,EAAAA,MAAM,CAACC,IAAP,CAAYZ,cAAZ,EAA4Ba,GAA5B,CAAgCC,GAAG,IAAI;AACnCJ,IAAAA,UAAU,CAACK,IAAX,CAAgBf,cAAc,CAACc,GAAD,CAA9B;AACH,GAFD;AAKA,MAAGZ,IAAI,KAAI,EAAX,EACIO,SAAS,GAAGA,SAAS,CAACO,MAAV,CAAiBnB,IAAI,IAAIoB,MAAM,CAACpB,IAAI,CAACqB,SAAN,CAAN,KAA2BD,MAAM,CAACf,IAAD,CAA1D,CAAZ;AACJ,MAAGD,QAAQ,KAAI,EAAf,EACIQ,SAAS,GAAGA,SAAS,CAACO,MAAV,CAAiBnB,IAAI,IAAIN,qBAAqB,CAACM,IAAI,CAACI,QAAN,CAArB,KAAyCA,QAAlE,CAAZ;AACJ,MAAGE,QAAQ,KAAI,EAAf,EACIM,SAAS,GAAGA,SAAS,CAACO,MAAV,CAAiBnB,IAAI,IAAIA,IAAI,CAACsB,gBAAL,KAA0BhB,QAAnD,CAAZ;AACJ,MAAGC,OAAO,KAAI,EAAd,EACIK,SAAS,GAAGA,SAAS,CAACO,MAAV,CAAiBnB,IAAI,IAAIoB,MAAM,CAACpB,IAAI,CAACuB,IAAN,CAAN,IAAqBH,MAAM,CAACb,OAAD,CAApD,CAAZ;AACJ,MAAGC,OAAO,KAAI,EAAd,EACII,SAAS,GAAGA,SAAS,CAACO,MAAV,CAAiBnB,IAAI,IAAIoB,MAAM,CAACpB,IAAI,CAACuB,IAAN,CAAN,IAAqBH,MAAM,CAACZ,OAAD,CAApD,CAAZ;AACJ,MAAGC,QAAQ,KAAI,EAAf,EACIG,SAAS,GAAGA,SAAS,CAACO,MAAV,CAAiBnB,IAAI,IAAIoB,MAAM,CAACpB,IAAI,CAACwB,KAAN,CAAN,IAAsBJ,MAAM,CAACX,QAAD,CAArD,CAAZ;AACJ,MAAGC,QAAQ,KAAI,EAAf,EACIE,SAAS,GAAGA,SAAS,CAACO,MAAV,CAAiBnB,IAAI,IAAIoB,MAAM,CAACpB,IAAI,CAACwB,KAAN,CAAN,IAAsBJ,MAAM,CAACV,QAAD,CAArD,CAAZ;;AACJ,MAAGC,aAAa,KAAI,EAApB,EAAuB;AACnB,QAAIc,gBAAgB,GAAGd,aAAa,CAACe,KAAd,CAAoB,IAApB,EAA0B,CAA1B,CAAvB;AACA,QAAIC,YAAY,GAAGd,UAAU,CAACM,MAAX,CAAkBS,MAAM,IAAIA,MAAM,CAACC,IAAP,KAAgBJ,gBAA5C,EAA8D,CAAC,CAAD,CAA9D,EAAmEnB,QAAtF;AACAM,IAAAA,SAAS,GAAGA,SAAS,CAACO,MAAV,CAAiBnB,IAAI,IAAIA,IAAI,CAACsB,gBAAL,KAA0BK,YAAnD,CAAZ;AACH;;AAED,SAAOf,SAAP;AACH,CAjCD;;AAmCA,MAAMkB,QAAQ,GAAG,CAACC,MAAD,EAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,KAA6B;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BL,MAAM,CAACZ,MAAP,CAAcnB,IAAI,IAAIoB,MAAM,CAACpB,IAAI,CAACgC,GAAN,CAAN,KAAqBZ,MAAM,CAACY,GAAD,CAA3B,IAAoCZ,MAAM,CAACpB,IAAI,CAACiC,GAAN,CAAN,KAAqBb,MAAM,CAACa,GAAD,CAA/D,IAAwEjC,IAAI,CAACkC,KAAL,KAAeA,KAA7G,CAA5B;AACA,SAAQH,MAAM,CAACZ,MAAP,CAAcnB,IAAI,IAAIA,IAAI,CAACgC,GAAL,KAAaA,GAAb,IAAoBhC,IAAI,CAACiC,GAAL,KAAaA,GAAjC,IAAwCjC,IAAI,CAACkC,KAAL,KAAeA,KAA7E,CAAR;AACH,CAHD;;AAKA,MAAMG,OAAO,GAAG,CAACC,KAAK,GAAG3C,YAAT,EAAuBG,MAAvB,KAAkC;AAC9C,MAAGA,MAAM,CAACyC,IAAP,KAAgBhD,WAAW,CAACiD,eAA/B,EAAgDL,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BtC,MAAM,CAACM,QAAtC;;AAEhD,UAAON,MAAM,CAACyC,IAAd;AACI,SAAKhD,WAAW,CAACkD,aAAjB;AAAgC,aAAOjD,YAAY,CAAC8C,KAAD,EAAQ;AAAC1C,QAAAA,mBAAmB,EAAEK,YAAY,CAACH,MAAM,CAACiC,MAAR,EAAgBjC,MAAM,CAACK,cAAvB,EAAuCL,MAAM,CAACM,QAA9C,EAAwDN,MAAM,CAACO,IAA/D,EAAqEP,MAAM,CAACQ,QAA5E,EAAsFR,MAAM,CAACS,OAA7F,EAAsGT,MAAM,CAACU,OAA7G,EAAsHV,MAAM,CAACW,QAA7H,EAAuIX,MAAM,CAACY,QAA9I,EAAwJZ,MAAM,CAACa,aAA/J,CAAlC;AAAiNb,QAAAA,MAAM,oBAAMA,MAAN,CAAvN;AAAsOC,QAAAA,OAAO,EAAE;AAA/O,OAAR,CAAnB;;AAChC,SAAKR,WAAW,CAACmD,oBAAjB;AAAuC,aAAOlD,YAAY,CAAC8C,KAAD,EAAQ;AAAC1C,QAAAA,mBAAmB,EAAE;AAAtB,OAAR,CAAnB;;AACvC,SAAKL,WAAW,CAACoD,SAAjB;AAA4B,aAAOnD,YAAY,CAAC8C,KAAD,EAAQ;AAACtC,QAAAA,IAAI,EAAE8B,QAAQ,CAAChC,MAAM,CAACiC,MAAR,EAAgBjC,MAAM,CAACkC,GAAvB,EAA4BlC,MAAM,CAACmC,GAAnC,EAAwCnC,MAAM,CAACoC,KAA/C;AAAf,OAAR,CAAnB;;AAC5B;AACI,aAAOI,KAAP;AALR;AAOH,CAVD;;AAYA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\nimport {translateCategory, translateCategoryText} from '../../util/translateCategory';\n\nconst initialState = {            \n    selectedBudgetItems: null,\n    selectedDistricts: null,\n    action: {},    \n    loading: false,\n    item: null,\n}\n\nconst filterBudget = (participatoryBudget, councilMembers, category, year, district, minCost, maxCost, minVotes, maxVotes, councilMember) => {\n    let newBudget = [];\n    let newCouncil = [];\n    Object.keys(participatoryBudget).map(key => {\n        newBudget.push(participatoryBudget[key])\n    })\n\n    Object.keys(councilMembers).map(key => {\n        newCouncil.push(councilMembers[key])\n    })\n\n\n    if(year !=='')\n        newBudget = newBudget.filter(item => Number(item.vote_year) === Number(year));\n    if(category !=='')\n        newBudget = newBudget.filter(item => translateCategoryText(item.category) === category);    \n    if(district !=='')\n        newBudget = newBudget.filter(item => item.council_district === district);\n    if(minCost !=='')\n        newBudget = newBudget.filter(item => Number(item.cost) >= Number(minCost));\n    if(maxCost !=='')\n        newBudget = newBudget.filter(item => Number(item.cost) <= Number(maxCost));\n    if(minVotes !=='')\n        newBudget = newBudget.filter(item => Number(item.votes) >= Number(minVotes));\n    if(maxVotes !=='')\n        newBudget = newBudget.filter(item => Number(item.votes) <= Number(maxVotes));\n    if(councilMember !==''){                \n        var councilMemberNew = councilMember.split(': ')[1];        \n        var currDistrict = newCouncil.filter(member => member.name === councilMemberNew)[[0]].district;        \n        newBudget = newBudget.filter(item => item.council_district === currDistrict);\n    }    \n\n    return newBudget;\n}\n\nconst findItem = (budget, lat, lng, title) => {\n    console.log('[FindItem.js]',budget.filter(item => Number(item.lat) === Number(lat) && Number(item.lng) === Number(lng) && item.title === title));\n    return (budget.filter(item => item.lat === lat && item.lng === lng && item.title === title))\n}\n\nconst reducer = (state = initialState, action) => {\n    if(action.type === actionTypes.CHANGE_CATEGORY) console.log('action.category', action.category)\n\n    switch(action.type){\n        case actionTypes.BUDGET_FILTER: return updateObject(state, {selectedBudgetItems: filterBudget(action.budget, action.councilMembers, action.category, action.year, action.district, action.minCost, action.maxCost, action.minVotes, action.maxVotes, action.councilMember), action: {...action}, loading: false})\n        case actionTypes.RESET_SELECTED_ITEMS: return updateObject(state, {selectedBudgetItems: []})\n        case actionTypes.FIND_ITEM: return updateObject(state, {item: findItem(action.budget, action.lat, action.lng, action.title)})\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}