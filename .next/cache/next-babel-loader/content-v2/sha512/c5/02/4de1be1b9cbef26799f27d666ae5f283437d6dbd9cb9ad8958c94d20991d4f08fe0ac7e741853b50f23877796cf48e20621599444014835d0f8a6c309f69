{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/components/UI/Legend/Legend.js\";\nimport React, { Component } from 'react';\nimport classes from './Legend.module.css';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport Image from 'next/image';\n\nclass Legend extends Component {\n  filter(category) {\n    this.props.onBudgetFilter(this.props.participatoryBudget, this.props.councilMembers, category, '', '', '', '', '', '', '');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Legend,\n      children: Object.keys(this.props.legendMarkers).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => this.filter(key),\n        children: [this.props.zoom <= 12 ? /*#__PURE__*/_jsxDEV(Image, {\n          width: 500,\n          height: 500,\n          src: this.props.legendMarkers[key].dot,\n          alt: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(Image, {\n          width: 500,\n          height: 500,\n          src: this.props.legendMarkers[key].img,\n          alt: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 33\n        }, this), ' ', key]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    participatoryBudget: state.participatoryBudget.participatoryBudget,\n    councilMembers: state.participatoryBudget.councilMembers\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onBudgetFilter: (budget, councilMembers, category, year, district, minCost, maxCost, minVotes, maxVotes, councilMember) => dispatch(actions.budgetFilter(budget, councilMembers, category, year, district, minCost, maxCost, minVotes, maxVotes, councilMember))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Legend);","map":{"version":3,"sources":["/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/components/UI/Legend/Legend.js"],"names":["React","Component","classes","connect","actions","Image","Legend","filter","category","props","onBudgetFilter","participatoryBudget","councilMembers","render","Object","keys","legendMarkers","map","key","zoom","dot","img","mapStateToProps","state","mapDispatchToProps","dispatch","budget","year","district","minCost","maxCost","minVotes","maxVotes","councilMember","budgetFilter"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,8BAAzB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAE3BM,EAAAA,MAAM,CAACC,QAAD,EAAU;AACZ,SAAKC,KAAL,CAAWC,cAAX,CAA0B,KAAKD,KAAL,CAAWE,mBAArC,EAAyD,KAAKF,KAAL,CAAWG,cAApE,EAAmFJ,QAAnF,EAA4F,EAA5F,EAA+F,EAA/F,EAAkG,EAAlG,EAAqG,EAArG,EAAwG,EAAxG,EAA2G,EAA3G,EAA8G,EAA9G;AACH;;AAEDK,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAEX,OAAO,CAACI,MAAxB;AAAA,gBACSQ,MAAM,CAACC,IAAP,CAAY,KAAKN,KAAL,CAAWO,aAAvB,EAAsCC,GAAtC,CAA0CC,GAAG,iBAC1C;AAAK,QAAA,OAAO,EAAE,MAAM,KAAKX,MAAL,CAAYW,GAAZ,CAApB;AAAA,mBACK,KAAKT,KAAL,CAAWU,IAAX,IAAkB,EAAlB,gBACG,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE,GAAd;AAAmB,UAAA,MAAM,EAAE,GAA3B;AAAgC,UAAA,GAAG,EAAE,KAAKV,KAAL,CAAWO,aAAX,CAAyBE,GAAzB,EAA8BE,GAAnE;AAAwE,UAAA,GAAG,EAAEF;AAA7E;AAAA;AAAA;AAAA;AAAA,gBADH,gBAEG,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE,GAAd;AAAmB,UAAA,MAAM,EAAE,GAA3B;AAAgC,UAAA,GAAG,EAAE,KAAKT,KAAL,CAAWO,aAAX,CAAyBE,GAAzB,EAA8BG,GAAnE;AAAwE,UAAA,GAAG,EAAEH;AAA7E;AAAA;AAAA;AAAA;AAAA,gBAHR,EAKK,GALL,EAKUA,GALV;AAAA;AAAA;AAAA;AAAA;AAAA,cADH;AADT;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AArB0B;;AAwB/B,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHZ,IAAAA,mBAAmB,EAAEY,KAAK,CAACZ,mBAAN,CAA0BA,mBAD5C;AAEHC,IAAAA,cAAc,EAAEW,KAAK,CAACZ,mBAAN,CAA0BC;AAFvC,GAAP;AAIH,CALD;;AAOA,MAAMY,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHf,IAAAA,cAAc,EAAE,CAACgB,MAAD,EAASd,cAAT,EAAyBJ,QAAzB,EAAmCmB,IAAnC,EAAyCC,QAAzC,EAAkDC,OAAlD,EAA2DC,OAA3D,EAAoEC,QAApE,EAA8EC,QAA9E,EAAwFC,aAAxF,KACZR,QAAQ,CAACrB,OAAO,CAAC8B,YAAR,CAAqBR,MAArB,EAA6Bd,cAA7B,EACGJ,QADH,EAEGmB,IAFH,EAGGC,QAHH,EAIGC,OAJH,EAKGC,OALH,EAMGC,QANH,EAOGC,QAPH,EAQGC,aARH,CAAD;AAFT,GAAP;AAaH,CAdD;;AAgBA,eAAe9B,OAAO,CAACmB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4ClB,MAA5C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport classes from './Legend.module.css'\nimport {connect} from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport Image from 'next/image';\n\nclass Legend extends Component {\n\n    filter(category){        \n        this.props.onBudgetFilter(this.props.participatoryBudget,this.props.councilMembers,category,'','','','','','','')        \n    }\n\n    render(){\n        return (\n            <div className={classes.Legend}>\n                    {Object.keys(this.props.legendMarkers).map(key => (\n                        <div onClick={() => this.filter(key)}>\n                            {this.props.zoom <=12 ?\n                                <Image width={500} height={500} src={this.props.legendMarkers[key].dot} alt={key} />:\n                                <Image width={500} height={500} src={this.props.legendMarkers[key].img} alt={key} />\n                            }                        \n                            {' '}{key}\n                        </div>\n                    ))}\n                \n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {        \n        participatoryBudget: state.participatoryBudget.participatoryBudget,\n        councilMembers: state.participatoryBudget.councilMembers,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {        \n        onBudgetFilter: (budget, councilMembers, category, year, district,minCost, maxCost, minVotes, maxVotes, councilMember) => \n            dispatch(actions.budgetFilter(budget, councilMembers,\n                        category, \n                        year, \n                        district, \n                        minCost, \n                        maxCost, \n                        minVotes, \n                        maxVotes,\n                        councilMember,\n                        )),        \n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Legend);"]},"metadata":{},"sourceType":"module"}