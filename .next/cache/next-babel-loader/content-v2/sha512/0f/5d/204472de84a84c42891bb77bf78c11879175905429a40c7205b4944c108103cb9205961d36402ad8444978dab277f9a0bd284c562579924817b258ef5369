{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/components/D3/HorizontalBarChart/HorizontalBarChart.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport classes from './HorizontalBarChart.module.css';\nimport { numberFormatter } from '../../../util/numberFormatting';\n\nclass HorizontalBarChart extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"showItem\", idx => {\n      this.props.labelClicked(this.props.dataToGraph[idx]);\n    });\n  }\n\n  render() {\n    let data = this.props.dataToGraph;\n    const innerHeight = this.props.height - this.props.margin.top - this.props.margin.bottom;\n    const innerWidth = this.props.width - this.props.margin.left - this.props.margin.right; //this sets the yScale \n\n    const yScale = d3.scaleBand().domain(data.map(d => d.title)) //the label\n    .range([0, innerHeight]) //ranging from 0 px to the height px\n    .padding(this.props.padding);\n    const xScale = d3.scaleLinear().domain([0, d3.max(data, d => d[this.props.variable])]).range([0, innerWidth]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.HorizontalBarChart,\n      children: [this.props.description ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center',\n          fontSize: '28px'\n        },\n        children: this.props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 43\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: this.props.width,\n        height: this.props.height,\n        children: /*#__PURE__*/_jsxDEV(\"g\", {\n          transform: `translate(${this.props.margin.left}, ${this.props.margin.top})`,\n          children: [xScale.ticks().map((tickValue, idx) => /*#__PURE__*/_jsxDEV(\"g\", {\n            transform: `translate(${xScale(tickValue)},0)`,\n            children: /*#__PURE__*/_jsxDEV(\"text\", {\n              style: {\n                textAnchor: 'middle'\n              },\n              dy: \".71em\",\n              y: innerHeight + 3,\n              children: idx % 2 - 1 ? `${this.props.dollar ? '$' : ''}${numberFormatter(tickValue)}` : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)), yScale.domain().map((tickValue, idx) => /*#__PURE__*/_jsxDEV(\"text\", {\n            style: {\n              textAnchor: 'end'\n            },\n            x: -3,\n            dy: \".32em\",\n            y: yScale(tickValue) + yScale.bandwidth() / 2,\n            onClick: () => this.showItem(idx),\n            children: [tickValue.substring(0, 36), tickValue.length > 36 ? `...` : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)), data.map((d, idx) => /*#__PURE__*/_jsxDEV(\"rect\", {\n            style: {\n              fill: this.props.rectColor\n            },\n            x: 0,\n            y: yScale(d.title),\n            width: xScale(d[this.props.variable]),\n            height: yScale.bandwidth(),\n            onClick: () => this.showItem(idx)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this)), data.map((d, idx) => /*#__PURE__*/_jsxDEV(\"text\", {\n            style: {\n              textAnchor: 'end',\n              fill: this.props.numberColor\n            },\n            dy: \"1.1em\",\n            x: xScale(d[this.props.variable]) - 5,\n            y: yScale(d.title) + this.props.padding * 0.5,\n            onClick: () => this.showItem(idx),\n            children: [this.props.dollar ? '$' : '', numberFormatter(d[this.props.variable])]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"text\", {\n            textAnchor: \"middle\",\n            x: innerWidth / 2,\n            children: this.props.chartTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            textAnchor: \"middle\",\n            x: innerWidth / 2,\n            y: innerHeight + 40,\n            children: this.props.xAxisLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default HorizontalBarChart;","map":{"version":3,"sources":["/Users/benjamingordon/Documents/civic-alley-visualization/data-vis/components/D3/HorizontalBarChart/HorizontalBarChart.js"],"names":["React","Component","d3","classes","numberFormatter","HorizontalBarChart","idx","props","labelClicked","dataToGraph","render","data","innerHeight","height","margin","top","bottom","innerWidth","width","left","right","yScale","scaleBand","domain","map","d","title","range","padding","xScale","scaleLinear","max","variable","description","textAlign","fontSize","ticks","tickValue","textAnchor","dollar","bandwidth","showItem","substring","length","fill","rectColor","numberColor","chartTitle","xAxisLabel"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport * as d3 from \"d3\";\nimport classes from './HorizontalBarChart.module.css';\n\nimport {numberFormatter} from '../../../util/numberFormatting';\n\nclass HorizontalBarChart extends Component {\n\n    showItem = (idx) => {\n        this.props.labelClicked(this.props.dataToGraph[idx]);\n    }\n\n    render(){                   \n\n        let data = this.props.dataToGraph;\n\n        const innerHeight = this.props.height - this.props.margin.top - this.props.margin.bottom;\n        const innerWidth = this.props.width - this.props.margin.left - this.props.margin.right;\n\n        //this sets the yScale \n        const yScale = d3.scaleBand()\n            .domain(data.map(d => d.title)) //the label\n            .range([0, innerHeight]) //ranging from 0 px to the height px\n            .padding(this.props.padding)\n\n        const xScale = d3.scaleLinear()\n            .domain([0, d3.max(data, d => d[this.props.variable])])\n            .range([0, innerWidth]);\n\n        return(\n            \n            <div className={classes.HorizontalBarChart}>\n                {this.props.description ? <p style={{textAlign: 'center', fontSize: '28px'}}>{this.props.description}</p> : null}\n\n                <svg width={this.props.width} height={this.props.height}>\n                    <g transform={`translate(${this.props.margin.left}, ${this.props.margin.top})`}>\n                        \n                        {/* Draw the xAxis */}\n                        {xScale.ticks().map((tickValue,idx) => (\n                            <g transform={`translate(${xScale(tickValue)},0)`}>\n                                <text \n                                    style={{textAnchor: 'middle'}} \n                                    dy='.71em' \n                                    y={innerHeight+3}\n                                >\n                                    {/* {priceFormatter.format(tickValue)} */}\n                                    {(idx%2 - 1) ? `${this.props.dollar?'$':''}${numberFormatter(tickValue)}` : null}\n                                </text>\n                            </g>\n                        ))}\n\n                        {/* Draw the yAxis */}\n                        {yScale.domain().map((tickValue,idx) => (                            \n                            <text \n                                style={{textAnchor: 'end'}} \n                                x={-3} \n                                dy='.32em'\n                                y={yScale(tickValue) + yScale.bandwidth()/2}\n                                onClick = {() => this.showItem(idx)}\n                            >                                    \n                                {tickValue.substring(0, 36)}{tickValue.length > 36 ? `...` :''}\n                            </text>                            \n                        ))}          \n\n                        {/* Draw the bars themselves */}              \n                        {data.map((d,idx) => (\n                                <rect     \n                                    style = {{fill: this.props.rectColor}}       \n                                    x={0} \n                                    y={yScale(d.title)} \n                                    width={xScale(d[this.props.variable])} \n                                    height={yScale.bandwidth()}\n                                    onClick = {() => this.showItem(idx)}\n                                />                            \n                        ))}\n\n                        {/* Draw the labels on the bars */}\n                        {data.map((d,idx) => (\n                                <text            \n                                    style = {{textAnchor: 'end', fill: this.props.numberColor}}                        \n                                    dy='1.1em'\n                                    x={xScale(d[this.props.variable]) - 5} \n                                    y={yScale(d.title)+this.props.padding*0.5} \n                                    onClick = {() => this.showItem(idx)}\n                                > \n                                    {this.props.dollar?'$':''}{numberFormatter(d[this.props.variable])}\n                                </text>\n                        ))}\n                        <text textAnchor='middle' x={innerWidth/2}>{this.props.chartTitle}</text>\n                        <text textAnchor='middle' x={innerWidth/2} y={innerHeight + 40}>{this.props.xAxisLabel}</text>\n                    </g>\n                </svg>\n            </div>\n        );\n    }\n}\n\nexport default HorizontalBarChart;"]},"metadata":{},"sourceType":"module"}